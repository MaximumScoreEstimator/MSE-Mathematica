(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     17997,        438]
NotebookOptionsPosition[     15680,        370]
NotebookOutlinePosition[     16331,        396]
CellTagsIndexPosition[     16245,        391]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["dataArray.nb", "Section",
 CellChangeTimes->{{3.62600628385137*^9, 3.626006284835745*^9}, {
  3.6260709487170696`*^9, 3.6260709533480415`*^9}, {3.626096953477417*^9, 
  3.6260969551364455`*^9}, {3.6261707215015993`*^9, 3.6261707234205446`*^9}, {
  3.6261736078812375`*^9, 3.6261736107103395`*^9}, {3.6263372687397165`*^9, 
  3.6263372730053415`*^9}, {3.6263379196147165`*^9, 
  3.6263379214897165`*^9}},ExpressionUUID->"90154355-23a7-4d29-b291-\
1e53a10fa838"],

Cell[CellGroupData[{

Cell["For the Developer", "Subsubsection",
 CellChangeTimes->{{3.5819225877880845`*^9, 
  3.581922592443351*^9}},ExpressionUUID->"a6cd5bc9-3b08-4904-9270-\
e70d21e7969b"],

Cell["\<\
AutoGeneratedPackage is an option for notebooks that specifies whether a \
package is automatically created when a notebook that contains initialization \
cells or groups is saved.\
\>", "Text",
 CellChangeTimes->{{3.5808982533077106`*^9, 
  3.580898259632072*^9}},ExpressionUUID->"a1cb8448-1381-45a4-b790-\
a7379be72309"],

Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{
   RowBox[{"InputNotebook", "[", "]"}], ",", 
   RowBox[{"AutoGeneratedPackage", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.687961849345646*^9, 3.687961872863017*^9}, {
  3.6879627754887257`*^9, 
  3.687962775861054*^9}},ExpressionUUID->"1c1fbf3e-7859-4356-8bdf-\
bd951ac812bc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$HistoryLength", "=", "0"}], ";"}]], "Input",
 CellChangeTimes->{{3.5816697178146343`*^9, 
  3.581669717815634*^9}},ExpressionUUID->"2d53cd4f-d3c9-4252-8310-\
5e56e4957164"],

Cell[BoxData[
 RowBox[{"ClearSystemCache", "[", "]"}]], "Input",
 CellChangeTimes->{{3.581669726757145*^9, 
  3.5816697379287844`*^9}},ExpressionUUID->"6fef2eb9-33ad-443d-b70a-\
00691e4340e1"],

Cell[BoxData[{
 RowBox[{"directory", "=", 
  RowBox[{"NotebookDirectory", "[", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Get", "[", 
  RowBox[{"\"\<mse.m\>\"", ",", 
   RowBox[{"Path", "\[Rule]", "directory"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6392064512024283`*^9, 3.6392064555015736`*^9}, {
  3.6392064862997465`*^9, 3.6392065233606443`*^9}, {3.6392250169707823`*^9, 
  3.6392250177207823`*^9}, {3.6535358489289207`*^9, 3.653535855296494*^9}, {
  3.709482620021003*^9, 3.70948262065952*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"d5917a80-a825-48c9-996d-238f6134492e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Echo", "[", "\"\<Loaded dataArray.m\>\"", "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.711434116821677*^9, 3.711434132168717*^9}, {
  3.711434316073223*^9, 3.711434320192101*^9}, {3.7114349795513477`*^9, 
  3.71143498731857*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"b5cb01b3-315f-49d8-96a3-ecefecfa31e2"],

Cell[BoxData["\<\"Loaded dataArray.m\"\>"], "Echo",
 CellChangeTimes->{
  3.711434990282939*^9},ExpressionUUID->"abd87d34-5d1d-47da-8e91-\
3fd8e70f5ee9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Global Variables", "Subsubsection",
 CellChangeTimes->{{3.657291947453044*^9, 
  3.657291955069127*^9}},ExpressionUUID->"0ae67f04-2afd-4b28-a446-\
d9a19d5a5eea"],

Cell["MSEresources, ineqmembers, groupIDs", "Text",
 CellChangeTimes->{{3.657291959749161*^9, 3.657291964173264*^9}, {
  3.6572920317819757`*^9, 
  3.657292051670274*^9}},ExpressionUUID->"6fc1a359-4615-49ea-9594-\
ca0338e1060d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["CdataArray[payoffMatrix,xlist] + groupIDs", "Subsection",
 CellChangeTimes->{{3.6119214276834106`*^9, 3.611921433805637*^9}, {
   3.611921486876209*^9, 3.611921507220935*^9}, {3.611921567047522*^9, 
   3.611921570873694*^9}, {3.611921819881147*^9, 3.6119218714719954`*^9}, 
   3.611922316492015*^9, {3.611923472367948*^9, 3.6119234749025593`*^9}, {
   3.6119238538758183`*^9, 3.6119238929560623`*^9}, {3.6119240042360992`*^9, 
   3.611924005627701*^9}, {3.611924454564415*^9, 3.611924457438586*^9}, {
   3.6119328865951743`*^9, 3.611932891712042*^9}, {3.6572941564355307`*^9, 
   3.657294157323481*^9}},ExpressionUUID->"392e778e-538e-4ad3-a2f2-\
e5cb9016d375"],

Cell["\<\
http://mathematica.stackexchange.com/questions/3496/what-is-a-mathematica-\
packed-array\
\>", "Text",
 CellChangeTimes->{
  3.6305689890982256`*^9},ExpressionUUID->"edc9ebbb-81f1-4434-9b6b-\
71f849a3775e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "CdataArray", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CdataArray", "::", "usage"}], "=", 
   "\"\<CdataArray[payoffMatrix,xlist,printflag] creates the dataArray. It \
works either using the \\\"Speed\\\" model or the \\\"Memory\\\" model. It \
uses ineqmembers and Cinequalities internally and for the memory model it \
erases ineqmembers after use.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CdataArray", "[", 
    RowBox[{"payoffMatrix_", ",", "xlist_", ",", 
     RowBox[{"printflag_:", "False"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"dataarray", ",", "head"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dataarray", "=", 
       RowBox[{"Cinequalities", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"payoffMatrix", "[", 
           RowBox[{"[", "##", "]"}], "]"}], "&"}], ",", 
         StyleBox["ineqmembers",
          Background->RGBColor[1, 1, 0]]}], "]"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{"printflag", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"1", ",", "\"\<  \>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ByteCount", "@", "dataarray"}], ",", 
            RowBox[{"MemoryInUse", "[", "]"}], ",", 
            RowBox[{"MaxMemoryUsed", "[", "]"}]}], "}"}]}], "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Switch", "[", 
       RowBox[{
        StyleBox["MSEresources",
         Background->RGBColor[1, 1, 0]], ",", "\[IndentingNewLine]", 
        "\"\<Memory\>\"", ",", 
        RowBox[{
         RowBox[{"head", "=", "Uncompress"}], ";", 
         RowBox[{"ClearAll", "[", 
          StyleBox["ineqmembers",
           Background->RGBColor[1, 1, 0]], "]"}]}], ",", 
        "\[IndentingNewLine]", "\"\<Speed\>\"", ",", 
        RowBox[{
         RowBox[{"head", "=", "Identity"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       StyleBox["groupIDs",
        Background->RGBColor[1, 1, 0]], "=", "\[IndentingNewLine]", 
       RowBox[{"Developer`ToPackedArray", "[", "\[IndentingNewLine]", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"MapIndexed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{"#2", ",", 
               RowBox[{"{", "#1", "}"}]}], "]"}], "&"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"head", "@", "#"}], "]"}], "&"}], "/@", 
             "dataarray"}]}], "]"}], ",", "1"}], "]"}], "\[IndentingNewLine]",
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"printflag", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"2", ",", "\"\<  \>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ByteCount", "@", 
             StyleBox["groupIDs",
              Background->RGBColor[1, 1, 0]]}], ",", 
            RowBox[{"MemoryInUse", "[", "]"}], ",", 
            RowBox[{"MaxMemoryUsed", "[", "]"}]}], "}"}]}], "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"dataarray", "=", 
       RowBox[{"(", 
        RowBox[{"head", "/@", "dataarray"}], ")"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{"printflag", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"3", ",", "\"\<  \>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ByteCount", "@", "dataarray"}], ",", 
            RowBox[{"MemoryInUse", "[", "]"}], ",", 
            RowBox[{"MaxMemoryUsed", "[", "]"}]}], "}"}]}], "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"dataarray", "=", 
       RowBox[{"Flatten", "@", "dataarray"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{"printflag", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"4", ",", "\"\<  \>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ByteCount", "@", "dataarray"}], ",", 
            RowBox[{"MemoryInUse", "[", "]"}], ",", 
            RowBox[{"MaxMemoryUsed", "[", "]"}]}], "}"}]}], "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"dataarray", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Flatten", "@", 
          RowBox[{"Normal", "@", 
           RowBox[{"CoefficientArrays", "[", 
            RowBox[{"#", ",", "xlist"}], "]"}]}]}], "&"}], "/@", 
        "dataarray"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{"printflag", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"5", ",", "\"\<  \>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ByteCount", "@", "dataarray"}], ",", 
            RowBox[{"MemoryInUse", "[", "]"}], ",", 
            RowBox[{"MaxMemoryUsed", "[", "]"}]}], "}"}]}], "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Scan", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"dataarray", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "]"}], "\[Equal]", "1"}], ",", 
           RowBox[{
            RowBox[{"dataarray", "[", 
             RowBox[{"[", "#", "]"}], "]"}], "=", 
            RowBox[{"PadRight", "[", 
             RowBox[{
              RowBox[{"dataarray", "[", 
               RowBox[{"[", "#", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"Length", "[", "xlist", "]"}], "+", "1"}], ",", "0"}], 
             "]"}]}]}], "]"}], "&"}], ",", 
        RowBox[{"Range", "@", 
         RowBox[{"Length", "@", "dataarray"}]}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{"printflag", ",", 
        RowBox[{"Print", "[", 
         RowBox[{"6", ",", "\"\<  \>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ByteCount", "@", "dataarray"}], ",", 
            RowBox[{"MemoryInUse", "[", "]"}], ",", 
            RowBox[{"MaxMemoryUsed", "[", "]"}]}], "}"}]}], "]"}]}], "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"dataArray", "=", 
       RowBox[{"Developer`ToPackedArray", "[", 
        RowBox[{"dataarray", ",", "Real"}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{"Information", "[", 
  RowBox[{"CdataArray", ",", 
   RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6080216407321196`*^9, 3.6080216474035015`*^9}, {
   3.6119219073221045`*^9, 3.611921920687592*^9}, {3.6119219840108795`*^9, 
   3.6119219865071263`*^9}, {3.6119239075472927`*^9, 3.611923912621789*^9}, {
   3.6119239572659273`*^9, 3.611923962226577*^9}, {3.611923993879654*^9, 
   3.6119239950700836`*^9}, {3.6119240343793573`*^9, 3.611924093244464*^9}, {
   3.611924140546576*^9, 3.611924162269919*^9}, 3.611924403841462*^9, {
   3.611924437849942*^9, 3.61192444710668*^9}, {3.611924891832567*^9, 
   3.611924893655567*^9}, {3.611929754123032*^9, 3.6119297896034822`*^9}, {
   3.6119298658359804`*^9, 3.611929865981967*^9}, {3.6119299101672945`*^9, 
   3.6119299352017183`*^9}, {3.611930075080635*^9, 3.6119300764754047`*^9}, {
   3.6265110635477695`*^9, 3.6265111065030336`*^9}, {3.6305676909576006`*^9, 
   3.6305677259107256`*^9}, {3.6305678401919756`*^9, 
   3.6305678481451006`*^9}, {3.6305696834283037`*^9, 
   3.6305696849595537`*^9}, {3.6306116375030885`*^9, 3.630611851493347*^9}, {
   3.630613259667677*^9, 3.630613298308302*^9}, {3.6306757178634043`*^9, 
   3.6306757243009043`*^9}, {3.630680590379029*^9, 3.630680591597779*^9}, {
   3.6307251496539297`*^9, 3.630725178498214*^9}, {3.6307253529715004`*^9, 
   3.630725359399332*^9}, {3.6307253899416904`*^9, 3.630725393286398*^9}, {
   3.630726133263694*^9, 3.6307261640604057`*^9}, {3.630726296679553*^9, 
   3.630726306735217*^9}, {3.6307267998031273`*^9, 3.6307268370042987`*^9}, {
   3.6307269505211782`*^9, 3.630726951487012*^9}, {3.630727050666542*^9, 
   3.630727064154986*^9}, {3.63072735440425*^9, 3.630727459482916*^9}, {
   3.6307275420715284`*^9, 3.6307275592867093`*^9}, 3.630727806823038*^9, {
   3.6307285510154653`*^9, 3.6307285887659874`*^9}, {3.630728633628292*^9, 
   3.630728663480831*^9}, {3.630729927121316*^9, 3.630729930053933*^9}, {
   3.630729968553031*^9, 3.6307299711414986`*^9}, {3.63073256557946*^9, 
   3.6307325701185226`*^9}, {3.6307330856845837`*^9, 
   3.6307330936088552`*^9}, {3.63073319152781*^9, 3.6307332326854897`*^9}, {
   3.6307334837952986`*^9, 3.630733484250759*^9}, 3.6307335502068653`*^9, {
   3.630733994464261*^9, 3.6307340022737093`*^9}, {3.630736205009231*^9, 
   3.630736210099519*^9}, {3.630738231657999*^9, 3.630738295832733*^9}, {
   3.6307383401401634`*^9, 3.6307383704042034`*^9}, {3.630738435681895*^9, 
   3.630738439439186*^9}, {3.630738547721838*^9, 3.6307385984547396`*^9}, {
   3.6307386558871274`*^9, 3.6307386586410336`*^9}, {3.630740399455869*^9, 
   3.630740403576963*^9}, {3.6307405094011154`*^9, 3.6307405492399025`*^9}, {
   3.630740626754966*^9, 3.630740627545005*^9}, {3.630741610893502*^9, 
   3.6307416388004584`*^9}, {3.6307417079905405`*^9, 3.630741750282628*^9}, {
   3.6307431263365264`*^9, 3.630743133087503*^9}, {3.6307432558446264`*^9, 
   3.6307432561665707`*^9}, {3.6307652470086813`*^9, 
   3.6307652495555563`*^9}, {3.6307655807899313`*^9, 
   3.6307655831493063`*^9}, {3.6307738839521875`*^9, 
   3.6307739272646875`*^9}, {3.6311747370117693`*^9, 
   3.6311748435117693`*^9}, {3.631177026589895*^9, 3.6311770446992693`*^9}, {
   3.6311776943242693`*^9, 3.6311776981367693`*^9}, {3.6311777950117693`*^9, 
   3.631177882808645*^9}, {3.6311787513867693`*^9, 3.631178769558645*^9}, 
   3.631179107839895*^9, {3.6327415528869247`*^9, 3.6327416879085827`*^9}, {
   3.633071953300086*^9, 3.6330719548346944`*^9}, {3.688008021786849*^9, 
   3.688008024784863*^9}, {3.688008067050331*^9, 3.6880081312422132`*^9}, {
   3.6935549892852364`*^9, 3.693554989996978*^9}, {3.711434995123103*^9, 
   3.711435006957159*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"dba65561-9072-4348-988b-bff5cd6bf849"],

Cell[BoxData[
 StyleBox["\<\"CdataArray[payoffMatrix,xlist,printflag] creates the \
dataArray. It works either using the \\\"Speed\\\" model or the \
\\\"Memory\\\" model. It uses ineqmembers and Cinequalities internally and \
for the memory model it erases ineqmembers after use.\"\>", "MSG"]], "Print", \
"PrintUsage",
 CellChangeTimes->{3.711435008481595*^9},
 CellTags->
  "Info53711445808-2892324",ExpressionUUID->"8ee8c860-6ec3-4f08-ae77-\
05f2eeaa04c0"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{1920, 1014},
WindowMargins->{{255, Automatic}, {Automatic, 255}},
ShowSelection->True,
AutoIndent->True,
Magnification->1.25,
FrontEndVersion->"11.1 for Linux x86 (64-bit) (April 18, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info53711445808-2892324"->{
  Cell[15180, 356, 460, 9, 
  74, "Print", "ExpressionUUID" -> "8ee8c860-6ec3-4f08-ae77-05f2eeaa04c0",
   CellTags->"Info53711445808-2892324"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info53711445808-2892324", 16077, 384}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 466, 7, 82, "Section", "ExpressionUUID" -> \
"90154355-23a7-4d29-b291-1e53a10fa838"],
Cell[CellGroupData[{
Cell[1070, 33, 170, 3, 45, "Subsubsection", "ExpressionUUID" -> \
"a6cd5bc9-3b08-4904-9270-e70d21e7969b"],
Cell[1243, 38, 332, 7, 40, "Text", "ExpressionUUID" -> \
"a1cb8448-1381-45a4-b790-a7379be72309"],
Cell[1578, 47, 356, 8, 46, "Input", "ExpressionUUID" -> \
"1c1fbf3e-7859-4356-8bdf-bd951ac812bc"],
Cell[1937, 57, 208, 5, 41, "Input", "ExpressionUUID" -> \
"2d53cd4f-d3c9-4252-8310-5e56e4957164"],
Cell[2148, 64, 192, 4, 41, "Input", "ExpressionUUID" -> \
"6fef2eb9-33ad-443d-b70a-00691e4340e1"],
Cell[2343, 70, 591, 11, 94, "Input", "ExpressionUUID" -> \
"d5917a80-a825-48c9-996d-238f6134492e"],
Cell[CellGroupData[{
Cell[2959, 85, 388, 8, 61, "Input", "ExpressionUUID" -> \
"b5cb01b3-315f-49d8-96a3-ecefecfa31e2",
 InitializationCell->True],
Cell[3350, 95, 153, 3, 32, "Echo", "ExpressionUUID" -> \
"abd87d34-5d1d-47da-8e91-3fd8e70f5ee9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3552, 104, 167, 3, 45, "Subsubsection", "ExpressionUUID" -> \
"0ae67f04-2afd-4b28-a446-d9a19d5a5eea"],
Cell[3722, 109, 228, 4, 40, "Text", "ExpressionUUID" -> \
"6fc1a359-4615-49ea-9594-ca0338e1060d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3987, 118, 666, 9, 56, "Subsection", "ExpressionUUID" -> \
"392e778e-538e-4ad3-a2f2-e5cb9016d375"],
Cell[4656, 129, 216, 6, 40, "Text", "ExpressionUUID" -> \
"edc9ebbb-81f1-4434-9b6b-71f849a3775e"],
Cell[CellGroupData[{
Cell[4897, 139, 10280, 215, 964, "Input", "ExpressionUUID" -> \
"dba65561-9072-4348-988b-bff5cd6bf849",
 InitializationCell->True],
Cell[15180, 356, 460, 9, 74, "Print", "ExpressionUUID" -> \
"8ee8c860-6ec3-4f08-ae77-05f2eeaa04c0",
 CellTags->"Info53711445808-2892324"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

