testDefault =
  <|
   "function" -> CmatchMatrix,
   "parameters" -> {},
   "evaluate" -> True,
   "TestID" -> "Not set a TestID yet",
   "MemoryConstraint" -> Quantity[100, "Kilobytes"],
   "TimeConstraint" -> Quantity[.1, "Seconds"]
   |>;

tests =
{

 <|"TestID" -> "generateAssignmentMatrix with numeric values and 1-1 quotas",
  "function" -> generateAssignmentMatrix,
  "Input" -> 
   { {{910.41, 707.28, 706.35, 621.92, 726.38, 960.84, 754.13, 764.83, 
  801.89, 701.89, 653.25, 719.04, 799.99, 774.68, 835.48}, {806.28, 
  686.7, 681.97, 604.14, 723.23, 886.22, 734.38, 747.58, 770.07, 
  675.69, 642.93, 693.31, 784.32, 742.03, 803.43}, {1271.07, 720.4, 
  684.3, 603.58, 728.8, 1176.88, 730.83, 770.25, 862.68, 669.13, 
  646.01, 733.68, 776.64, 879.02, 863.36}, {874.13, 657.26, 637.2, 
  565.54, 700.17, 905.53, 690.04, 720.91, 753.48, 623.97, 615.22, 
  660.75, 744.59, 744.02, 770.05}, {1031.32, 715.69, 691.15, 610.02, 
  749.09, 1033.23, 744.3, 779.32, 827.8, 677.75, 659.65, 723.39, 
  798.59, 824.87, 842.86}},1,1 },
  "ExpectedOutput" -> {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1}, {0, 0, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, 1, 0, 0}, {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
  0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 
  1, 0, 0, 0, 0, 0, 0, 0, 0, 0}}
  |>,
 <|"TestID" -> "generateAssignmentMatrix with numeric values and 3-1 quotas",
  "function" -> generateAssignmentMatrix,
  "Input" -> 
   { {{910.41, 707.28, 706.35, 621.92, 726.38, 960.84, 754.13, 764.83, 
  801.89, 701.89, 653.25, 719.04, 799.99, 774.68, 835.48}, {806.28, 
  686.7, 681.97, 604.14, 723.23, 886.22, 734.38, 747.58, 770.07, 
  675.69, 642.93, 693.31, 784.32, 742.03, 803.43}, {1271.07, 720.4, 
  684.3, 603.58, 728.8, 1176.88, 730.83, 770.25, 862.68, 669.13, 
  646.01, 733.68, 776.64, 879.02, 863.36}, {874.13, 657.26, 637.2, 
  565.54, 700.17, 905.53, 690.04, 720.91, 753.48, 623.97, 615.22, 
  660.75, 744.59, 744.02, 770.05}, {1031.32, 715.69, 691.15, 610.02, 
  749.09, 1033.23, 744.3, 779.32, 827.8, 677.75, 659.65, 723.39, 
  798.59, 824.87, 842.86}},3,1 },
  "ExpectedOutput" -> {{0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 1, 
  0, 0, 0, 0, 0, 1, 0, 0}, {1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 
  0}, {0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0}, {0, 1, 0, 0, 0, 
  0, 0, 0, 1, 0, 0, 0, 0, 0, 1}}
  |>,
 <|"TestID" -> "generateAssignmentMatrix with numeric values and 3-2 quotas",
  "function" -> generateAssignmentMatrix,
  "Input" -> 
   { {{910.41, 707.28, 706.35, 621.92, 726.38, 960.84, 754.13, 764.83, 
  801.89, 701.89, 653.25, 719.04, 799.99, 774.68, 835.48}, {806.28, 
  686.7, 681.97, 604.14, 723.23, 886.22, 734.38, 747.58, 770.07, 
  675.69, 642.93, 693.31, 784.32, 742.03, 803.43}, {1271.07, 720.4, 
  684.3, 603.58, 728.8, 1176.88, 730.83, 770.25, 862.68, 669.13, 
  646.01, 733.68, 776.64, 879.02, 863.36}, {874.13, 657.26, 637.2, 
  565.54, 700.17, 905.53, 690.04, 720.91, 753.48, 623.97, 615.22, 
  660.75, 744.59, 744.02, 770.05}, {1031.32, 715.69, 691.15, 610.02, 
  749.09, 1033.23, 744.3, 779.32, 827.8, 677.75, 659.65, 723.39, 
  798.59, 824.87, 842.86}},3,2 },
  "ExpectedOutput" -> {{0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1}, {0, 0, 0, 0, 0, 0, 1, 
  1, 0, 0, 0, 0, 1, 0, 0}, {1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 
  0}, {0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1}, {1, 0, 0, 0, 0, 
  1, 0, 0, 0, 0, 0, 0, 0, 1, 0}}
  |>,
 <|"TestID" -> "generateAssignmentMatrix with numeric values and {3,3,3,3,3}-1 quotas",
  "function" -> generateAssignmentMatrix,
  "Input" -> 
   { {{910.41, 707.28, 706.35, 621.92, 726.38, 960.84, 754.13, 764.83, 
  801.89, 701.89, 653.25, 719.04, 799.99, 774.68, 835.48}, {806.28, 
  686.7, 681.97, 604.14, 723.23, 886.22, 734.38, 747.58, 770.07, 
  675.69, 642.93, 693.31, 784.32, 742.03, 803.43}, {1271.07, 720.4, 
  684.3, 603.58, 728.8, 1176.88, 730.83, 770.25, 862.68, 669.13, 
  646.01, 733.68, 776.64, 879.02, 863.36}, {874.13, 657.26, 637.2, 
  565.54, 700.17, 905.53, 690.04, 720.91, 753.48, 623.97, 615.22, 
  660.75, 744.59, 744.02, 770.05}, {1031.32, 715.69, 691.15, 610.02, 
  749.09, 1033.23, 744.3, 779.32, 827.8, 677.75, 659.65, 723.39, 
  798.59, 824.87, 842.86}},{3, 3, 3, 3, 3}, 1},
  "ExpectedOutput" -> {{0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 1, 
  0, 0, 0, 0, 0, 1, 0, 0}, {1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 
  0}, {0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0}, {0, 1, 0, 0, 0, 
  0, 0, 0, 1, 0, 0, 0, 0, 0, 1}}
  |>,
 <|"TestID" -> "generateAssignmentMatrix with numeric values and {3, 1, 3, 0, 2}-1 quotas",
  "function" -> generateAssignmentMatrix,
  "Input" -> 
   { {{910.41, 707.28, 706.35, 621.92, 726.38, 960.84, 754.13, 764.83, 
  801.89, 701.89, 653.25, 719.04, 799.99, 774.68, 835.48}, {806.28, 
  686.7, 681.97, 604.14, 723.23, 886.22, 734.38, 747.58, 770.07, 
  675.69, 642.93, 693.31, 784.32, 742.03, 803.43}, {1271.07, 720.4, 
  684.3, 603.58, 728.8, 1176.88, 730.83, 770.25, 862.68, 669.13, 
  646.01, 733.68, 776.64, 879.02, 863.36}, {874.13, 657.26, 637.2, 
  565.54, 700.17, 905.53, 690.04, 720.91, 753.48, 623.97, 615.22, 
  660.75, 744.59, 744.02, 770.05}, {1031.32, 715.69, 691.15, 610.02, 
  749.09, 1033.23, 744.3, 779.32, 827.8, 677.75, 659.65, 723.39, 
  798.59, 824.87, 842.86}}, {3, 1, 3, 0, 2}, 1 },
  "ExpectedOutput" -> {{0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1}, {0, 0, 0, 0, 1, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 
  0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 
  0, 0, 1, 1, 0, 0, 0, 0, 0, 0}}
  |>,
 <|"TestID" -> "generateAssignmentMatrix with numeric values and {3, 1, 3, 0, 2}, {1, 0, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0} quotas",
  "function" -> generateAssignmentMatrix,
  "Input" -> 
   { {{910.41, 707.28, 706.35, 621.92, 726.38, 960.84, 754.13, 764.83, 
  801.89, 701.89, 653.25, 719.04, 799.99, 774.68, 835.48}, {806.28, 
  686.7, 681.97, 604.14, 723.23, 886.22, 734.38, 747.58, 770.07, 
  675.69, 642.93, 693.31, 784.32, 742.03, 803.43}, {1271.07, 720.4, 
  684.3, 603.58, 728.8, 1176.88, 730.83, 770.25, 862.68, 669.13, 
  646.01, 733.68, 776.64, 879.02, 863.36}, {874.13, 657.26, 637.2, 
  565.54, 700.17, 905.53, 690.04, 720.91, 753.48, 623.97, 615.22, 
  660.75, 744.59, 744.02, 770.05}, {1031.32, 715.69, 691.15, 610.02, 
  749.09, 1033.23, 744.3, 779.32, 827.8, 677.75, 659.65, 723.39, 
  798.59, 824.87, 842.86}},{3, 1, 3, 0, 2}, {1, 0, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0} },
  "ExpectedOutput" -> {{0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0}, {0, 0, 0, 0, 1, 0, 0, 
  0, 0, 0, 0, 0, 0, 0, 0}, {1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 
  0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 
  0, 0, 1, 1, 0, 0, 0, 0, 0, 0}}
  |>,
 <|"TestID" -> "CmatchMatrix on precomp_testdata.dat for {1, 2, 1.5, 2.3} b-values",
  "function" -> Identity,
  "Input" -> 
   { 
   {header, noM, noU, noD, noAttr, distanceMatrices, matchMatrix, mate} =
   import[importdata <> "precomp_testdata.dat", "precomp"];
   payoffMatrix = CpayoffMatrix[payoffDM, noM, noU, noD];
   (*Setting real values for x's (Only then the matchMatrix can be calculated - it is a numerical computation - not symbolic)*)
   payoffMatrix = payoffMatrix /. Thread[Cx[4] -> {1, 2, 1.5, 2.3}];
   CmatchMatrix[payoffMatrix, 2, 1] 
   },
  "ExpectedOutput" -> {{{0, 0, 0, 0, 0, 0, 0, 0, 1, 0}, {0, 0, 0, 1, 0, 1, 0, 0, 0, 0}, {0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 0, 0, 0, 0, 0}, {0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, {1, 0, 0, 
   0, 0, 0, 1, 0, 0, 0}, {0, 1, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 
   0, 0, 0, 0, 0, 1}, {0, 0, 0, 0, 0, 0, 0, 1, 0, 0}}, {{0, 0, 0, 0, 
   1, 0, 0, 0, 1, 0}, {0, 0, 0, 0, 0, 0, 1, 0, 0, 0}, {0, 0, 0, 1, 0, 
   0, 0, 0, 0, 1}, {0, 1, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {1, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 1, 0, 1, 0, 0}}, {{0, 0, 0, 0, 0, 0, 1, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 
   0}, {1, 1, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 1, 0, 0, 0, 
   0}, {0, 0, 1, 0, 0, 0, 0, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 1, 0, 0, 0, 0, 0, 1}}}
  |>,
 <|"TestID" -> "CmatchMatrix same payoffMatrix {{2, 2, 2, 2, 2, 2, 2, 2, 2, 2}, {2, 2, 2, 2, 2, 2, 2, 2, 2, 2}, {2, 2, 2, 2, 2, 2, 2, 2, 2, 2}}, 1 quotas",
  "function" -> CmatchMatrix,
  "Input" -> 
   { payoffMatrix, {{2, 2, 2, 2, 2, 2, 2, 2, 2, 2}, {2, 2, 2, 2, 2, 2, 2, 2, 2, 2}, {2, 2, 2, 2, 2, 2, 2, 2, 2, 2}}, 1 },
  "ExpectedOutput" -> {{{0, 0, 0, 0, 0, 0, 0, 0, 1, 0}, {0, 0, 0, 1, 0, 1, 0, 0, 0, 0}, {0, 
   0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 0, 0, 0, 0, 0}, {0, 0, 
   0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, {1, 0, 0, 
   0, 0, 0, 1, 0, 0, 0}, {0, 1, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 
   0, 0, 0, 0, 0, 1}, {0, 0, 0, 0, 0, 0, 0, 1, 0, 0}}, {{0, 0, 0, 0, 
   1, 0, 0, 0, 1, 0}, {0, 0, 0, 0, 0, 0, 1, 0, 0, 0}, {0, 0, 0, 1, 0, 
   0, 0, 0, 0, 1}, {0, 1, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 
   0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {1, 0, 0, 0, 0, 0, 0, 
   0, 0, 0}, {0, 0, 1, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 1, 0, 1, 0, 0}}, {{0, 0, 0, 0, 0, 0, 1, 0, 
   0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 
   0}, {1, 1, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 1, 0, 0, 0, 
   0}, {0, 0, 1, 0, 0, 0, 0, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 1, 0, 0, 0, 0, 0, 1}}},
  "MemoryConstraint" -> Quantity[200, "Kilobytes"]
  |>,
 <|"TestID" -> "CmatchMatrix same payoffMatrix {{2, 2, 2, 2, 2, 2, 2, 2, 2, 2}, {2, 2, 2, 2, 2, 2, 2, 2, 2, 2}, {2, 2, 2, 2, 2, 2, 2, 2, 2, 2}}, {{2, 2, 2, 2, 2, 2, 2, 2, 2, 2}, {2, 2, 2, 2, 2, 2, 2, 2, 2, 2}, {2, 2, 2, 2, 2, 2, 2, 2, 2, 2}} quotas",
  "function" -> CmatchMatrix,
  "Input" -> 
   { payoffMatrix, {{2, 2, 2, 2, 2, 2, 2, 2, 2, 2}, {2, 2, 2, 2, 2, 2, 2, 2, 2, 2}, {2, 2, 2, 2, 2, 2, 2, 2, 2, 2}}, {{2, 2, 2, 2, 2, 2, 2, 2, 2, 2}, {2, 2, 2, 2, 2, 2, 2, 2, 2, 2}, {2, 2, 2, 2, 2, 2, 2, 2, 2, 2}} },
  "ExpectedOutput" -> {{{0, 0, 0, 0, 0, 1, 0, 0, 1, 0}, {1, 0, 0, 1, 0, 0, 0, 0, 0, 0}, {0, 
   0, 1, 0, 0, 1, 0, 0, 0, 0}, {0, 0, 0, 1, 1, 0, 0, 0, 0, 0}, {0, 1, 
   0, 0, 0, 0, 1, 0, 0, 0}, {1, 0, 0, 0, 0, 0, 0, 1, 0, 0}, {0, 0, 0, 
   0, 1, 0, 1, 0, 0, 0}, {0, 1, 0, 0, 0, 0, 0, 0, 0, 1}, {0, 0, 1, 0, 
   0, 0, 0, 0, 0, 1}, {0, 0, 0, 0, 0, 0, 0, 1, 1, 0}}, {{0, 0, 0, 0, 
   0, 0, 0, 0, 1, 1}, {1, 0, 0, 0, 0, 0, 1, 0, 0, 0}, {0, 0, 1, 1, 0, 
   0, 0, 0, 0, 0}, {1, 1, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 
   0, 1, 0, 1}, {0, 0, 0, 1, 1, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 0, 
   0, 1, 0}, {0, 0, 1, 0, 0, 0, 1, 0, 0, 0}, {0, 1, 0, 0, 1, 0, 0, 0, 
   0, 0}, {0, 0, 0, 0, 0, 1, 0, 1, 0, 0}}, {{0, 0, 0, 0, 0, 0, 1, 1, 
   0, 0}, {0, 0, 1, 0, 0, 0, 1, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 
   1}, {1, 1, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 0, 0, 0, 1, 
   0}, {0, 0, 0, 0, 1, 1, 0, 0, 0, 0}, {0, 0, 1, 0, 0, 1, 0, 0, 0, 
   0}, {0, 0, 0, 1, 0, 0, 0, 1, 0, 0}, {1, 1, 0, 0, 0, 0, 0, 0, 0, 
   0}, {0, 0, 0, 1, 0, 0, 0, 0, 0, 1}}},
  "MemoryConstraint" -> Quantity[200, "Kilobytes"]
  |>
}


