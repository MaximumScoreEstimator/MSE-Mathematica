(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     21343,        581]
NotebookOptionsPosition[     19351,        507]
NotebookOutlinePosition[     20010,        533]
CellTagsIndexPosition[     19923,        528]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["payoff.nb", "Section",
 CellChangeTimes->{{3.62600628385137*^9, 3.626006284835745*^9}, {
  3.6260709487170696`*^9, 3.6260709533480415`*^9}, {3.626096953477417*^9, 
  3.6260969551364455`*^9}}],

Cell[CellGroupData[{

Cell["For the Developer", "Subsubsection",
 CellChangeTimes->{{3.5819225877880845`*^9, 3.581922592443351*^9}}],

Cell["\<\
AutoGeneratedPackage is an option for notebooks that specifies whether a \
package is automatically created when a notebook that contains initialization \
cells or groups is saved.\
\>", "Text",
 CellChangeTimes->{{3.5808982533077106`*^9, 3.580898259632072*^9}}],

Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{
   RowBox[{"InputNotebook", "[", "]"}], ",", 
   RowBox[{"AutoGeneratedPackage", "\[Rule]", "Automatic"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$HistoryLength", "=", "0"}], ";"}]], "Input",
 CellChangeTimes->{{3.5816697178146343`*^9, 3.581669717815634*^9}}],

Cell[BoxData[
 RowBox[{"ClearSystemCache", "[", "]"}]], "Input",
 CellChangeTimes->{{3.581669726757145*^9, 3.5816697379287844`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Global Variables", "Subsubsection",
 CellChangeTimes->{{3.657288991936186*^9, 3.6572889972081127`*^9}, 
   3.65728905845613*^9}],

Cell["noAttr, u, d, noM, noU, noD, distanceMatrices", "Text",
 CellChangeTimes->{{3.657289004224656*^9, 3.657289020712091*^9}, {
  3.65728909112864*^9, 3.6572891045682173`*^9}},
 Background->RGBColor[1, 1, 0]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cx", "Subsection",
 CellChangeTimes->{{3.626169503603243*^9, 3.62616950426756*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "Cx", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Cx", "::", "usage"}], "=", 
   "\"\<Cx[n] creates a list of n variables named x1,x2,...,xn.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Cx", "[", "n_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Symbol", "[", 
      RowBox[{"\"\<x\>\"", "<>", 
       RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6260970725552883`*^9, 3.6260972022973456`*^9}, {
  3.6261692693125653`*^9, 3.626169274830132*^9}, {3.6263451577501373`*^9, 
  3.6263451994688873`*^9}},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell["payoff", "Subsection",
 CellChangeTimes->{{3.62616950983075*^9, 3.6261695125817266`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "payoff", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"payoff", "::", "usage"}], "=", 
   "\"\<payoff[m,i,j] returns the payoff of i-upstream and j-upstream in the \
m-market.\\r\nIt is used in the case of importing streams (not precomputed). \
It is assumed that u , d , and noAttr have been already assigned.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"payoff", "[", 
    RowBox[{"m_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Prepend", "[", 
       RowBox[{
        RowBox[{"Cx", "[", 
         RowBox[{
          StyleBox["noAttr",
           Background->RGBColor[1, 1, 0]], "-", "1"}], "]"}], ",", "1"}], 
       "]"}], 
      RowBox[{
       StyleBox["u",
        Background->RGBColor[1, 1, 0]], "[", 
       RowBox[{"[", 
        RowBox[{"m", ",", "i"}], "]"}], "]"}]}], ")"}], ".", 
    RowBox[{
     StyleBox["d",
      Background->RGBColor[1, 1, 0]], "[", 
     RowBox[{"[", 
      RowBox[{"m", ",", "j"}], "]"}], "]"}]}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6260969688470917`*^9, 3.626096978734878*^9}, {
   3.626097218817205*^9, 3.6260972527523394`*^9}, {3.6260972966312456`*^9, 
   3.6260973035157413`*^9}, {3.626097613365889*^9, 3.6260976281539745`*^9}, 
   3.6261105568706055`*^9, {3.6261692802920585`*^9, 3.6261692900482745`*^9}, {
   3.6261696027442513`*^9, 3.62616962853998*^9}, {3.6263456135001373`*^9, 
   3.6263457717657623`*^9}, {3.6263458174220123`*^9, 
   3.6263458350470123`*^9}, {3.632739732008258*^9, 3.6327397398325505`*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "payoffDM", "]"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"DM", " ", "from", " ", "Distance", " ", "Matrix"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"payoffDM", "::", "usage"}], "=", 
   "\"\<payoffDM[m,i,j] returns the payoff of i-upstream and j-upstream in \
the m-market.\\r\nIt is used in the case of precomputed data. It is assumed \
that noAttr and distanceMatrices have been already assigned.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"payoffDM", "[", 
    RowBox[{"m_", ",", "i_", ",", "j_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Prepend", "[", 
     RowBox[{
      RowBox[{"Cx", "[", 
       RowBox[{
        StyleBox["noAttr",
         Background->RGBColor[1, 1, 0]], "-", "1"}], "]"}], ",", "1"}], "]"}],
     ".", 
    RowBox[{
     StyleBox["distanceMatrices",
      Background->RGBColor[1, 1, 0]], "[", 
     RowBox[{"[", 
      RowBox[{"m", ",", "i", ",", "j"}], "]"}], "]"}]}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.612012388803448*^9, 3.612012423100323*^9}, 
   3.626169883844104*^9, 3.626171560119195*^9, {3.6261727802254305`*^9, 
   3.6261727846650887`*^9}, {3.626172896174202*^9, 3.6261729336334953`*^9}, {
   3.6263458504220123`*^9, 3.6263459143438873`*^9}, {3.6327397695123205`*^9, 
   3.6327397767115393`*^9}},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell["CpayoffMatrix[payoff,noM,noU,noD]", "Subsection",
 CellChangeTimes->{
  3.6117411131376095`*^9, 3.611741233674157*^9, {3.611741277829609*^9, 
   3.6117412916970325`*^9}, {3.611912880528715*^9, 3.611912891202575*^9}, {
   3.6119140905750036`*^9, 3.611914092263646*^9}, {3.611918058468073*^9, 
   3.611918059112929*^9}, 3.6119214516902895`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "C", " ", "in", " ", "front", " ", "of", " ", "the", " ", "name", " ", 
    "means", " ", "create"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "CpayoffMatrix", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CpayoffMatrix", "::", "usage"}], "=", 
     "\"\<CpayoffMatrix[payoff(or \
payoffDM),noM_,noU_:noU,noD_:noD,parallel_:False] calculates and assigns the \
payoffMatrix.\\r \nIn case of separated streams payoff is used and in the \
case of precomputed data payoffDM is used.\\r\n\nCpayoffMatrix[solution_] \
substitutes the solution to all payoffMatrix's entries.\n\>\""}], ";"}], "\n", 
   RowBox[{
    RowBox[{"CpayoffMatrix", "[", 
     RowBox[{"payoff_", ",", "noM_", ",", 
      RowBox[{"noU_:", 
       StyleBox["noU",
        Background->RGBColor[1, 1, 0]]}], ",", 
      RowBox[{"noD_:", 
       StyleBox["noD",
        Background->RGBColor[1, 1, 0]]}], ",", 
      RowBox[{"p_:", "False"}]}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"payoffMatrix", "=", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"p", "\[Equal]", "False"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"payoff", "[", 
          RowBox[{"m", ",", "i", ",", "j"}], "]"}], "\[IndentingNewLine]", 
         ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "1", ",", "noM"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"noU", "[", 
            RowBox[{"[", "m", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"noD", "[", 
            RowBox[{"[", "m", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ParallelTable", "[", 
        RowBox[{
         RowBox[{"payoff", "[", 
          RowBox[{"m", ",", "i", ",", "j"}], "]"}], "\[IndentingNewLine]", 
         ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "1", ",", "noM"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"noU", "[", 
            RowBox[{"[", "m", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"noD", "[", 
            RowBox[{"[", "m", "]"}], "]"}]}], "}"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CpayoffMatrix", "[", "solution_", "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ListQ", "@", "solution"}], " ", "&&", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Length", "@", "solution"}], ")"}], "===", 
        RowBox[{"noAttr", "-", "1"}]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"payoffMatrix", "=", 
       RowBox[{"(", 
        RowBox[{"payoffMatrix", "/.", 
         RowBox[{"Thread", "[", 
          RowBox[{
           RowBox[{"Cx", "[", 
            RowBox[{"noAttr", "-", "1"}], "]"}], "\[Rule]", "solution"}], 
          "]"}]}], ")"}]}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
      RowBox[{
      "Print", "[", 
       "\"\<There is some problem with your input. Couldn't calculate \
anything meaningful.\>\"", "]"}]}], "\[IndentingNewLine]", 
     "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.611654102177257*^9, 3.6116542218406477`*^9}, 
   3.611654420939027*^9, {3.6116544925174885`*^9, 3.6116545056894417`*^9}, {
   3.6116545421489096`*^9, 3.611654664496849*^9}, {3.611741108152258*^9, 
   3.611741109824133*^9}, {3.6117412417288446`*^9, 3.6117412863497148`*^9}, {
   3.6117415360333033`*^9, 3.611741537631454*^9}, 3.6119225913033714`*^9, {
   3.611929413502285*^9, 3.6119294152102914`*^9}, {3.6119295081901774`*^9, 
   3.611929510149438*^9}, {3.6263317925365915`*^9, 3.6263318272553415`*^9}, {
   3.6263459356407623`*^9, 3.6263459774376373`*^9}, {3.6263460270626373`*^9, 
   3.6263461978595123`*^9}, {3.632739828995996*^9, 3.6327398487169237`*^9}, {
   3.657289191249384*^9, 3.6572892111054153`*^9}, {3.687931956798997*^9, 
   3.687931971418502*^9}, {3.6879324344177*^9, 3.6879324632483473`*^9}, {
   3.687932658651929*^9, 3.687932724579956*^9}, {3.687933330442122*^9, 
   3.6879334051140947`*^9}, 3.687933478737028*^9, {3.687933535699217*^9, 
   3.687933545203259*^9}, {3.687933587247164*^9, 3.68793366691227*^9}, {
   3.687933780577362*^9, 3.687933803573482*^9}, {3.6879339236697903`*^9, 
   3.687933949068503*^9}, {3.6879340641234417`*^9, 3.687934294169633*^9}, {
   3.687934500245884*^9, 3.687934512890766*^9}, {3.6879345456693363`*^9, 
   3.687934716553021*^9}, {3.687934752124819*^9, 3.6879347640129547`*^9}, {
   3.687934893456819*^9, 3.687934899864044*^9}, {3.68793495933742*^9, 
   3.687934978122425*^9}, {3.687935586245936*^9, 3.6879356137188*^9}, {
   3.687935651303357*^9, 3.687935655860488*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "CpayoffMatrix"}]], "Input",
 CellChangeTimes->{{3.6879335080693808`*^9, 3.687933510173505*^9}, 
   3.6879347219860697`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"CpayoffMatrix[payoff(or \
payoffDM),noM_,noU_:noU,noD_:noD,parallel_:False] calculates and assigns the \
payoffMatrix.
 \\nIn case of separated streams payoff is used and in the case of \
precomputed data payoffDM is used.
\\n\\nCpayoffMatrix[solution_] substitutes the solution to all payoffMatrix's \
entries.\\n\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.687935639002528*^9},
 CellTags->"Info603687942838-5422406"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"CpayoffMatrix", "[", 
          RowBox[{"payoff_", ",", "noM_", ",", 
           RowBox[{"noU_", ":", "noU"}], ",", 
           RowBox[{"noD_", ":", "noD"}], ",", 
           RowBox[{"p_", ":", "False"}]}], "]"}], ":=", 
         RowBox[{"payoffMatrix", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"p", "\[Equal]", "False"}], ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"payoff", "[", 
               RowBox[{"m", ",", "i", ",", "j"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"m", ",", "1", ",", "noM"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{
                "noU", "\[LeftDoubleBracket]", "m", 
                 "\[RightDoubleBracket]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", 
                RowBox[{
                "noD", "\[LeftDoubleBracket]", "m", 
                 "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], ",", 
            RowBox[{"ParallelTable", "[", 
             RowBox[{
              RowBox[{"payoff", "[", 
               RowBox[{"m", ",", "i", ",", "j"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"m", ",", "1", ",", "noM"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{
                "noU", "\[LeftDoubleBracket]", "m", 
                 "\[RightDoubleBracket]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", 
                RowBox[{
                "noD", "\[LeftDoubleBracket]", "m", 
                 "\[RightDoubleBracket]"}]}], "}"}]}], "]"}]}], "]"}]}]}]},
       {" "},
       {
        RowBox[{
         RowBox[{"CpayoffMatrix", "[", "solution_", "]"}], ":=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ListQ", "[", "solution", "]"}], "&&", 
            RowBox[{
             RowBox[{"Length", "[", "solution", "]"}], "===", 
             RowBox[{"noAttr", "-", "1"}]}]}], ",", 
           RowBox[{"payoffMatrix", "=", 
            RowBox[{"payoffMatrix", "/.", "\[VeryThinSpace]", 
             RowBox[{"Thread", "[", 
              RowBox[{
               RowBox[{"Cx", "[", 
                RowBox[{"noAttr", "-", "1"}], "]"}], "\[Rule]", "p"}], 
              "]"}]}]}], ",", 
           RowBox[{
           "Print", 
            "[", "\<\"There is some problem with your input. Couldn't \
calculate anything meaningful.\"\>", "]"}]}], "]"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`CpayoffMatrix],
  Editable->False]], "Print",
 CellChangeTimes->{3.687935639039999*^9},
 CellTags->"Info603687942838-5422406"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ctotalpayoff[payoff,mates]", "Subsection",
 CellChangeTimes->{
  3.6117411131376095`*^9, 3.611741233674157*^9, {3.611741277829609*^9, 
   3.6117412916970325`*^9}, {3.611912880528715*^9, 3.611912891202575*^9}, {
   3.6119140668733816`*^9, 3.6119141092559533`*^9}, {3.6119175864147515`*^9, 
   3.611917587407542*^9}},
 CellID->925377420],

Cell["\<\
If the payoffobject is the payoff function then the head equals Symbol and \
the corresponding routine is used.
If the payoffobject is the payoffMatrix then the head equals List and the \
corresponding routine is used.\
\>", "Text",
 CellChangeTimes->{{3.6263346577397165`*^9, 3.6263346977709665`*^9}},
 CellID->1964608544],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "C", " ", "in", " ", "front", " ", "of", " ", "the", " ", "name", " ", 
    "means", " ", "create"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "Ctotalpayoff", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Ctotalpayoff", "::", "usage"}], "=", 
     "\"\<Ctotalpayoff[payoffobject,mates] calculates the total payoff that a \
specific match defined by mates returns.\nIf the payoffobject is the payoff \
function then the head equals Symbol and the corresponding routine is used.\n\
If the payoffobject is the payoffMatrix then the head equals List and the \
corresponding routine is used.\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ctotalpayoff", "[", 
     RowBox[{"payoffobject_", ",", "mates_"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"totalpayoff", "=", "\[IndentingNewLine]", 
     RowBox[{"Switch", "[", 
      RowBox[{
       RowBox[{"Head", "@", "payoffobject"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"payoff", " ", "function"}], "*)"}], "Symbol", ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"payoffobject", "@@", "#"}], "&"}], ",", "mates", ",", 
         RowBox[{"{", "2", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", "payoffMatrix", "*)"}], "List", ",", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Part", "@@", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", "payoffobject", "}"}], ",", "#"}], "]"}]}], "&"}], 
         ",", "mates", ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
      "]"}]}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.611654102177257*^9, 3.6116542218406477`*^9}, 
   3.611654420939027*^9, {3.6116544925174885`*^9, 3.6116545056894417`*^9}, {
   3.6116545421489096`*^9, 3.611654664496849*^9}, {3.611741108152258*^9, 
   3.611741109824133*^9}, {3.6117412417288446`*^9, 3.6117412863497148`*^9}, {
   3.6117415360333033`*^9, 3.611741537631454*^9}, {3.61191415635421*^9, 
   3.611914176556762*^9}, 3.6119175802137594`*^9, {3.611917732019161*^9, 
   3.6119177370020638`*^9}, 3.6186504986837187`*^9, {3.6263343084115915`*^9, 
   3.6263343660834665`*^9}, {3.6263343983803415`*^9, 
   3.6263344230365915`*^9}, {3.6263345018022165`*^9, 
   3.6263345378647165`*^9}, {3.6263345822865915`*^9, 
   3.6263346539740915`*^9}, {3.6263368089897165`*^9, 
   3.6263368493334665`*^9}, {3.6327453509548144`*^9, 
   3.6327454266618457`*^9}, {3.6327454824266925`*^9, 3.632745499274597*^9}, {
   3.6880084344367313`*^9, 3.688008439923318*^9}},
 Background->RGBColor[0.88, 1, 0.88],
 CellID->1747771955],

Cell["\<\
Note: Calculations may be differ by 10^(-9) or smaller but some times they \
are not the same...\
\>", "Text",
 CellChangeTimes->{{3.6199441172064447`*^9, 3.6199441750658197`*^9}},
 CellID->1688422668]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{1234, 1007},
WindowMargins->{{Automatic, 3}, {1, Automatic}},
ShowSelection->True,
Magnification->1.25,
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info603687942838-5422406"->{
  Cell[11816, 317, 462, 9, 140, "Print",
   CellTags->"Info603687942838-5422406"],
  Cell[12281, 328, 3295, 84, 175, "Print",
   CellTags->"Info603687942838-5422406"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info603687942838-5422406", 19731, 520}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 197, 3, 81, "Section"],
Cell[CellGroupData[{
Cell[801, 29, 110, 1, 44, "Subsubsection"],
Cell[914, 32, 272, 5, 77, "Text"],
Cell[1189, 39, 179, 4, 72, "Input"],
Cell[1371, 45, 148, 3, 72, "Input"],
Cell[1522, 50, 132, 2, 72, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1691, 57, 134, 2, 35, "Subsubsection"],
Cell[1828, 61, 209, 3, 60, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2074, 69, 89, 1, 56, "Subsection"],
Cell[2166, 72, 811, 22, 118, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[3014, 99, 95, 1, 56, "Subsection"],
Cell[3112, 102, 1689, 42, 202, "Input",
 InitializationCell->True],
Cell[4804, 146, 1430, 37, 202, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[6271, 188, 348, 5, 56, "Subsection"],
Cell[6622, 195, 4991, 111, 737, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[11638, 310, 153, 3, 40, "Input"],
Cell[CellGroupData[{
Cell[11816, 317, 462, 9, 140, "Print",
 CellTags->"Info603687942838-5422406"],
Cell[12281, 328, 3295, 84, 175, "Print",
 CellTags->"Info603687942838-5422406"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15637, 419, 341, 6, 56, "Subsection",
 CellID->925377420],
Cell[15981, 427, 333, 7, 67, "Text",
 CellID->1964608544],
Cell[16317, 436, 2792, 60, 454, "Input",
 InitializationCell->True,
 CellID->1747771955],
Cell[19112, 498, 211, 5, 40, "Text",
 CellID->1688422668]
}, Open  ]]
}, Open  ]]
}
]
*)

