(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    298791,       6365]
NotebookOptionsPosition[    284711,       5937]
NotebookOutlinePosition[    289896,       6075]
CellTagsIndexPosition[    289064,       6053]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["For the Developer", "Subsubsection",
 CellChangeTimes->{{3.5819225877880845`*^9, 3.581922592443351*^9}}],

Cell["\<\
AutoGeneratedPackage is an option for notebooks that specifies whether a \
package is automatically created when a notebook that contains initialization \
cells or groups is saved.\
\>", "Text",
 CellChangeTimes->{{3.5808982533077106`*^9, 3.580898259632072*^9}}],

Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{
   RowBox[{"InputNotebook", "[", "]"}], ",", 
   RowBox[{"AutoGeneratedPackage", "\[Rule]", "Automatic"}]}], "]"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Initialize", "Section",
 CellChangeTimes->{{3.6303028563379965`*^9, 3.630302858824114*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"directory", "=", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}]], "Input",
 Background->RGBColor[1, 0.5, 0]],

Cell[BoxData[
 RowBox[{
  RowBox[{"$HistoryLength", "=", "10"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5816697178146343`*^9, 3.581669717815634*^9}, {
  3.626749144102263*^9, 3.6267491442907395`*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "$OperatingSystem", ",", "$SystemWordLength", ",", "$ProcessorCount"}], 
  "}"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6265664944598913`*^9, 3.62656649600286*^9}, {
  3.626566548108204*^9, 3.626566611257181*^9}, {3.62656665372464*^9, 
  3.626566743982634*^9}, {3.6265668042814293`*^9, 3.626566831426732*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Unix\"\>", ",", "64", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6265665028925085`*^9, {3.626566556721742*^9, 3.6265666119417515`*^9}, {
   3.6265666594058824`*^9, 3.6265666843552527`*^9}, 3.626566715524198*^9, {
   3.6265668068654137`*^9, 3.6265668317852135`*^9}, 3.6266207426950502`*^9, 
   3.6266718272699175`*^9, 3.6267073211665497`*^9, {3.6267082902013817`*^9, 
   3.62670829043126*^9}, {3.6267089846390567`*^9, 3.6267089848578067`*^9}, 
   3.6267492538252277`*^9, 3.6267506926383066`*^9, 3.626750812990284*^9, 
   3.6267509179291754`*^9, 3.6267511565306063`*^9, 3.630056008407196*^9, 
   3.630149113847698*^9, 3.6302322173303413`*^9, 3.630232285068551*^9, 
   3.630300391441211*^9, 3.6303004379029655`*^9, 3.63030051700815*^9, 
   3.6303007418757486`*^9, {3.630300860653879*^9, 3.6303008792936172`*^9}, 
   3.630300920257353*^9, 3.6303012774939933`*^9, 3.6303014070544386`*^9, {
   3.630301617643385*^9, 3.6303016435440845`*^9}, 3.630302144860334*^9, 
   3.630302287979484*^9, 3.6303032013549275`*^9, 3.6303039567951193`*^9, 
   3.630304352279495*^9, 3.630305173373245*^9, 3.6303052612013693`*^9, 
   3.6303053027638693`*^9, 3.630305402623245*^9, 3.630305437654495*^9, {
   3.6303055488263693`*^9, 3.630305551154495*^9}, 3.6385982363678455`*^9, 
   3.642574494102254*^9, {3.657294671971929*^9, 3.657294701491643*^9}, 
   3.657296609057024*^9, 3.657296795730833*^9, 3.687963013048792*^9, 
   3.687963096305469*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Used", " ", "in", " ", 
     RowBox[{"import", ".", "nb"}]}], " ", ",", " ", 
    RowBox[{"import", " ", "function", " ", "for", " ", "precomputed"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"MSEresources", "=", "\"\<Speed\>\""}], ";"}], 
  RowBox[{"(*", "\"\<Memory\>\"", "*)"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.630300640903063*^9, 3.6303006426712327`*^9}, {
   3.630300692573144*^9, 3.6303007182914667`*^9}, {3.6305839260988655`*^9, 
   3.6305839319689827`*^9}, 3.6305843128013735`*^9},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Increases", " ", "everytime", " ", "the", " ", "objective", " ", 
    "function", " ", "is", " ", "called"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"objectivecounter", "=", "0"}], ";"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.630588188829694*^9, 3.630588197673444*^9}, {
  3.630588312845319*^9, 3.630588348470319*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"notebookslist", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<import.nb\>\"", ",", "\"\<export.nb\>\"", ",", "\"\<payoff.nb\>\"", 
     ",", "\"\<modifydata.nb\>\"", ",", "\"\<matching.nb\>\"", ",", 
     "\"\<inequalities.nb\>\"", ",", "\"\<dataArray.nb\>\"", ",", 
     "\"\<objective.nb\>\"", ",", "\"\<PSO.nb\>\"", ",", 
     "\"\<maximize.nb\>\"", ",", "\"\<confidence.nb\>\""}], "}"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6303037520138693`*^9, 3.6303038372638693`*^9}, {
   3.630304260248245*^9, 3.630304294310745*^9}, {3.6303092204473124`*^9, 
   3.6303092342285624`*^9}, {3.6385981524371815`*^9, 3.638598156452806*^9}, {
   3.6392079271553526`*^9, 3.639207930389728*^9}, {3.657294561592113*^9, 
   3.6572945624876204`*^9}, 3.685467477563766*^9, 3.685467510342861*^9},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Get", "[", 
      RowBox[{
       RowBox[{"StringReplacePart", "[", 
        RowBox[{"#", ",", "\"\<m\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"Path", "\[Rule]", "directory"}]}], "]"}], "&"}], "/@", 
    "notebookslist"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.685496249872991*^9, 3.685496251858797*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Get", "[", 
     RowBox[{"#", ",", 
      RowBox[{"Path", "\[Rule]", "directory"}]}], "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{
    "\"\<import.m\>\"", ",", "\"\<export.m\>\"", ",", "\"\<payoff.m\>\"", 
     ",", "\"\<modifydata.m\>\"", ",", "\"\<matching.m\>\"", ",", 
     "\"\<inequalities.m\>\"", ",", "\"\<dataArray.m\>\"", ",", 
     "\"\<objective.m\>\"", ",", "\"\<PSO.m\>\"", ",", "\"\<maximize.m\>\"", 
     ",", "\"\<confidence.m\>\""}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6260891229861107`*^9, 3.626089126255642*^9}, {
   3.626089237157424*^9, 3.6260893225148787`*^9}, {3.6261696813774786`*^9, 
   3.626169693302929*^9}, {3.6261719198870225`*^9, 3.626171933411436*^9}, {
   3.6261735628734417`*^9, 3.626173576910901*^9}, {3.6263371945990915`*^9, 
   3.6263372165834665`*^9}, {3.6263379701303415`*^9, 
   3.6263379845678415`*^9}, {3.6263385592709665`*^9, 
   3.6263386732240915`*^9}, {3.6263391320209665`*^9, 
   3.6263391399272165`*^9}, {3.6265137040396194`*^9, 3.626513711560709*^9}, {
   3.630058758843785*^9, 3.6300587686094093`*^9}, {3.6303004704784555`*^9, 
   3.630300475282893*^9}, {3.630300619674292*^9, 3.6303006387812586`*^9}, {
   3.6303030327005515`*^9, 3.630303052182889*^9}, {3.6303037091388693`*^9, 
   3.6303037115451193`*^9}, {3.6303038842013693`*^9, 3.6303039203888693`*^9}, 
   3.6303039634201193`*^9, {3.630304315935745*^9, 3.630304334341995*^9}, {
   3.685496278202923*^9, 3.685496316956232*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tr", "=", 
  RowBox[{"TestReport", "[", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\</unit_testing\>\"", 
    "<>", "\"\<Unit_Testing.wlt\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.65729661913312*^9, 3.657296674098381*^9}, {
  3.657296754588738*^9, 3.657296755658155*^9}, {3.687963038009186*^9, 
  3.687963045375496*^9}},
 Background->RGBColor[1, 0.5, 0]],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TestReportObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{15., {0., 15.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "TestFailureIcon"],
             ImageSizeCache->{15., {5., 10.}}],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                Magnification])}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Title: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Test Report: Unit_Testing.wlt\"\>",
              "SummaryItem"]}], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Success rate: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              TemplateBox[{"90","\"%\""},
               "RowDefault"],
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"Tests run: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["52",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"],
            ImageSizeCache->{15., {0., 15.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 
             3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}]], 
         GraphicsBox[InsetBox[
           PaneBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitExpressions", "TestFailureIcon"],
             ImageSizeCache->{15., {3., 12.}}],
            Alignment->Center,
            
            ImageSize->
             Dynamic[{
              Automatic, 
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                Magnification])}]]],
          AspectRatio->1,
          Axes->False,
          Background->GrayLevel[0.93],
          Frame->True,
          FrameStyle->Directive[
            Thickness[Tiny], 
            GrayLevel[0.55]],
          FrameTicks->None,
          ImageSize->{Automatic, 
            Dynamic[
            3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])]},
          PlotRange->{{0, 1}, {0, 1}}], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Title: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Test Report: Unit_Testing.wlt\"\>",
              "SummaryItem"]}], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Success rate: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              TemplateBox[{"90","\"%\""},
               "RowDefault"],
              "SummaryItem"]}], 
            RowBox[{
             TagBox["\<\"Tests run: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["52",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Succeeded: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["47",
              "SummaryItem"]}], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Failed: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["5",
              "SummaryItem"]}], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Failed with wrong results: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["5",
              "SummaryItem"]}], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Failed with messages: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["0",
              "SummaryItem"]}], "\[SpanFromLeft]"},
           {
            RowBox[{
             TagBox["\<\"Failed with errors: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["0",
              "SummaryItem"]}], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  TestReportObject[
   Association[
   "Title" -> "Test Report: Unit_Testing.wlt", "TimeElapsed" -> 
    Quantity[2.0100000000000002`, "Seconds"], "TestsSucceededCount" -> 47, 
    "TestsFailedCount" -> 5, "TestsFailedWrongResultsCount" -> 5, 
    "TestsFailedWithMessagesCount" -> 0, "TestsFailedWithErrorsCount" -> 0, 
    "Aborted" -> False, "TestResults" -> Association[1 -> TestResultObject[
        Association[
        "TestIndex" -> 1, "TestID" -> "Load Library", "Outcome" -> "Success", 
         "Input" -> HoldForm[$CellContext`directory = NotebookDirectory[]; 
           Part[
             Get["mse.m", Path -> $CellContext`directory], 3]], 
         "ExpectedOutput" -> HoldForm[1], "ActualOutput" -> HoldForm[1], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.659439`5.969689626086403, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.6560000000000006, "Seconds"], "MemoryUsed" -> 
         Quantity[-4134872, "Bytes"]]], 2 -> TestResultObject[
        Association[
        "TestIndex" -> 2, "TestID" -> "17a5dc64-4dc1-4a69-979d-88080bfc123e", 
         "Outcome" -> "Success", "Input" -> 
         HoldForm[{$CellContext`noM, $CellContext`noU, $CellContext`u, \
$CellContext`noAttr} = $CellContext`import[
             StringJoin[
              NotebookDirectory[], "/import/", "stream_uproof.xlsx"], 
             "stream"]], "ExpectedOutput" -> 
         HoldForm[{
           3, {3, 2, 
            4}, {{{"u11_1", "u11_2", "u11_3"}, {"u12_1", "u12_2", "u12_3"}, {
              "u13_1", "u13_2", "u13_3"}}, {{"u21_1", "u21_2", "u21_3"}, {
              "u22_1", "u22_2", "u22_3"}}, {{"u31_1", "u31_2", "u31_3"}, {
              "u32_1", "u32_2", "u32_3"}, {"u33_1", "u33_2", "u33_3"}, {
              "u34_1", "u34_2", "u34_3"}}}, 3}], "ActualOutput" -> 
         HoldForm[{
           3, {3, 2, 
            4}, {{{"u11_1", "u11_2", "u11_3"}, {"u12_1", "u12_2", "u12_3"}, {
              "u13_1", "u13_2", "u13_3"}}, {{"u21_1", "u21_2", "u21_3"}, {
              "u22_1", "u22_2", "u22_3"}}, {{"u31_1", "u31_2", "u31_3"}, {
              "u32_1", "u32_2", "u32_3"}, {"u33_1", "u33_2", "u33_3"}, {
              "u34_1", "u34_2", "u34_3"}}}, 3}], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.040834`4.7615369222771555, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.012000000000000455`, "Seconds"], "MemoryUsed" -> 
         Quantity[12104, "Bytes"]]], 3 -> TestResultObject[
        Association[
        "TestIndex" -> 3, "TestID" -> "f7df61bd-5b15-4ee8-93c5-f8f53acaae70", 
         "Outcome" -> "Success", "Input" -> 
         HoldForm[{$CellContext`noM, $CellContext`noD, $CellContext`d, \
$CellContext`noAttr} = $CellContext`import[
             StringJoin[
              NotebookDirectory[], "/import/", "stream_dproof.xlsx"], 
             "stream"]], "ExpectedOutput" -> 
         HoldForm[{
           3, {2, 3, 
            4}, {{{"d11_1", "d11_2", "d11_3"}, {
              "d12_1", "d12_2", "d12_3"}}, {{"d21_1", "d21_2", "d21_3"}, {
              "d22_1", "d22_2", "d22_3"}, {"d23_1", "d23_2", "d23_3"}}, {{
              "d31_1", "d31_2", "d31_3"}, {"d32_1", "d32_2", "d32_3"}, {
              "d33_1", "d33_2", "d33_3"}, {"d34_1", "d34_2", "d34_3"}}}, 3}], 
         "ActualOutput" -> 
         HoldForm[{
           3, {2, 3, 
            4}, {{{"d11_1", "d11_2", "d11_3"}, {
              "d12_1", "d12_2", "d12_3"}}, {{"d21_1", "d21_2", "d21_3"}, {
              "d22_1", "d22_2", "d22_3"}, {"d23_1", "d23_2", "d23_3"}}, {{
              "d31_1", "d31_2", "d31_3"}, {"d32_1", "d32_2", "d32_3"}, {
              "d33_1", "d33_2", "d33_3"}, {"d34_1", "d34_2", "d34_3"}}}, 3}], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.044392`4.7978197096381034, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.016000000000000014`, "Seconds"], "MemoryUsed" -> 
         Quantity[2232, "Bytes"]]], 4 -> TestResultObject[
        Association[
        "TestIndex" -> 4, "TestID" -> "c26128de-ab7e-4664-b836-35396857a7a0", 
         "Outcome" -> "Success", "Input" -> 
         HoldForm[{$CellContext`noM, $CellContext`noU, $CellContext`u, \
$CellContext`noAttr} = $CellContext`import[
             StringJoin[
              NotebookDirectory[], "/import/", 
              "stream_uproof_multiplesheets.xlsx"], "stream"]], 
         "ExpectedOutput" -> 
         HoldForm[{
           3, {3, 2, 
            4}, {{{"u11_1", "u11_2", "u11_3"}, {"u12_1", "u12_2", "u12_3"}, {
              "u13_1", "u13_2", "u13_3"}}, {{"u21_1", "u21_2", "u21_3"}, {
              "u22_1", "u22_2", "u22_3"}}, {{"u31_1", "u31_2", "u31_3"}, {
              "u32_1", "u32_2", "u32_3"}, {"u33_1", "u33_2", "u33_3"}, {
              "u34_1", "u34_2", "u34_3"}}}, 3}], "ActualOutput" -> 
         HoldForm[{
           3, {3, 2, 
            4}, {{{"u11_1", "u11_2", "u11_3"}, {"u12_1", "u12_2", "u12_3"}, {
              "u13_1", "u13_2", "u13_3"}}, {{"u21_1", "u21_2", "u21_3"}, {
              "u22_1", "u22_2", "u22_3"}}, {{"u31_1", "u31_2", "u31_3"}, {
              "u32_1", "u32_2", "u32_3"}, {"u33_1", "u33_2", "u33_3"}, {
              "u34_1", "u34_2", "u34_3"}}}, 3}], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.042456`4.778454072453323, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.016000000000000014`, "Seconds"], "MemoryUsed" -> 
         Quantity[2104, "Bytes"]]], 5 -> TestResultObject[
        Association[
        "TestIndex" -> 5, "TestID" -> "15ac5d47-a4c3-4783-a727-c85cd3fe541f", 
         "Outcome" -> "Success", "Input" -> 
         HoldForm[{$CellContext`noM, $CellContext`noD, $CellContext`d, \
$CellContext`noAttr} = $CellContext`import[
             StringJoin[
              NotebookDirectory[], "/import/", 
              "stream_dproof_multiplesheets.xlsx"], "stream"]], 
         "ExpectedOutput" -> 
         HoldForm[{
           3, {2, 3, 
            4}, {{{"d11_1", "d11_2", "d11_3"}, {
              "d12_1", "d12_2", "d12_3"}}, {{"d21_1", "d21_2", "d21_3"}, {
              "d22_1", "d22_2", "d22_3"}, {"d23_1", "d23_2", "d23_3"}}, {{
              "d31_1", "d31_2", "d31_3"}, {"d32_1", "d32_2", "d32_3"}, {
              "d33_1", "d33_2", "d33_3"}, {"d34_1", "d34_2", "d34_3"}}}, 3}], 
         "ActualOutput" -> 
         HoldForm[{
           3, {2, 3, 
            4}, {{{"d11_1", "d11_2", "d11_3"}, {
              "d12_1", "d12_2", "d12_3"}}, {{"d21_1", "d21_2", "d21_3"}, {
              "d22_1", "d22_2", "d22_3"}, {"d23_1", "d23_2", "d23_3"}}, {{
              "d31_1", "d31_2", "d31_3"}, {"d32_1", "d32_2", "d32_3"}, {
              "d33_1", "d33_2", "d33_3"}, {"d34_1", "d34_2", "d34_3"}}}, 3}], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.040408`4.756982353336287, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.016000000000000014`, "Seconds"], "MemoryUsed" -> 
         Quantity[2104, "Bytes"]]], 6 -> TestResultObject[
        Association[
        "TestIndex" -> 6, "TestID" -> "e2a70a6e-77ab-4d53-8eb9-5f212d550fbf", 
         "Outcome" -> "Success", "Input" -> 
         HoldForm[{$CellContext`noM, $CellContext`noU, $CellContext`u, \
$CellContext`noAttr} = $CellContext`import[
             StringJoin[
              NotebookDirectory[], "/import/", "stream_uproof.dat"], "stream",
              False]], "ExpectedOutput" -> 
         HoldForm[{
           3, {3, 2, 
            4}, {{{"u11_1", "u11_2", "u11_3"}, {"u12_1", "u12_2", "u12_3"}, {
              "u13_1", "u13_2", "u13_3"}}, {{"u21_1", "u21_2", "u21_3"}, {
              "u22_1", "u22_2", "u22_3"}}, {{"u31_1", "u31_2", "u31_3"}, {
              "u32_1", "u32_2", "u32_3"}, {"u33_1", "u33_2", "u33_3"}, {
              "u34_1", "u34_2", "u34_3"}}}, 3}], "ActualOutput" -> 
         HoldForm[{
           3, {3, 2, 
            4}, {{{"u11_1", "u11_2", "u11_3"}, {"u12_1", "u12_2", "u12_3"}, {
              "u13_1", "u13_2", "u13_3"}}, {{"u21_1", "u21_2", "u21_3"}, {
              "u22_1", "u22_2", "u22_3"}}, {{"u31_1", "u31_2", "u31_3"}, {
              "u32_1", "u32_2", "u32_3"}, {"u33_1", "u33_2", "u33_3"}, {
              "u34_1", "u34_2", "u34_3"}}}, 3}], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.046441`4.817416560530875, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.04800000000000004, "Seconds"], "MemoryUsed" -> 
         Quantity[108200, "Bytes"]]], 7 -> TestResultObject[
        Association[
        "TestIndex" -> 7, "TestID" -> "2718f40f-db22-4534-941d-807cd6d6ced7", 
         "Outcome" -> "Success", "Input" -> 
         HoldForm[{$CellContext`noM, $CellContext`noU, $CellContext`d, \
$CellContext`noAttr} = $CellContext`import[
             StringJoin[
              NotebookDirectory[], "/import/", "stream_dproof.dat"], "stream",
              False]], "ExpectedOutput" -> 
         HoldForm[{
           3, {2, 3, 
            4}, {{{"d11_1", "d11_2", "d11_3"}, {
              "d12_1", "d12_2", "d12_3"}}, {{"d21_1", "d21_2", "d21_3"}, {
              "d22_1", "d22_2", "d22_3"}, {"d23_1", "d23_2", "d23_3"}}, {{
              "d31_1", "d31_2", "d31_3"}, {"d32_1", "d32_2", "d32_3"}, {
              "d33_1", "d33_2", "d33_3"}, {"d34_1", "d34_2", "d34_3"}}}, 3}], 
         "ActualOutput" -> 
         HoldForm[{
           3, {2, 3, 
            4}, {{{"d11_1", "d11_2", "d11_3"}, {
              "d12_1", "d12_2", "d12_3"}}, {{"d21_1", "d21_2", "d21_3"}, {
              "d22_1", "d22_2", "d22_3"}, {"d23_1", "d23_2", "d23_3"}}, {{
              "d31_1", "d31_2", "d31_3"}, {"d32_1", "d32_2", "d32_3"}, {
              "d33_1", "d33_2", "d33_3"}, {"d34_1", "d34_2", "d34_3"}}}, 3}], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.007928`4.049678639309213, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.007999999999999119, "Seconds"], "MemoryUsed" -> 
         Quantity[2168, "Bytes"]]], 8 -> TestResultObject[
        Association[
        "TestIndex" -> 8, "TestID" -> "82e3f0a1-13a5-4c2f-8268-d9c592e63ebb", 
         "Outcome" -> "Success", "Input" -> 
         HoldForm[{$CellContext`header, $CellContext`noM, $CellContext`noU, \
$CellContext`noD, $CellContext`noAttr, $CellContext`distanceMatrices, \
$CellContext`matchMatrix, $CellContext`mate} = $CellContext`import[
             StringJoin[
              NotebookDirectory[], "/import/", "precomp_proof.xlsx"], 
             "precomp", False]], "ExpectedOutput" -> 
         HoldForm[{{"m", "u", "d", "a1", "a2", "a3", "match"}, 3, {3, 2, 4}, {
            2, 3, 4}, 
            3, {{{{"d111_1", "d111_2", "d111_3"}, {
               "d112_1", "d112_2", "d112_3"}}, {{
               "d121_1", "d121_2", "d121_3"}, {
               "d122_1", "d122_2", "d122_3"}}, {{
               "d131_1", "d131_2", "d131_3"}, {
               "d132_1", "d132_2", "d132_3"}}}, {{{
               "d211_1", "d211_2", "d211_3"}, {
               "d212_1", "d212_2", "d212_3"}, {
               "d213_1", "d213_2", "d213_3"}}, {{
               "d221_1", "d221_2", "d221_3"}, {
               "d222_1", "d222_2", "d222_3"}, {
               "d223_1", "d223_2", "d223_3"}}}, {{{
               "d311_1", "d311_2", "d311_3"}, {
               "d312_1", "d312_2", "d312_3"}, {
               "d313_1", "d313_2", "d313_3"}, {
               "d314_1", "d314_2", "d314_3"}}, {{
               "d321_1", "d321_2", "d321_3"}, {
               "d322_1", "d322_2", "d322_3"}, {
               "d323_1", "d323_2", "d323_3"}, {
               "d324_1", "d324_2", "d324_3"}}, {{
               "d331_1", "d331_2", "d331_3"}, {
               "d332_1", "d332_2", "d332_3"}, {
               "d333_1", "d333_2", "d333_3"}, {
               "d334_1", "d334_2", "d334_3"}}, {{
               "d341_1", "d341_2", "d341_3"}, {
               "d342_1", "d342_2", "d342_3"}, {
               "d343_1", "d343_2", "d343_3"}, {
               "d344_1", "d344_2", "d344_3"}}}}, {{{0, 0}, {0, 1}, {1, 1}}, {{
             0, 1, 0}, {0, 1, 0}}, {{1, 1, 0, 0}, {1, 0, 1, 1}, {1, 0, 1, 
             0}, {1, 1, 1, 1}}}, {{{{1}, {2}, {3}}, {{}, {2}, {1, 2}}}, {{{
             1}, {2}}, {{2}, {
             2}}}, {{{1}, {2}, {3}, {
              4}}, {{1, 2}, {1, 3, 4}, {1, 3}, {1, 2, 3, 4}}}}}], 
         "ActualOutput" -> 
         HoldForm[{{"m", "u", "d", "a1", "a2", "a3", "match"}, 3, {3, 2, 4}, {
            2, 3, 4}, 
            3, {{{{"d111_1", "d111_2", "d111_3"}, {
               "d112_1", "d112_2", "d112_3"}}, {{
               "d121_1", "d121_2", "d121_3"}, {
               "d122_1", "d122_2", "d122_3"}}, {{
               "d131_1", "d131_2", "d131_3"}, {
               "d132_1", "d132_2", "d132_3"}}}, {{{
               "d211_1", "d211_2", "d211_3"}, {
               "d212_1", "d212_2", "d212_3"}, {
               "d213_1", "d213_2", "d213_3"}}, {{
               "d221_1", "d221_2", "d221_3"}, {
               "d222_1", "d222_2", "d222_3"}, {
               "d223_1", "d223_2", "d223_3"}}}, {{{
               "d311_1", "d311_2", "d311_3"}, {
               "d312_1", "d312_2", "d312_3"}, {
               "d313_1", "d313_2", "d313_3"}, {
               "d314_1", "d314_2", "d314_3"}}, {{
               "d321_1", "d321_2", "d321_3"}, {
               "d322_1", "d322_2", "d322_3"}, {
               "d323_1", "d323_2", "d323_3"}, {
               "d324_1", "d324_2", "d324_3"}}, {{
               "d331_1", "d331_2", "d331_3"}, {
               "d332_1", "d332_2", "d332_3"}, {
               "d333_1", "d333_2", "d333_3"}, {
               "d334_1", "d334_2", "d334_3"}}, {{
               "d341_1", "d341_2", "d341_3"}, {
               "d342_1", "d342_2", "d342_3"}, {
               "d343_1", "d343_2", "d343_3"}, {
               "d344_1", "d344_2", "d344_3"}}}}, {{{0, 0}, {0, 1}, {1, 1}}, {{
             0, 1, 0}, {0, 1, 0}}, {{1, 1, 0, 0}, {1, 0, 1, 1}, {1, 0, 1, 
             0}, {1, 1, 1, 1}}}, {{{{1}, {2}, {3}}, {{}, {2}, {1, 2}}}, {{{
             1}, {2}}, {{2}, {
             2}}}, {{{1}, {2}, {3}, {
              4}}, {{1, 2}, {1, 3, 4}, {1, 3}, {1, 2, 3, 4}}}}}], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.065504`4.966782818814406, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.016000000000000014`, "Seconds"], "MemoryUsed" -> 
         Quantity[-28016, "Bytes"]]], 9 -> TestResultObject[
        Association[
        "TestIndex" -> 9, "TestID" -> "5b1f1f5b-b63f-46eb-9c56-438258073c16", 
         "Outcome" -> "Success", "Input" -> 
         HoldForm[{$CellContext`header, $CellContext`noM, $CellContext`noU, \
$CellContext`noD, $CellContext`noAttr, $CellContext`distanceMatrices, \
$CellContext`matchMatrix, $CellContext`mate} = $CellContext`import[
             StringJoin[
              NotebookDirectory[], "/import/", 
              "precomp_proof_multiplesheets.xlsx"], "precomp", False]], 
         "ExpectedOutput" -> 
         HoldForm[{{"m", "u", "d", "a1", "a2", "a3", "match"}, 3, {3, 2, 4}, {
            2, 3, 4}, 
            3, {{{{"d111_1", "d111_2", "d111_3"}, {
               "d112_1", "d112_2", "d112_3"}}, {{
               "d121_1", "d121_2", "d121_3"}, {
               "d122_1", "d122_2", "d122_3"}}, {{
               "d131_1", "d131_2", "d131_3"}, {
               "d132_1", "d132_2", "d132_3"}}}, {{{
               "d211_1", "d211_2", "d211_3"}, {
               "d212_1", "d212_2", "d212_3"}, {
               "d213_1", "d213_2", "d213_3"}}, {{
               "d221_1", "d221_2", "d221_3"}, {
               "d222_1", "d222_2", "d222_3"}, {
               "d223_1", "d223_2", "d223_3"}}}, {{{
               "d311_1", "d311_2", "d311_3"}, {
               "d312_1", "d312_2", "d312_3"}, {
               "d313_1", "d313_2", "d313_3"}, {
               "d314_1", "d314_2", "d314_3"}}, {{
               "d321_1", "d321_2", "d321_3"}, {
               "d322_1", "d322_2", "d322_3"}, {
               "d323_1", "d323_2", "d323_3"}, {
               "d324_1", "d324_2", "d324_3"}}, {{
               "d331_1", "d331_2", "d331_3"}, {
               "d332_1", "d332_2", "d332_3"}, {
               "d333_1", "d333_2", "d333_3"}, {
               "d334_1", "d334_2", "d334_3"}}, {{
               "d341_1", "d341_2", "d341_3"}, {
               "d342_1", "d342_2", "d342_3"}, {
               "d343_1", "d343_2", "d343_3"}, {
               "d344_1", "d344_2", "d344_3"}}}}, {{{0, 0}, {0, 1}, {1, 1}}, {{
             0, 1, 0}, {0, 1, 0}}, {{1, 1, 0, 0}, {1, 0, 1, 1}, {1, 0, 1, 
             0}, {1, 1, 1, 1}}}, {{{{1}, {2}, {3}}, {{}, {2}, {1, 2}}}, {{{
             1}, {2}}, {{2}, {
             2}}}, {{{1}, {2}, {3}, {
              4}}, {{1, 2}, {1, 3, 4}, {1, 3}, {1, 2, 3, 4}}}}}], 
         "ActualOutput" -> 
         HoldForm[{{"m", "u", "d", "a1", "a2", "a3", "match"}, 3, {3, 2, 4}, {
            2, 3, 4}, 
            3, {{{{"d111_1", "d111_2", "d111_3"}, {
               "d112_1", "d112_2", "d112_3"}}, {{
               "d121_1", "d121_2", "d121_3"}, {
               "d122_1", "d122_2", "d122_3"}}, {{
               "d131_1", "d131_2", "d131_3"}, {
               "d132_1", "d132_2", "d132_3"}}}, {{{
               "d211_1", "d211_2", "d211_3"}, {
               "d212_1", "d212_2", "d212_3"}, {
               "d213_1", "d213_2", "d213_3"}}, {{
               "d221_1", "d221_2", "d221_3"}, {
               "d222_1", "d222_2", "d222_3"}, {
               "d223_1", "d223_2", "d223_3"}}}, {{{
               "d311_1", "d311_2", "d311_3"}, {
               "d312_1", "d312_2", "d312_3"}, {
               "d313_1", "d313_2", "d313_3"}, {
               "d314_1", "d314_2", "d314_3"}}, {{
               "d321_1", "d321_2", "d321_3"}, {
               "d322_1", "d322_2", "d322_3"}, {
               "d323_1", "d323_2", "d323_3"}, {
               "d324_1", "d324_2", "d324_3"}}, {{
               "d331_1", "d331_2", "d331_3"}, {
               "d332_1", "d332_2", "d332_3"}, {
               "d333_1", "d333_2", "d333_3"}, {
               "d334_1", "d334_2", "d334_3"}}, {{
               "d341_1", "d341_2", "d341_3"}, {
               "d342_1", "d342_2", "d342_3"}, {
               "d343_1", "d343_2", "d343_3"}, {
               "d344_1", "d344_2", "d344_3"}}}}, {{{0, 0}, {0, 1}, {1, 1}}, {{
             0, 1, 0}, {0, 1, 0}}, {{1, 1, 0, 0}, {1, 0, 1, 1}, {1, 0, 1, 
             0}, {1, 1, 1, 1}}}, {{{{1}, {2}, {3}}, {{}, {2}, {1, 2}}}, {{{
             1}, {2}}, {{2}, {
             2}}}, {{{1}, {2}, {3}, {
              4}}, {{1, 2}, {1, 3, 4}, {1, 3}, {1, 2, 3, 4}}}}}], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.066407`4.972728858843691, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.020000000000000462`, "Seconds"], "MemoryUsed" -> 
         Quantity[9632, "Bytes"]]], 10 -> TestResultObject[
        Association[
        "TestIndex" -> 10, "TestID" -> "a4106144-b7e3-438b-bf0c-d89e103304a0",
          "Outcome" -> "Success", "Input" -> 
         HoldForm[{$CellContext`header, $CellContext`noM, $CellContext`noU, \
$CellContext`noD, $CellContext`noAttr, $CellContext`distanceMatrices, \
$CellContext`matchMatrix, $CellContext`mate} = $CellContext`import[
             StringJoin[
              NotebookDirectory[], "/import/", "precomp_proof.dat"], 
             "precomp", False]], "ExpectedOutput" -> 
         HoldForm[{{"m", "u", "d", "a1", "a2", "a3", "match"}, 3, {3, 2, 4}, {
            2, 3, 4}, 
            3, {{{{"d1111", "d1112", "d1113"}, {
               "d1121", "d1122", "d1123"}}, {{"d1211", "d1212", "d1213"}, {
               "d1221", "d1222", "d1223"}}, {{"d1311", "d1312", "d1313"}, {
               "d1321", "d1322", "d1323"}}}, {{{"d2111", "d2112", "d2113"}, {
               "d2121", "d2122", "d2123"}, {"d2131", "d2132", "d2133"}}, {{
               "d2211", "d2212", "d2213"}, {"d2221", "d2222", "d2223"}, {
               "d2231", "d2232", "d2233"}}}, {{{"d3111", "d3112", "d3113"}, {
               "d3121", "d3122", "d3123"}, {"d3131", "d3132", "d3133"}, {
               "d3141", "d3142", "d3143"}}, {{"d3211", "d3212", "d3213"}, {
               "d3221", "d3222", "d3223"}, {"d3231", "d3232", "d3233"}, {
               "d3241", "d3242", "d3243"}}, {{"d3311", "d3312", "d3313"}, {
               "d3321", "d3322", "d3323"}, {"d3331", "d3332", "d3333"}, {
               "d3341", "d3342", "d3343"}}, {{"d3411", "d3412", "d3413"}, {
               "d3421", "d3422", "d3423"}, {"d3431", "d3432", "d3433"}, {
               "d3441", "d3442", "d3443"}}}}, {{{0, 0}, {0, 1}, {1, 1}}, {{0, 
             1, 0}, {0, 1, 0}}, {{1, 1, 0, 0}, {1, 0, 1, 1}, {1, 0, 1, 0}, {1,
              1, 1, 1}}}, {{{{1}, {2}, {3}}, {{}, {2}, {1, 2}}}, {{{1}, {
             2}}, {{2}, {
             2}}}, {{{1}, {2}, {3}, {
              4}}, {{1, 2}, {1, 3, 4}, {1, 3}, {1, 2, 3, 4}}}}}], 
         "ActualOutput" -> 
         HoldForm[{{"m", "u", "d", "a1", "a2", "a3", "match"}, 3, {3, 2, 4}, {
            2, 3, 4}, 
            3, {{{{"d1111", "d1112", "d1113"}, {
               "d1121", "d1122", "d1123"}}, {{"d1211", "d1212", "d1213"}, {
               "d1221", "d1222", "d1223"}}, {{"d1311", "d1312", "d1313"}, {
               "d1321", "d1322", "d1323"}}}, {{{"d2111", "d2112", "d2113"}, {
               "d2121", "d2122", "d2123"}, {"d2131", "d2132", "d2133"}}, {{
               "d2211", "d2212", "d2213"}, {"d2221", "d2222", "d2223"}, {
               "d2231", "d2232", "d2233"}}}, {{{"d3111", "d3112", "d3113"}, {
               "d3121", "d3122", "d3123"}, {"d3131", "d3132", "d3133"}, {
               "d3141", "d3142", "d3143"}}, {{"d3211", "d3212", "d3213"}, {
               "d3221", "d3222", "d3223"}, {"d3231", "d3232", "d3233"}, {
               "d3241", "d3242", "d3243"}}, {{"d3311", "d3312", "d3313"}, {
               "d3321", "d3322", "d3323"}, {"d3331", "d3332", "d3333"}, {
               "d3341", "d3342", "d3343"}}, {{"d3411", "d3412", "d3413"}, {
               "d3421", "d3422", "d3423"}, {"d3431", "d3432", "d3433"}, {
               "d3441", "d3442", "d3443"}}}}, {{{0, 0}, {0, 1}, {1, 1}}, {{0, 
             1, 0}, {0, 1, 0}}, {{1, 1, 0, 0}, {1, 0, 1, 1}, {1, 0, 1, 0}, {1,
              1, 1, 1}}}, {{{{1}, {2}, {3}}, {{}, {2}, {1, 2}}}, {{{1}, {
             2}}, {{2}, {
             2}}}, {{{1}, {2}, {3}, {
              4}}, {{1, 2}, {1, 3, 4}, {1, 3}, {1, 2, 3, 4}}}}}], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.008211`4.06491104996178, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.007999999999999119, "Seconds"], "MemoryUsed" -> 
         Quantity[8992, "Bytes"]]], 11 -> TestResultObject[
        Association[
        "TestIndex" -> 11, "TestID" -> "b92ce7d6-b371-40bc-bca0-118eda0facd1",
          "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`Cx[0]], "ExpectedOutput" -> HoldForm[{}], 
         "ActualOutput" -> HoldForm[{}], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.00009`2.1047575072713185, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[40, "Bytes"]]], 12 -> 
      TestResultObject[
        Association[
        "TestIndex" -> 12, "TestID" -> "6f369707-bc87-4a85-9737-36b2cd70965c",
          "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`Cx[1]], "ExpectedOutput" -> 
         HoldForm[{$CellContext`x1}], "ActualOutput" -> 
         HoldForm[{$CellContext`x1}], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.000103`2.163352222537166, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[88, "Bytes"]]], 13 -> 
      TestResultObject[
        Association[
        "TestIndex" -> 13, "TestID" -> "e31372d8-d0a6-463e-ad9e-b8423131a3ca",
          "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`Cx[10]], "ExpectedOutput" -> 
         HoldForm[{$CellContext`x1, $CellContext`x2, $CellContext`x3, \
$CellContext`x4, $CellContext`x5, $CellContext`x6, $CellContext`x7, \
$CellContext`x8, $CellContext`x9, $CellContext`x10}], "ActualOutput" -> 
         HoldForm[{$CellContext`x1, $CellContext`x2, $CellContext`x3, \
$CellContext`x4, $CellContext`x5, $CellContext`x6, $CellContext`x7, \
$CellContext`x8, $CellContext`x9, $CellContext`x10}], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.000151`2.3294919451251634, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[160, "Bytes"]]], 
      14 -> TestResultObject[
        Association[
        "TestIndex" -> 14, "TestID" -> "030aff77-c9fa-4fae-8f3d-71c5afac06e6",
          "Outcome" -> "Success", "Input" -> HoldForm[
           ReplaceAll[
            $CellContext`Cx[
            3], {$CellContext`x1 -> 3, $CellContext`x2 -> 2, $CellContext`x3 -> 
             1}]], "ExpectedOutput" -> HoldForm[{3, 2, 1}], "ActualOutput" -> 
         HoldForm[{3, 2, 1}], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.000117`2.2187008595781554, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[104, "Bytes"]]], 
      15 -> TestResultObject[
        Association[
        "TestIndex" -> 15, "TestID" -> "08e62121-5ae3-4ffa-a488-20a5ce7c4bd2",
          "Outcome" -> "Success", "Input" -> 
         HoldForm[{$CellContext`noM, $CellContext`noU, $CellContext`u, \
$CellContext`noAttr} = $CellContext`import[
              StringJoin[
               NotebookDirectory[], "/import/", "stream_uproof.xlsx"], 
              "stream"]; {$CellContext`noM, $CellContext`noD, $CellContext`d, \
$CellContext`noAttr} = $CellContext`import[
              StringJoin[
               NotebookDirectory[], "/import/", "stream_dproof.xlsx"], 
              "stream"]; {
             $CellContext`payoff[1, 1, 1], 
             $CellContext`payoff[2, 2, 3]}], "ExpectedOutput" -> 
         HoldForm[{
           "d11_1" "u11_1" + ("d11_2" "u11_2") $CellContext`x1 + ("d11_3" 
              "u11_3") $CellContext`x2, 
            "d23_1" "u22_1" + ("d23_2" "u22_2") $CellContext`x1 + ("d23_3" 
              "u22_3") $CellContext`x2}], "ActualOutput" -> 
         HoldForm[{
           "d11_1" "u11_1" + ("d11_2" "u11_2") $CellContext`x1 + ("d11_3" 
              "u11_3") $CellContext`x2, 
            "d23_1" "u22_1" + ("d23_2" "u22_2") $CellContext`x1 + ("d23_3" 
              "u22_3") $CellContext`x2}], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.079955`5.053360625445347, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.023999999999999133`, "Seconds"], "MemoryUsed" -> 
         Quantity[4888, "Bytes"]]], 16 -> TestResultObject[
        Association[
        "TestIndex" -> 16, "TestID" -> "86787eac-27df-4b4a-985a-35a527b3abd4",
          "Outcome" -> "Success", "Input" -> 
         HoldForm[{$CellContext`header, $CellContext`noM, $CellContext`noU, \
$CellContext`noD, $CellContext`noAttr, $CellContext`distanceMatrices, \
$CellContext`matchMatrix, $CellContext`mate} = $CellContext`import[
              StringJoin[
               NotebookDirectory[], "/import/", "precomp_proof.xlsx"], 
              "precomp"]; {
             $CellContext`payoffDM[1, 1, 1], 
             $CellContext`payoffDM[2, 2, 3]}], "ExpectedOutput" -> 
         HoldForm[{
           "d111_1" + "d111_2" $CellContext`x1 + "d111_3" $CellContext`x2, 
            "d223_1" + "d223_2" $CellContext`x1 + "d223_3" $CellContext`x2}], 
         "ActualOutput" -> 
         HoldForm[{
           "d111_1" + "d111_2" $CellContext`x1 + "d111_3" $CellContext`x2, 
            "d223_1" + "d223_2" $CellContext`x1 + "d223_3" $CellContext`x2}], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.049167`4.842188707785902, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.012000000000000455`, "Seconds"], "MemoryUsed" -> 
         Quantity[9496, "Bytes"]]], 17 -> TestResultObject[
        Association[
        "TestIndex" -> 17, "TestID" -> "4d809182-61d9-41fc-abad-c12a28946dbd",
          "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`CpayoffMatrix[$CellContext`payoff, $CellContext`noM, \
$CellContext`noU, $CellContext`noD]], "ExpectedOutput" -> 
         HoldForm[{{{
             "d11_1" "u11_1" + ("d11_2" "u11_2") $CellContext`x1 + ("d11_3" 
                "u11_3") $CellContext`x2, 
              "d12_1" "u11_1" + ("d12_2" "u11_2") $CellContext`x1 + ("d12_3" 
                "u11_3") $CellContext`x2}, {
             "d11_1" "u12_1" + ("d11_2" "u12_2") $CellContext`x1 + ("d11_3" 
                "u12_3") $CellContext`x2, 
              "d12_1" "u12_1" + ("d12_2" "u12_2") $CellContext`x1 + ("d12_3" 
                "u12_3") $CellContext`x2}, {
             "d11_1" "u13_1" + ("d11_2" "u13_2") $CellContext`x1 + ("d11_3" 
                "u13_3") $CellContext`x2, 
              "d12_1" "u13_1" + ("d12_2" "u13_2") $CellContext`x1 + ("d12_3" 
                "u13_3") $CellContext`x2}}, {{
             "d21_1" "u21_1" + ("d21_2" "u21_2") $CellContext`x1 + ("d21_3" 
                "u21_3") $CellContext`x2, 
              "d22_1" "u21_1" + ("d22_2" "u21_2") $CellContext`x1 + ("d22_3" 
                "u21_3") $CellContext`x2, 
              "d23_1" "u21_1" + ("d23_2" "u21_2") $CellContext`x1 + ("d23_3" 
                "u21_3") $CellContext`x2}, {
             "d21_1" "u22_1" + ("d21_2" "u22_2") $CellContext`x1 + ("d21_3" 
                "u22_3") $CellContext`x2, 
              "d22_1" "u22_1" + ("d22_2" "u22_2") $CellContext`x1 + ("d22_3" 
                "u22_3") $CellContext`x2, 
              "d23_1" "u22_1" + ("d23_2" "u22_2") $CellContext`x1 + ("d23_3" 
                "u22_3") $CellContext`x2}}, {{
             "d31_1" "u31_1" + ("d31_2" "u31_2") $CellContext`x1 + ("d31_3" 
                "u31_3") $CellContext`x2, 
              "d32_1" "u31_1" + ("d32_2" "u31_2") $CellContext`x1 + ("d32_3" 
                "u31_3") $CellContext`x2, 
              "d33_1" "u31_1" + ("d33_2" "u31_2") $CellContext`x1 + ("d33_3" 
                "u31_3") $CellContext`x2, 
              "d34_1" "u31_1" + ("d34_2" "u31_2") $CellContext`x1 + ("d34_3" 
                "u31_3") $CellContext`x2}, {
             "d31_1" "u32_1" + ("d31_2" "u32_2") $CellContext`x1 + ("d31_3" 
                "u32_3") $CellContext`x2, 
              "d32_1" "u32_1" + ("d32_2" "u32_2") $CellContext`x1 + ("d32_3" 
                "u32_3") $CellContext`x2, 
              "d33_1" "u32_1" + ("d33_2" "u32_2") $CellContext`x1 + ("d33_3" 
                "u32_3") $CellContext`x2, 
              "d34_1" "u32_1" + ("d34_2" "u32_2") $CellContext`x1 + ("d34_3" 
                "u32_3") $CellContext`x2}, {
             "d31_1" "u33_1" + ("d31_2" "u33_2") $CellContext`x1 + ("d31_3" 
                "u33_3") $CellContext`x2, 
              "d32_1" "u33_1" + ("d32_2" "u33_2") $CellContext`x1 + ("d32_3" 
                "u33_3") $CellContext`x2, 
              "d33_1" "u33_1" + ("d33_2" "u33_2") $CellContext`x1 + ("d33_3" 
                "u33_3") $CellContext`x2, 
              "d34_1" "u33_1" + ("d34_2" "u33_2") $CellContext`x1 + ("d34_3" 
                "u33_3") $CellContext`x2}, {
             "d31_1" "u34_1" + ("d31_2" "u34_2") $CellContext`x1 + ("d31_3" 
                "u34_3") $CellContext`x2, 
              "d32_1" "u34_1" + ("d32_2" "u34_2") $CellContext`x1 + ("d32_3" 
                "u34_3") $CellContext`x2, 
              "d33_1" "u34_1" + ("d33_2" "u34_2") $CellContext`x1 + ("d33_3" 
                "u34_3") $CellContext`x2, 
              "d34_1" "u34_1" + ("d34_2" "u34_2") $CellContext`x1 + ("d34_3" 
                "u34_3") $CellContext`x2}}}], "ActualOutput" -> 
         HoldForm[{{{
             "d11_1" "u11_1" + ("d11_2" "u11_2") $CellContext`x1 + ("d11_3" 
                "u11_3") $CellContext`x2, 
              "d12_1" "u11_1" + ("d12_2" "u11_2") $CellContext`x1 + ("d12_3" 
                "u11_3") $CellContext`x2}, {
             "d11_1" "u12_1" + ("d11_2" "u12_2") $CellContext`x1 + ("d11_3" 
                "u12_3") $CellContext`x2, 
              "d12_1" "u12_1" + ("d12_2" "u12_2") $CellContext`x1 + ("d12_3" 
                "u12_3") $CellContext`x2}, {
             "d11_1" "u13_1" + ("d11_2" "u13_2") $CellContext`x1 + ("d11_3" 
                "u13_3") $CellContext`x2, 
              "d12_1" "u13_1" + ("d12_2" "u13_2") $CellContext`x1 + ("d12_3" 
                "u13_3") $CellContext`x2}}, {{
             "d21_1" "u21_1" + ("d21_2" "u21_2") $CellContext`x1 + ("d21_3" 
                "u21_3") $CellContext`x2, 
              "d22_1" "u21_1" + ("d22_2" "u21_2") $CellContext`x1 + ("d22_3" 
                "u21_3") $CellContext`x2, 
              "d23_1" "u21_1" + ("d23_2" "u21_2") $CellContext`x1 + ("d23_3" 
                "u21_3") $CellContext`x2}, {
             "d21_1" "u22_1" + ("d21_2" "u22_2") $CellContext`x1 + ("d21_3" 
                "u22_3") $CellContext`x2, 
              "d22_1" "u22_1" + ("d22_2" "u22_2") $CellContext`x1 + ("d22_3" 
                "u22_3") $CellContext`x2, 
              "d23_1" "u22_1" + ("d23_2" "u22_2") $CellContext`x1 + ("d23_3" 
                "u22_3") $CellContext`x2}}, {{
             "d31_1" "u31_1" + ("d31_2" "u31_2") $CellContext`x1 + ("d31_3" 
                "u31_3") $CellContext`x2, 
              "d32_1" "u31_1" + ("d32_2" "u31_2") $CellContext`x1 + ("d32_3" 
                "u31_3") $CellContext`x2, 
              "d33_1" "u31_1" + ("d33_2" "u31_2") $CellContext`x1 + ("d33_3" 
                "u31_3") $CellContext`x2, 
              "d34_1" "u31_1" + ("d34_2" "u31_2") $CellContext`x1 + ("d34_3" 
                "u31_3") $CellContext`x2}, {
             "d31_1" "u32_1" + ("d31_2" "u32_2") $CellContext`x1 + ("d31_3" 
                "u32_3") $CellContext`x2, 
              "d32_1" "u32_1" + ("d32_2" "u32_2") $CellContext`x1 + ("d32_3" 
                "u32_3") $CellContext`x2, 
              "d33_1" 
               "u32_1" + ("d33_2" "u32_2") $CellContext`x1 + ("d33_3" 
                "u32_3") $CellContext`x2, 
              "d34_1" "u32_1" + ("d34_2" "u32_2") $CellContext`x1 + ("d34_3" 
                "u32_3") $CellContext`x2}, {
             "d31_1" "u33_1" + ("d31_2" "u33_2") $CellContext`x1 + ("d31_3" 
                "u33_3") $CellContext`x2, 
              "d32_1" "u33_1" + ("d32_2" "u33_2") $CellContext`x1 + ("d32_3" 
                "u33_3") $CellContext`x2, 
              "d33_1" "u33_1" + ("d33_2" "u33_2") $CellContext`x1 + ("d33_3" 
                "u33_3") $CellContext`x2, 
              "d34_1" "u33_1" + ("d34_2" "u33_2") $CellContext`x1 + ("d34_3" 
                "u33_3") $CellContext`x2}, {
             "d31_1" "u34_1" + ("d31_2" "u34_2") $CellContext`x1 + ("d31_3" 
                "u34_3") $CellContext`x2, 
              "d32_1" "u34_1" + ("d32_2" "u34_2") $CellContext`x1 + ("d32_3" 
                "u34_3") $CellContext`x2, 
              "d33_1" "u34_1" + ("d33_2" "u34_2") $CellContext`x1 + ("d33_3" 
                "u34_3") $CellContext`x2, 
              "d34_1" "u34_1" + ("d34_2" "u34_2") $CellContext`x1 + ("d34_3" 
                "u34_3") $CellContext`x2}}}], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.000897`3.103307440876086, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[8752, "Bytes"]]], 
      18 -> TestResultObject[
        Association[
        "TestIndex" -> 18, "TestID" -> "2499afe5-d7fc-4551-8887-e5d9dd27e4b6",
          "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`CpayoffMatrix[$CellContext`payoffDM, \
$CellContext`noM, $CellContext`noU, $CellContext`noD]], "ExpectedOutput" -> 
         HoldForm[{{{
             "d111_1" + "d111_2" $CellContext`x1 + "d111_3" $CellContext`x2, 
              "d112_1" + "d112_2" $CellContext`x1 + 
              "d112_3" $CellContext`x2}, {
             "d121_1" + "d121_2" $CellContext`x1 + "d121_3" $CellContext`x2, 
              "d122_1" + "d122_2" $CellContext`x1 + 
              "d122_3" $CellContext`x2}, {
             "d131_1" + "d131_2" $CellContext`x1 + "d131_3" $CellContext`x2, 
              "d132_1" + "d132_2" $CellContext`x1 + 
              "d132_3" $CellContext`x2}}, {{
             "d211_1" + "d211_2" $CellContext`x1 + "d211_3" $CellContext`x2, 
              "d212_1" + "d212_2" $CellContext`x1 + "d212_3" $CellContext`x2, 
              "d213_1" + "d213_2" $CellContext`x1 + 
              "d213_3" $CellContext`x2}, {
             "d221_1" + "d221_2" $CellContext`x1 + "d221_3" $CellContext`x2, 
              "d222_1" + "d222_2" $CellContext`x1 + "d222_3" $CellContext`x2, 
              "d223_1" + "d223_2" $CellContext`x1 + 
              "d223_3" $CellContext`x2}}, {{
             "d311_1" + "d311_2" $CellContext`x1 + "d311_3" $CellContext`x2, 
              "d312_1" + "d312_2" $CellContext`x1 + "d312_3" $CellContext`x2, 
              "d313_1" + "d313_2" $CellContext`x1 + "d313_3" $CellContext`x2, 
              "d314_1" + "d314_2" $CellContext`x1 + 
              "d314_3" $CellContext`x2}, {
             "d321_1" + "d321_2" $CellContext`x1 + "d321_3" $CellContext`x2, 
              "d322_1" + "d322_2" $CellContext`x1 + "d322_3" $CellContext`x2, 
              "d323_1" + "d323_2" $CellContext`x1 + "d323_3" $CellContext`x2, 
              "d324_1" + "d324_2" $CellContext`x1 + 
              "d324_3" $CellContext`x2}, {
             "d331_1" + "d331_2" $CellContext`x1 + "d331_3" $CellContext`x2, 
              "d332_1" + "d332_2" $CellContext`x1 + "d332_3" $CellContext`x2, 
              "d333_1" + "d333_2" $CellContext`x1 + "d333_3" $CellContext`x2, 
              "d334_1" + "d334_2" $CellContext`x1 + 
              "d334_3" $CellContext`x2}, {
             "d341_1" + "d341_2" $CellContext`x1 + "d341_3" $CellContext`x2, 
              "d342_1" + "d342_2" $CellContext`x1 + "d342_3" $CellContext`x2, 
              "d343_1" + "d343_2" $CellContext`x1 + "d343_3" $CellContext`x2, 
              "d344_1" + "d344_2" $CellContext`x1 + 
              "d344_3" $CellContext`x2}}}], "ActualOutput" -> 
         HoldForm[{{{
             "d111_1" + "d111_2" $CellContext`x1 + "d111_3" $CellContext`x2, 
              "d112_1" + "d112_2" $CellContext`x1 + 
              "d112_3" $CellContext`x2}, {
             "d121_1" + "d121_2" $CellContext`x1 + "d121_3" $CellContext`x2, 
              "d122_1" + "d122_2" $CellContext`x1 + 
              "d122_3" $CellContext`x2}, {
             "d131_1" + "d131_2" $CellContext`x1 + "d131_3" $CellContext`x2, 
              "d132_1" + "d132_2" $CellContext`x1 + 
              "d132_3" $CellContext`x2}}, {{
             "d211_1" + "d211_2" $CellContext`x1 + "d211_3" $CellContext`x2, 
              "d212_1" + "d212_2" $CellContext`x1 + "d212_3" $CellContext`x2, 
              "d213_1" + "d213_2" $CellContext`x1 + 
              "d213_3" $CellContext`x2}, {
             "d221_1" + "d221_2" $CellContext`x1 + "d221_3" $CellContext`x2, 
              "d222_1" + "d222_2" $CellContext`x1 + "d222_3" $CellContext`x2, 
              "d223_1" + "d223_2" $CellContext`x1 + 
              "d223_3" $CellContext`x2}}, {{
             "d311_1" + "d311_2" $CellContext`x1 + "d311_3" $CellContext`x2, 
              "d312_1" + "d312_2" $CellContext`x1 + "d312_3" $CellContext`x2, 
              "d313_1" + "d313_2" $CellContext`x1 + "d313_3" $CellContext`x2, 
              "d314_1" + "d314_2" $CellContext`x1 + 
              "d314_3" $CellContext`x2}, {
             "d321_1" + "d321_2" $CellContext`x1 + "d321_3" $CellContext`x2, 
              "d322_1" + "d322_2" $CellContext`x1 + "d322_3" $CellContext`x2, 
              "d323_1" + "d323_2" $CellContext`x1 + "d323_3" $CellContext`x2, 
              "d324_1" + "d324_2" $CellContext`x1 + 
              "d324_3" $CellContext`x2}, {
             "d331_1" + "d331_2" $CellContext`x1 + "d331_3" $CellContext`x2, 
              "d332_1" + "d332_2" $CellContext`x1 + "d332_3" $CellContext`x2, 
              "d333_1" + "d333_2" $CellContext`x1 + "d333_3" $CellContext`x2, 
              "d334_1" + "d334_2" $CellContext`x1 + 
              "d334_3" $CellContext`x2}, {
             "d341_1" + "d341_2" $CellContext`x1 + "d341_3" $CellContext`x2, 
              "d342_1" + "d342_2" $CellContext`x1 + "d342_3" $CellContext`x2, 
              "d343_1" + "d343_2" $CellContext`x1 + "d343_3" $CellContext`x2, 
              "d344_1" + "d344_2" $CellContext`x1 + 
              "d344_3" $CellContext`x2}}}], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.000784`3.044831060516432, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.004000000000000448, "Seconds"], "MemoryUsed" -> 
         Quantity[9032, "Bytes"]]], 19 -> TestResultObject[
        Association[
        "TestIndex" -> 19, "TestID" -> "18765527-a334-41b0-8ddf-c6822a1160a9",
          "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`CpayoffMatrix[$CellContext`payoff, $CellContext`noM, \
$CellContext`noU, $CellContext`noD, True]], "ExpectedOutput" -> 
         HoldForm[{{{
             "d11_1" "u11_1" + ("d11_2" "u11_2") $CellContext`x1 + ("d11_3" 
                "u11_3") $CellContext`x2, 
              "d12_1" "u11_1" + ("d12_2" "u11_2") $CellContext`x1 + ("d12_3" 
                "u11_3") $CellContext`x2}, {
             "d11_1" "u12_1" + ("d11_2" "u12_2") $CellContext`x1 + ("d11_3" 
                "u12_3") $CellContext`x2, 
              "d12_1" "u12_1" + ("d12_2" "u12_2") $CellContext`x1 + ("d12_3" 
                "u12_3") $CellContext`x2}, {
             "d11_1" "u13_1" + ("d11_2" "u13_2") $CellContext`x1 + ("d11_3" 
                "u13_3") $CellContext`x2, 
              "d12_1" "u13_1" + ("d12_2" "u13_2") $CellContext`x1 + ("d12_3" 
                "u13_3") $CellContext`x2}}, {{
             "d21_1" "u21_1" + ("d21_2" "u21_2") $CellContext`x1 + ("d21_3" 
                "u21_3") $CellContext`x2, 
              "d22_1" "u21_1" + ("d22_2" "u21_2") $CellContext`x1 + ("d22_3" 
                "u21_3") $CellContext`x2, 
              "d23_1" "u21_1" + ("d23_2" "u21_2") $CellContext`x1 + ("d23_3" 
                "u21_3") $CellContext`x2}, {
             "d21_1" "u22_1" + ("d21_2" "u22_2") $CellContext`x1 + ("d21_3" 
                "u22_3") $CellContext`x2, 
              "d22_1" "u22_1" + ("d22_2" "u22_2") $CellContext`x1 + ("d22_3" 
                "u22_3") $CellContext`x2, 
              "d23_1" "u22_1" + ("d23_2" "u22_2") $CellContext`x1 + ("d23_3" 
                "u22_3") $CellContext`x2}}, {{
             "d31_1" "u31_1" + ("d31_2" "u31_2") $CellContext`x1 + ("d31_3" 
                "u31_3") $CellContext`x2, 
              "d32_1" "u31_1" + ("d32_2" "u31_2") $CellContext`x1 + ("d32_3" 
                "u31_3") $CellContext`x2, 
              "d33_1" "u31_1" + ("d33_2" "u31_2") $CellContext`x1 + ("d33_3" 
                "u31_3") $CellContext`x2, 
              "d34_1" "u31_1" + ("d34_2" "u31_2") $CellContext`x1 + ("d34_3" 
                "u31_3") $CellContext`x2}, {
             "d31_1" "u32_1" + ("d31_2" "u32_2") $CellContext`x1 + ("d31_3" 
                "u32_3") $CellContext`x2, 
              "d32_1" "u32_1" + ("d32_2" "u32_2") $CellContext`x1 + ("d32_3" 
                "u32_3") $CellContext`x2, 
              "d33_1" "u32_1" + ("d33_2" "u32_2") $CellContext`x1 + ("d33_3" 
                "u32_3") $CellContext`x2, 
              "d34_1" "u32_1" + ("d34_2" "u32_2") $CellContext`x1 + ("d34_3" 
                "u32_3") $CellContext`x2}, {
             "d31_1" "u33_1" + ("d31_2" "u33_2") $CellContext`x1 + ("d31_3" 
                "u33_3") $CellContext`x2, 
              "d32_1" "u33_1" + ("d32_2" "u33_2") $CellContext`x1 + ("d32_3" 
                "u33_3") $CellContext`x2, 
              "d33_1" "u33_1" + ("d33_2" "u33_2") $CellContext`x1 + ("d33_3" 
                "u33_3") $CellContext`x2, 
              "d34_1" "u33_1" + ("d34_2" "u33_2") $CellContext`x1 + ("d34_3" 
                "u33_3") $CellContext`x2}, {
             "d31_1" "u34_1" + ("d31_2" "u34_2") $CellContext`x1 + ("d31_3" 
                "u34_3") $CellContext`x2, 
              "d32_1" "u34_1" + ("d32_2" "u34_2") $CellContext`x1 + ("d32_3" 
                "u34_3") $CellContext`x2, 
              "d33_1" "u34_1" + ("d33_2" "u34_2") $CellContext`x1 + ("d33_3" 
                "u34_3") $CellContext`x2, 
              "d34_1" "u34_1" + ("d34_2" "u34_2") $CellContext`x1 + ("d34_3" 
                "u34_3") $CellContext`x2}}}], "ActualOutput" -> 
         HoldForm[{{{
             "d11_1" "u11_1" + ("d11_2" "u11_2") $CellContext`x1 + ("d11_3" 
                "u11_3") $CellContext`x2, 
              "d12_1" "u11_1" + ("d12_2" "u11_2") $CellContext`x1 + ("d12_3" 
                "u11_3") $CellContext`x2}, {
             "d11_1" "u12_1" + ("d11_2" "u12_2") $CellContext`x1 + ("d11_3" 
                "u12_3") $CellContext`x2, 
              "d12_1" "u12_1" + ("d12_2" "u12_2") $CellContext`x1 + ("d12_3" 
                "u12_3") $CellContext`x2}, {
             "d11_1" "u13_1" + ("d11_2" "u13_2") $CellContext`x1 + ("d11_3" 
                "u13_3") $CellContext`x2, 
              "d12_1" "u13_1" + ("d12_2" "u13_2") $CellContext`x1 + ("d12_3" 
                "u13_3") $CellContext`x2}}, {{
             "d21_1" "u21_1" + ("d21_2" "u21_2") $CellContext`x1 + ("d21_3" 
                "u21_3") $CellContext`x2, 
              "d22_1" "u21_1" + ("d22_2" "u21_2") $CellContext`x1 + ("d22_3" 
                "u21_3") $CellContext`x2, 
              "d23_1" "u21_1" + ("d23_2" "u21_2") $CellContext`x1 + ("d23_3" 
                "u21_3") $CellContext`x2}, {
             "d21_1" "u22_1" + ("d21_2" "u22_2") $CellContext`x1 + ("d21_3" 
                "u22_3") $CellContext`x2, 
              "d22_1" "u22_1" + ("d22_2" "u22_2") $CellContext`x1 + ("d22_3" 
                "u22_3") $CellContext`x2, 
              "d23_1" "u22_1" + ("d23_2" "u22_2") $CellContext`x1 + ("d23_3" 
                "u22_3") $CellContext`x2}}, {{
             "d31_1" "u31_1" + ("d31_2" "u31_2") $CellContext`x1 + ("d31_3" 
                "u31_3") $CellContext`x2, 
              "d32_1" "u31_1" + ("d32_2" "u31_2") $CellContext`x1 + ("d32_3" 
                "u31_3") $CellContext`x2, 
              "d33_1" 
               "u31_1" + ("d33_2" "u31_2") $CellContext`x1 + ("d33_3" 
                "u31_3") $CellContext`x2, 
              "d34_1" "u31_1" + ("d34_2" "u31_2") $CellContext`x1 + ("d34_3" 
                "u31_3") $CellContext`x2}, {
             "d31_1" "u32_1" + ("d31_2" "u32_2") $CellContext`x1 + ("d31_3" 
                "u32_3") $CellContext`x2, 
              "d32_1" "u32_1" + ("d32_2" "u32_2") $CellContext`x1 + ("d32_3" 
                "u32_3") $CellContext`x2, 
              "d33_1" "u32_1" + ("d33_2" "u32_2") $CellContext`x1 + ("d33_3" 
                "u32_3") $CellContext`x2, 
              "d34_1" "u32_1" + ("d34_2" "u32_2") $CellContext`x1 + ("d34_3" 
                "u32_3") $CellContext`x2}, {
             "d31_1" "u33_1" + ("d31_2" "u33_2") $CellContext`x1 + ("d31_3" 
                "u33_3") $CellContext`x2, 
              "d32_1" "u33_1" + ("d32_2" "u33_2") $CellContext`x1 + ("d32_3" 
                "u33_3") $CellContext`x2, 
              "d33_1" "u33_1" + ("d33_2" "u33_2") $CellContext`x1 + ("d33_3" 
                "u33_3") $CellContext`x2, 
              "d34_1" "u33_1" + ("d34_2" "u33_2") $CellContext`x1 + ("d34_3" 
                "u33_3") $CellContext`x2}, {
             "d31_1" "u34_1" + ("d31_2" "u34_2") $CellContext`x1 + ("d31_3" 
                "u34_3") $CellContext`x2, 
              "d32_1" "u34_1" + ("d32_2" "u34_2") $CellContext`x1 + ("d32_3" 
                "u34_3") $CellContext`x2, 
              "d33_1" "u34_1" + ("d33_2" "u34_2") $CellContext`x1 + ("d33_3" 
                "u34_3") $CellContext`x2, 
              "d34_1" "u34_1" + ("d34_2" "u34_2") $CellContext`x1 + ("d34_3" 
                "u34_3") $CellContext`x2}}}], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.015691`4.34616562023618, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.0039999999999995595`, "Seconds"], "MemoryUsed" -> 
         Quantity[19336, "Bytes"]]], 20 -> TestResultObject[
        Association[
        "TestIndex" -> 20, "TestID" -> "7016b619-8799-4208-bba1-03b2bb5d84db",
          "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`CpayoffMatrix[$CellContext`payoffDM, \
$CellContext`noM, $CellContext`noU, $CellContext`noD, True]], 
         "ExpectedOutput" -> 
         HoldForm[{{{
             "d111_1" + "d111_2" $CellContext`x1 + "d111_3" $CellContext`x2, 
              "d112_1" + "d112_2" $CellContext`x1 + 
              "d112_3" $CellContext`x2}, {
             "d121_1" + "d121_2" $CellContext`x1 + "d121_3" $CellContext`x2, 
              "d122_1" + "d122_2" $CellContext`x1 + 
              "d122_3" $CellContext`x2}, {
             "d131_1" + "d131_2" $CellContext`x1 + "d131_3" $CellContext`x2, 
              "d132_1" + "d132_2" $CellContext`x1 + 
              "d132_3" $CellContext`x2}}, {{
             "d211_1" + "d211_2" $CellContext`x1 + "d211_3" $CellContext`x2, 
              "d212_1" + "d212_2" $CellContext`x1 + "d212_3" $CellContext`x2, 
              "d213_1" + "d213_2" $CellContext`x1 + 
              "d213_3" $CellContext`x2}, {
             "d221_1" + "d221_2" $CellContext`x1 + "d221_3" $CellContext`x2, 
              "d222_1" + "d222_2" $CellContext`x1 + "d222_3" $CellContext`x2, 
              "d223_1" + "d223_2" $CellContext`x1 + 
              "d223_3" $CellContext`x2}}, {{
             "d311_1" + "d311_2" $CellContext`x1 + "d311_3" $CellContext`x2, 
              "d312_1" + "d312_2" $CellContext`x1 + "d312_3" $CellContext`x2, 
              "d313_1" + "d313_2" $CellContext`x1 + "d313_3" $CellContext`x2, 
              "d314_1" + "d314_2" $CellContext`x1 + 
              "d314_3" $CellContext`x2}, {
             "d321_1" + "d321_2" $CellContext`x1 + "d321_3" $CellContext`x2, 
              "d322_1" + "d322_2" $CellContext`x1 + "d322_3" $CellContext`x2, 
              "d323_1" + "d323_2" $CellContext`x1 + "d323_3" $CellContext`x2, 
              "d324_1" + "d324_2" $CellContext`x1 + 
              "d324_3" $CellContext`x2}, {
             "d331_1" + "d331_2" $CellContext`x1 + "d331_3" $CellContext`x2, 
              "d332_1" + "d332_2" $CellContext`x1 + "d332_3" $CellContext`x2, 
              "d333_1" + "d333_2" $CellContext`x1 + "d333_3" $CellContext`x2, 
              "d334_1" + "d334_2" $CellContext`x1 + 
              "d334_3" $CellContext`x2}, {
             "d341_1" + "d341_2" $CellContext`x1 + "d341_3" $CellContext`x2, 
              "d342_1" + "d342_2" $CellContext`x1 + "d342_3" $CellContext`x2, 
              "d343_1" + "d343_2" $CellContext`x1 + "d343_3" $CellContext`x2, 
              "d344_1" + "d344_2" $CellContext`x1 + 
              "d344_3" $CellContext`x2}}}], "ActualOutput" -> 
         HoldForm[{{{
             "d111_1" + "d111_2" $CellContext`x1 + "d111_3" $CellContext`x2, 
              "d112_1" + "d112_2" $CellContext`x1 + "d112_3" $CellContext`x2},
              {
             "d121_1" + "d121_2" $CellContext`x1 + "d121_3" $CellContext`x2, 
              "d122_1" + "d122_2" $CellContext`x1 + 
              "d122_3" $CellContext`x2}, {
             "d131_1" + "d131_2" $CellContext`x1 + "d131_3" $CellContext`x2, 
              "d132_1" + "d132_2" $CellContext`x1 + 
              "d132_3" $CellContext`x2}}, {{
             "d211_1" + "d211_2" $CellContext`x1 + "d211_3" $CellContext`x2, 
              "d212_1" + "d212_2" $CellContext`x1 + "d212_3" $CellContext`x2, 
              "d213_1" + "d213_2" $CellContext`x1 + 
              "d213_3" $CellContext`x2}, {
             "d221_1" + "d221_2" $CellContext`x1 + "d221_3" $CellContext`x2, 
              "d222_1" + "d222_2" $CellContext`x1 + "d222_3" $CellContext`x2, 
              "d223_1" + "d223_2" $CellContext`x1 + 
              "d223_3" $CellContext`x2}}, {{
             "d311_1" + "d311_2" $CellContext`x1 + "d311_3" $CellContext`x2, 
              "d312_1" + "d312_2" $CellContext`x1 + "d312_3" $CellContext`x2, 
              "d313_1" + "d313_2" $CellContext`x1 + "d313_3" $CellContext`x2, 
              "d314_1" + "d314_2" $CellContext`x1 + 
              "d314_3" $CellContext`x2}, {
             "d321_1" + "d321_2" $CellContext`x1 + "d321_3" $CellContext`x2, 
              "d322_1" + "d322_2" $CellContext`x1 + "d322_3" $CellContext`x2, 
              "d323_1" + "d323_2" $CellContext`x1 + "d323_3" $CellContext`x2, 
              "d324_1" + "d324_2" $CellContext`x1 + 
              "d324_3" $CellContext`x2}, {
             "d331_1" + "d331_2" $CellContext`x1 + "d331_3" $CellContext`x2, 
              "d332_1" + "d332_2" $CellContext`x1 + "d332_3" $CellContext`x2, 
              "d333_1" + "d333_2" $CellContext`x1 + "d333_3" $CellContext`x2, 
              "d334_1" + "d334_2" $CellContext`x1 + 
              "d334_3" $CellContext`x2}, {
             "d341_1" + "d341_2" $CellContext`x1 + "d341_3" $CellContext`x2, 
              "d342_1" + "d342_2" $CellContext`x1 + "d342_3" $CellContext`x2, 
              "d343_1" + "d343_2" $CellContext`x1 + "d343_3" $CellContext`x2, 
              "d344_1" + "d344_2" $CellContext`x1 + 
              "d344_3" $CellContext`x2}}}], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.015152`4.330984959491192, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.0039999999999995595`, "Seconds"], "MemoryUsed" -> 
         Quantity[10336, "Bytes"]]], 21 -> TestResultObject[
        Association[
        "TestIndex" -> 21, "TestID" -> "25ff1638-4df7-41c0-a979-e6da050970e8",
          "Outcome" -> "Success", "Input" -> 
         HoldForm[$CellContext`mates = {{{1, 1, 3}, {1, 3, 1}, {1, 3, 2}}, {{
              2, 1, 1}, {2, 2, 1}, {2, 2, 3}, {2, 3, 2}}}; 
           ClearAll[$CellContext`f]; \
$CellContext`Ctotalpayoff[$CellContext`f, $CellContext`mates]], 
         "ExpectedOutput" -> HoldForm[{{
             $CellContext`f[1, 1, 3], 
             $CellContext`f[1, 3, 1], 
             $CellContext`f[1, 3, 2]}, {
             $CellContext`f[2, 1, 1], 
             $CellContext`f[2, 2, 1], 
             $CellContext`f[2, 2, 3], 
             $CellContext`f[2, 3, 2]}}], "ActualOutput" -> HoldForm[{{
             $CellContext`f[1, 1, 3], 
             $CellContext`f[1, 3, 1], 
             $CellContext`f[1, 3, 2]}, {
             $CellContext`f[2, 1, 1], 
             $CellContext`f[2, 2, 1], 
             $CellContext`f[2, 2, 3], 
             $CellContext`f[2, 3, 2]}}], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.000122`2.236874828506742, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[-3520, "Bytes"]]], 
      22 -> TestResultObject[
        Association[
        "TestIndex" -> 22, "TestID" -> "03fa0e2f-afcd-4b09-9a98-083007678abc",
          "Outcome" -> "Success", "Input" -> 
         HoldForm[{$CellContext`header, $CellContext`noM, $CellContext`noU, \
$CellContext`noD, $CellContext`noAttr, $CellContext`distanceMatrices, \
$CellContext`matchMatrix, $CellContext`mate} = $CellContext`import[
              StringJoin[
               NotebookDirectory[], "/import/", "precomp_testdata.dat"], 
              "precomp"]; $CellContext`payoffMatrix = \
$CellContext`CpayoffMatrix[$CellContext`payoffDM, $CellContext`noM, \
$CellContext`noU, $CellContext`noD]; $CellContext`payoffMatrix = 
            ReplaceAll[$CellContext`payoffMatrix, 
              Thread[$CellContext`Cx[4] -> {
                1, 2, 1.5, 
                 2.3}]]; $CellContext`matchMatrix = \
$CellContext`CmatchMatrix[$CellContext`payoffMatrix, 2, 
              1]; $CellContext`mates = \
$CellContext`Cmates[$CellContext`matchMatrix]; \
$CellContext`Ctotalpayoff[$CellContext`payoffMatrix, $CellContext`mates]], 
         "ExpectedOutput" -> 
         HoldForm[{{143.38432727530034`, 141.64236324717336`, 
           146.1065886170873, 148.1376959792836, 129.7564786779239, 
           153.45691350022688`, 181.4851805403922, 163.28937335258303`, 
           159.62782683340205`, 138.47633717860964`}, {134.4308757768885, 
           161.50544964928653`, 139.71934753505747`, 143.07265183620453`, 
           150.62513113710872`, 133.5036784973964, 151.14417598184255`, 
           164.5085003499479, 154.51607772838523`, 154.6591074160454}, {
           149.397572680307, 134.63996343922105`, 151.6569710865784, 
           152.7663744601446, 152.6602246197932, 140.39155661692223`, 
           158.64352076161651`, 143.77816226974633`, 135.13750727177936`, 
           164.94251612835757`}}], "ActualOutput" -> 
         HoldForm[{{143.38432727530034`, 141.64236324717336`, 
           146.1065886170873, 148.1376959792836, 129.7564786779239, 
           153.45691350022688`, 181.4851805403922, 163.28937335258303`, 
           159.62782683340205`, 138.47633717860964`}, {134.4308757768885, 
           161.50544964928653`, 139.71934753505747`, 143.07265183620453`, 
           150.62513113710872`, 133.5036784973964, 151.14417598184255`, 
           164.5085003499479, 154.51607772838523`, 154.6591074160454}, {
           149.397572680307, 134.63996343922105`, 151.6569710865784, 
           152.7663744601446, 152.6602246197932, 140.39155661692223`, 
           158.64352076161651`, 143.77816226974633`, 135.13750727177936`, 
           164.94251612835757`}}], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.034225`4.684858454638022, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.03199999999999914, "Seconds"], "MemoryUsed" -> 
         Quantity[-80288, "Bytes"]]], 23 -> TestResultObject[
        Association[
        "TestIndex" -> 23, "TestID" -> "6f3588b0-b9b3-4248-9d84-a75ae089dab3",
          "Outcome" -> "Success", "Input" -> HoldForm[
           ReplaceAll[
            $CellContext`Ctotalpayoff[$CellContext`payoffDM, \
$CellContext`mates], 
            Thread[$CellContext`Cx[4] -> {1, 2, 1.5, 2.3}]]], 
         "ExpectedOutput" -> 
         HoldForm[{{143.38432727530034`, 141.64236324717336`, 
           146.1065886170873, 148.1376959792836, 129.7564786779239, 
           153.45691350022688`, 181.4851805403922, 163.28937335258303`, 
           159.62782683340205`, 138.47633717860964`}, {134.4308757768885, 
           161.50544964928653`, 139.71934753505747`, 143.07265183620453`, 
           150.62513113710872`, 133.5036784973964, 151.14417598184255`, 
           164.5085003499479, 154.51607772838523`, 154.6591074160454}, {
           149.397572680307, 134.63996343922105`, 151.6569710865784, 
           152.7663744601446, 152.6602246197932, 140.39155661692223`, 
           158.64352076161651`, 143.77816226974633`, 135.13750727177936`, 
           164.94251612835757`}}], "ActualOutput" -> 
         HoldForm[{{143.38432727530034`, 141.64236324717336`, 
           146.1065886170873, 148.1376959792836, 129.7564786779239, 
           153.45691350022688`, 181.4851805403922, 163.28937335258303`, 
           159.62782683340205`, 138.47633717860964`}, {134.4308757768885, 
           161.50544964928653`, 139.71934753505747`, 143.07265183620453`, 
           150.62513113710872`, 133.5036784973964, 151.14417598184255`, 
           164.5085003499479, 154.51607772838523`, 154.6591074160454}, {
           149.397572680307, 134.63996343922105`, 151.6569710865784, 
           152.7663744601446, 152.6602246197932, 140.39155661692223`, 
           158.64352076161651`, 143.77816226974633`, 135.13750727177936`, 
           164.94251612835757`}}], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.00151`3.3294919451251634, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[944, "Bytes"]]], 
      24 -> TestResultObject[
        Association[
        "TestIndex" -> 24, "TestID" -> "214accc7-a9ff-4fe0-ba77-65e821101c39",
          "Outcome" -> "Success", "Input" -> 
         HoldForm[$CellContext`payoffMatrix = CompressedData["
1:eJwtUj1IQlEUfgQ1uCgiBIlG0GBLSNHQIByiaBFCh4Z4LUYRLRoRiA2R7917
34+k1WTRVDREBNHibOBUay4SvCWQioayoaXu9XsHLvfd755zvvN9943l8tn1
AU3TBuUKyuWVIreLOxUKtC8KqRFOT48ywpyqzV5Czxuk4MA9p1H2lmkMHeJ8
JGg7JSteBSk4HrSxfzLSVGyZ1IhLpMgpqz7+LFLphRmLLmV5O+qAb8qm07qM
XUY/Cb3aXGLo45WRV+fA71zwfnHw6oIe5HjVkEXvMp3FGPoPmyTVeKVrhvuy
BZ6kwH3Upr7ezglNqzA4bajIMfTtlHFucfRdOwb+zKEr7OvoOZina5KiiyRN
4B8c8y9YpCsDiy7tqYF+/fyMi3zHhO6uAZ9uDuC3xzBvugK8xjCv4PDDFfBj
38A+a2CuKxPvMy/ASwI6pD/9+lgNelY5dNcZ8kIG6jYF3mm8hro5398VC+cX
GzyTDPXnJnSe+f/Ft0UTqmHLht5lh/4BR6UKxw==
             
             "]; $CellContext`generateAssignmentMatrix[$CellContext`\
payoffMatrix, 3, 1]], "ExpectedOutput" -> 
         HoldForm[{{0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0}, {0, 0, 0, 1,
            0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0}, {1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 
           0, 0, 0, 1, 0}, {0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0}, {0, 
           1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1}}], "ActualOutput" -> 
         HoldForm[{{0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0}, {0, 0, 0, 1,
            0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0}, {1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 
           0, 0, 0, 1, 0}, {0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0}, {0, 
           1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1}}], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.0012`3.229696243879619, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.004000000000001336, "Seconds"], "MemoryUsed" -> 
         Quantity[-7408, "Bytes"]]], 25 -> TestResultObject[
        Association[
        "TestIndex" -> 25, "TestID" -> "54586a74-f153-45b6-a3f3-4fe65d4693fb",
          "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`generateAssignmentMatrix[$CellContext`payoffMatrix, {
            3, 3, 3, 3, 3}, 1]], "ExpectedOutput" -> 
         HoldForm[{{0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0}, {0, 0, 0, 1,
            0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0}, {1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 
           0, 0, 0, 1, 0}, {0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0}, {0, 
           1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1}}], "ActualOutput" -> 
         HoldForm[{{0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0}, {0, 0, 0, 1,
            0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0}, {1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 
           0, 0, 0, 1, 0}, {0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0}, {0, 
           1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1}}], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.001173`3.2198130099475235, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[920, "Bytes"]]], 
      26 -> TestResultObject[
        Association[
        "TestIndex" -> 26, "TestID" -> "6272bccb-683e-489c-a9f0-bfa7171606f0",
          "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`generateAssignmentMatrix[$CellContext`payoffMatrix, {
            3, 1, 3, 0, 2}, 1]], "ExpectedOutput" -> 
         HoldForm[{{0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1}, {0, 0, 0, 0,
            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 
           0, 0, 0, 1, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 
           0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}}], "ActualOutput" -> 
         HoldForm[{{0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1}, {0, 0, 0, 0,
            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 
           0, 0, 0, 1, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 
           0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}}], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.001169`3.218329508993834, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[920, "Bytes"]]], 
      27 -> TestResultObject[
        Association[
        "TestIndex" -> 27, "TestID" -> "606e5224-e4ac-4bcb-985b-7fd2fa0b6ca3",
          "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`generateAssignmentMatrix[$CellContext`payoffMatrix, {
            3, 1, 3, 0, 2}, {1, 0, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0}]], 
         "ExpectedOutput" -> 
         HoldForm[{{0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0}, {0, 0, 0, 0,
            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 
           0, 0, 0, 1, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 
           0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}}], "ActualOutput" -> 
         HoldForm[{{0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0}, {0, 0, 0, 0,
            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 
           0, 0, 0, 1, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 
           0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0}}], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.001148`3.2104568858939486, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[920, "Bytes"]]], 
      28 -> TestResultObject[
        Association[
        "TestIndex" -> 28, "TestID" -> "d420a04d-e8a9-401c-9431-abb10928f72a",
          "Outcome" -> "Success", "Input" -> 
         HoldForm[{$CellContext`header, $CellContext`noM, $CellContext`noU, \
$CellContext`noD, $CellContext`noAttr, $CellContext`distanceMatrices, \
$CellContext`matchMatrix, $CellContext`mate} = $CellContext`import[
              StringJoin[
               NotebookDirectory[], "/import/", "precomp_testdata.dat"], 
              "precomp"]; $CellContext`payoffMatrix = \
$CellContext`CpayoffMatrix[$CellContext`payoffDM, $CellContext`noM, \
$CellContext`noU, $CellContext`noD]; $CellContext`payoffMatrix = 
            ReplaceAll[$CellContext`payoffMatrix, 
              
              Thread[$CellContext`Cx[4] -> {
                1, 2, 1.5, 
                 2.3}]]; $CellContext`CmatchMatrix[$CellContext`payoffMatrix, 
             2, 1]], "ExpectedOutput" -> 
         HoldForm[{{{0, 0, 0, 0, 0, 0, 0, 0, 1, 0}, {0, 0, 0, 1, 0, 1, 0, 0, 
           0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 0, 0, 0, 0, 
           0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 1, 0, 0, 0, 0, 0, 0, 
           0}, {1, 0, 0, 0, 0, 0, 1, 0, 0, 0}, {0, 1, 0, 0, 0, 0, 0, 0, 0, 
           0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1}, {0, 0, 0, 0, 0, 0, 0, 1, 0, 
           0}}, {{0, 0, 0, 0, 1, 0, 0, 0, 1, 0}, {0, 0, 0, 0, 0, 0, 1, 0, 0, 
           0}, {0, 0, 0, 1, 0, 0, 0, 0, 0, 1}, {0, 1, 0, 0, 0, 0, 0, 0, 0, 
           0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 
           0}, {1, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 1, 0, 0, 0, 0, 0, 0, 
           0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 0, 1, 0, 
           0}}, {{0, 0, 0, 0, 0, 0, 1, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 
           0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0}, {1, 1, 0, 0, 0, 0, 0, 0, 0, 
           0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 
           0}, {0, 0, 0, 0, 1, 1, 0, 0, 0, 0}, {0, 0, 1, 0, 0, 0, 0, 1, 0, 
           0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 0, 0, 0, 
           1}}}], "ActualOutput" -> 
         HoldForm[{{{0, 0, 0, 0, 0, 0, 0, 0, 1, 0}, {0, 0, 0, 1, 0, 1, 0, 0, 
           0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 0, 0, 0, 0, 
           0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 1, 0, 0, 0, 0, 0, 0, 
           0}, {1, 0, 0, 0, 0, 0, 1, 0, 0, 0}, {0, 1, 0, 0, 0, 0, 0, 0, 0, 
           0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1}, {0, 0, 0, 0, 0, 0, 0, 1, 0, 
           0}}, {{0, 0, 0, 0, 1, 0, 0, 0, 1, 0}, {0, 0, 0, 0, 0, 0, 1, 0, 0, 
           0}, {0, 0, 0, 1, 0, 0, 0, 0, 0, 1}, {0, 1, 0, 0, 0, 0, 0, 0, 0, 
           0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 
           0}, {1, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 1, 0, 0, 0, 0, 0, 0, 
           0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 0, 1, 0, 
           0}}, {{0, 0, 0, 0, 0, 0, 1, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 
           0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0}, {1, 1, 0, 0, 0, 0, 0, 0, 0, 
           0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 
           0}, {0, 0, 0, 0, 1, 1, 0, 0, 0, 0}, {0, 0, 1, 0, 0, 0, 0, 1, 0, 
           0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 0, 0, 0, 
           1}}}], "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 
         Quantity[0.032733`4.665500808326031, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.03200000000000003, "Seconds"], "MemoryUsed" -> 
         Quantity[13048, "Bytes"]]], 29 -> TestResultObject[
        Association[
        "TestIndex" -> 29, "TestID" -> "9b11492e-07d4-432d-b0d4-1f2979154ea0",
          "Outcome" -> "Success", "Input" -> HoldForm[
           $CellContext`CmatchMatrix[$CellContext`payoffMatrix, {{2, 2, 2, 2, 
            2, 2, 2, 2, 2, 2}, {2, 2, 2, 2, 2, 2, 2, 2, 2, 2}, {2, 2, 2, 2, 2,
             2, 2, 2, 2, 2}}, 1]], "ExpectedOutput" -> 
         HoldForm[{{{0, 0, 0, 0, 0, 0, 0, 0, 1, 0}, {0, 0, 0, 1, 0, 1, 0, 0, 
           0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 0, 0, 0, 0, 
           0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 1, 0, 0, 0, 0, 0, 0, 
           0}, {1, 0, 0, 0, 0, 0, 1, 0, 0, 0}, {0, 1, 0, 0, 0, 0, 0, 0, 0, 
           0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1}, {0, 0, 0, 0, 0, 0, 0, 1, 0, 
           0}}, {{0, 0, 0, 0, 1, 0, 0, 0, 1, 0}, {0, 0, 0, 0, 0, 0, 1, 0, 0, 
           0}, {0, 0, 0, 1, 0, 0, 0, 0, 0, 1}, {0, 1, 0, 0, 0, 0, 0, 0, 0, 
           0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 
           0}, {1, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 1, 0, 0, 0, 0, 0, 0, 
           0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 0, 1, 0, 
           0}}, {{0, 0, 0, 0, 0, 0, 1, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 
           0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0}, {1, 1, 0, 0, 0, 0, 0, 0, 0, 
           0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 
           0}, {0, 0, 0, 0, 1, 1, 0, 0, 0, 0}, {0, 0, 1, 0, 0, 0, 0, 1, 0, 
           0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 0, 0, 0, 
           1}}}], "ActualOutput" -> 
         HoldForm[{{{0, 0, 0, 0, 0, 0, 0, 0, 1, 0}, {0, 0, 0, 1, 0, 1, 0, 0, 
           0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 1, 0, 0, 0, 0, 
           0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 1, 0, 0, 0, 0, 0, 0, 
           0}, {1, 0, 0, 0, 0, 0, 1, 0, 0, 0}, {0, 1, 0, 0, 0, 0, 0, 0, 0, 
           0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 1}, {0, 0, 0, 0, 0, 0, 0, 1, 0, 
           0}}, {{0, 0, 0, 0, 1, 0, 0, 0, 1, 0}, {0, 0, 0, 0, 0, 0, 1, 0, 0, 
           0}, {0, 0, 0, 1, 0, 0, 0, 0, 0, 1}, {0, 1, 0, 0, 0, 0, 0, 0, 0, 
           0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 
           0}, {1, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 1, 0, 0, 0, 0, 0, 0, 
           0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 1, 0, 1, 0, 
           0}}, {{0, 0, 0, 0, 0, 0, 1, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 
           0}, {0, 0, 0, 0, 0, 0, 0, 0, 1, 0}, {1, 1, 0, 0, 0, 0, 0, 0, 0, 
           0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 
           0}, {0, 0, 0, 0, 1, 1, 0, 0, 0, 0}, {0, 0, 1, 0, 0, 0, 0, 1, 0, 
           0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 1, 0, 0, 0, 0, 0, 
           1}}}], "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 
         Quantity[0.003183`3.653351636452997, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.0039999999999995595`, "Seconds"], "MemoryUsed" -> 
         Quantity[4080, "Bytes"]]], 30 -> TestResultObject[
        Association[
        "TestIndex" -> 30, "TestID" -> "00d72090-f702-43af-b29f-ac0b8e6fb665",
          "Outcome" -> "Success", "Input" -> 
         HoldForm[{$CellContext`header, $CellContext`noM, $CellContext`noU, \
$CellContext`noD, $CellContext`noAttr, $CellContext`distanceMatrices, \
$CellContext`matchMatrix, $CellContext`mate} = $CellContext`import[
              StringJoin[
               NotebookDirectory[], "/import/precomp_proof_1-1.xlsx"], 
              "precomp"]; $CellContext`Cineqmembers[$CellContext`mate]], 
         "ExpectedOutput" -> 
         HoldForm[{{{{{1, 1, 1}, {1, 2, 2}}, {{1, 1, 1}, {1, 3, 2}}, {{1, 2, 
            2}, {1, 3, 2}}}, {{{1, 1, 2}, {1, 2, 1}}, {{1, 1, 2}, {1, 3, 
            1}}, {{1, 2, 2}, {1, 3, 2}}}}, {{{{2, 1, 1}, {2, 2, 2}}}, {{{2, 1,
             2}, {2, 2, 1}}}}, {{{{3, 1, 1}, {3, 2, 2}}, {{3, 1, 1}, {3, 3, 
            3}}, {{3, 1, 1}, {3, 4, 4}}, {{3, 2, 2}, {3, 3, 3}}, {{3, 2, 2}, {
            3, 4, 4}}, {{3, 3, 3}, {3, 4, 4}}}, {{{3, 1, 2}, {3, 2, 1}}, {{3, 
            1, 3}, {3, 3, 1}}, {{3, 1, 4}, {3, 4, 1}}, {{3, 2, 3}, {3, 3, 
            2}}, {{3, 2, 4}, {3, 4, 2}}, {{3, 3, 4}, {3, 4, 3}}}}}], 
         "ActualOutput" -> 
         HoldForm[{{{{{1, 1, 1}, {1, 2, 2}}, {{1, 1, 1}, {1, 3, 2}}, {{1, 2, 
            2}, {1, 3, 2}}}, {{{1, 1, 2}, {1, 2, 1}}, {{1, 1, 2}, {1, 3, 
            1}}, {{1, 2, 2}, {1, 3, 2}}}}, {{{{2, 1, 1}, {2, 2, 2}}}, {{{2, 1,
             2}, {2, 2, 1}}}}, {{{{3, 1, 1}, {3, 2, 2}}, {{3, 1, 1}, {3, 3, 
            3}}, {{3, 1, 1}, {3, 4, 4}}, {{3, 2, 2}, {3, 3, 3}}, {{3, 2, 2}, {
            3, 4, 4}}, {{3, 3, 3}, {3, 4, 4}}}, {{{3, 1, 2}, {3, 2, 1}}, {{3, 
            1, 3}, {3, 3, 1}}, {{3, 1, 4}, {3, 4, 1}}, {{3, 2, 3}, {3, 3, 
            2}}, {{3, 2, 4}, {3, 4, 2}}, {{3, 3, 4}, {3, 4, 3}}}}}], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.072286`5.0095691912331235, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.012000000000000455`, "Seconds"], "MemoryUsed" -> 
         Quantity[-48064, "Bytes"]]], 31 -> TestResultObject[
        Association[
        "TestIndex" -> 31, "TestID" -> "79b58c2c-1cda-4a62-bdb0-512b7c17bc38",
          "Outcome" -> "Failure", "Input" -> 
         HoldForm[{$CellContext`header, $CellContext`noM, $CellContext`noU, \
$CellContext`noD, $CellContext`noAttr, $CellContext`distanceMatrices, \
$CellContext`matchMatrix, $CellContext`mate} = $CellContext`import[
              StringJoin[
               NotebookDirectory[], "/import/precomp_proof_1-1.xlsx"], 
              "precomp"]; $CellContext`ineqmembers = \
$CellContext`Cineqmembers[$CellContext`mate, "pairwise"]], "ExpectedOutput" -> 
         HoldForm[{{{{{1, 1, 1}}, {{1, 2, 2}}, {{1, 3, 2}}}, {{{1, 1, 2}}, {{
            1, 2, 1}}, {{1, 3, 1}}}}, {{{{2, 1, 1}}, {{2, 1, 1}}, {{2, 2, 
            2}}, {{2, 2, 2}}}, {{{2, 1, 2}}, {{2, 1, 3}}, {{2, 2, 1}}, {{2, 2,
             3}}}}, {{{{3, 1, 1}}, {{3, 1, 1}}, {{3, 1, 1}}, {{3, 2, 2}}, {{3,
             2, 2}}, {{3, 2, 2}}, {{3, 3, 3}}, {{3, 3, 3}}, {{3, 3, 3}}, {{3, 
            4, 4}}, {{3, 4, 4}}, {{3, 4, 4}}}, {{{3, 1, 2}}, {{3, 1, 3}}, {{3,
             1, 4}}, {{3, 2, 1}}, {{3, 2, 3}}, {{3, 2, 4}}, {{3, 3, 1}}, {{3, 
            3, 2}}, {{3, 3, 4}}, {{3, 4, 1}}, {{3, 4, 2}}, {{3, 4, 3}}}}}], 
         "ActualOutput" -> 
         HoldForm[{{{{{1, 1, 1}}, {{1, 1, 1}}, {{1, 1, 1}}, {{1, 1, 1}}, {{1, 
            1, 1}}, {{1, 1, 1}}, {{1, 1, 1}}, {{1, 1, 1}}, {{1, 1, 1}}, {{1, 
            2, 2}}, {{1, 2, 2}}, {{1, 2, 2}}, {{1, 2, 2}}, {{1, 2, 2}}, {{1, 
            2, 2}}, {{1, 2, 2}}, {{1, 2, 2}}, {{1, 2, 2}}, {{1, 3, 2}}, {{1, 
            3, 2}}, {{1, 3, 2}}, {{1, 3, 2}}, {{1, 3, 2}}, {{1, 3, 2}}, {{1, 
            3, 2}}, {{1, 3, 2}}, {{1, 3, 2}}}, {{{1, 1, 2}}, {{1, 1, 3}}, {{1,
             1, 4}}, {{1, 1, 5}}, {{1, 1, 6}}, {{1, 1, 7}}, {{1, 1, 8}}, {{1, 
            1, 9}}, {{1, 1, 10}}, {{1, 2, 1}}, {{1, 2, 3}}, {{1, 2, 4}}, {{1, 
            2, 5}}, {{1, 2, 6}}, {{1, 2, 7}}, {{1, 2, 8}}, {{1, 2, 9}}, {{1, 
            2, 10}}, {{1, 3, 1}}, {{1, 3, 3}}, {{1, 3, 4}}, {{1, 3, 5}}, {{1, 
            3, 6}}, {{1, 3, 7}}, {{1, 3, 8}}, {{1, 3, 9}}, {{1, 3, 
            10}}}}, {{{{2, 1, 1}}, {{2, 1, 1}}, {{2, 1, 1}}, {{2, 1, 1}}, {{2,
             1, 1}}, {{2, 1, 1}}, {{2, 1, 1}}, {{2, 1, 1}}, {{2, 1, 1}}, {{2, 
            2, 2}}, {{2, 2, 2}}, {{2, 2, 2}}, {{2, 2, 2}}, {{2, 2, 2}}, {{2, 
            2, 2}}, {{2, 2, 2}}, {{2, 2, 2}}, {{2, 2, 2}}}, {{{2, 1, 2}}, {{2,
             1, 3}}, {{2, 1, 4}}, {{2, 1, 5}}, {{2, 1, 6}}, {{2, 1, 7}}, {{2, 
            1, 8}}, {{2, 1, 9}}, {{2, 1, 10}}, {{2, 2, 1}}, {{2, 2, 3}}, {{2, 
            2, 4}}, {{2, 2, 5}}, {{2, 2, 6}}, {{2, 2, 7}}, {{2, 2, 8}}, {{2, 
            2, 9}}, {{2, 2, 10}}}}, {{{{3, 1, 1}}, {{3, 1, 1}}, {{3, 1, 
            1}}, {{3, 1, 1}}, {{3, 1, 1}}, {{3, 1, 1}}, {{3, 1, 1}}, {{3, 1, 
            1}}, {{3, 1, 1}}, {{3, 2, 2}}, {{3, 2, 2}}, {{3, 2, 2}}, {{3, 2, 
            2}}, {{3, 2, 2}}, {{3, 2, 2}}, {{3, 2, 2}}, {{3, 2, 2}}, {{3, 2, 
            2}}, {{3, 3, 3}}, {{3, 3, 3}}, {{3, 3, 3}}, {{3, 3, 3}}, {{3, 3, 
            3}}, {{3, 3, 3}}, {{3, 3, 3}}, {{3, 3, 3}}, {{3, 3, 3}}, {{3, 4, 
            4}}, {{3, 4, 4}}, {{3, 4, 4}}, {{3, 4, 4}}, {{3, 4, 4}}, {{3, 4, 
            4}}, {{3, 4, 4}}, {{3, 4, 4}}, {{3, 4, 4}}}, {{{3, 1, 2}}, {{3, 1,
             3}}, {{3, 1, 4}}, {{3, 1, 5}}, {{3, 1, 6}}, {{3, 1, 7}}, {{3, 1, 
            8}}, {{3, 1, 9}}, {{3, 1, 10}}, {{3, 2, 1}}, {{3, 2, 3}}, {{3, 2, 
            4}}, {{3, 2, 5}}, {{3, 2, 6}}, {{3, 2, 7}}, {{3, 2, 8}}, {{3, 2, 
            9}}, {{3, 2, 10}}, {{3, 3, 1}}, {{3, 3, 2}}, {{3, 3, 4}}, {{3, 3, 
            5}}, {{3, 3, 6}}, {{3, 3, 7}}, {{3, 3, 8}}, {{3, 3, 9}}, {{3, 3, 
            10}}, {{3, 4, 1}}, {{3, 4, 2}}, {{3, 4, 3}}, {{3, 4, 5}}, {{3, 4, 
            6}}, {{3, 4, 7}}, {{3, 4, 8}}, {{3, 4, 9}}, {{3, 4, 10}}}}}], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.086708`5.088574166768087, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.02000000000000135, "Seconds"], "MemoryUsed" -> 
         Quantity[-197400, "Bytes"]]], 32 -> TestResultObject[
        Association[
        "TestIndex" -> 32, "TestID" -> "630d55a0-a4d9-45b1-8692-4cd10e1b3376",
          "Outcome" -> "Failure", "Input" -> HoldForm[
           $CellContext`Cinequalities[$CellContext`f, \
$CellContext`ineqmembers]], "ExpectedOutput" -> 
         HoldForm[{{$CellContext`f[1, 1, 1] - $CellContext`f[
             1, 1, 2], -$CellContext`f[1, 2, 1] + $CellContext`f[
              1, 2, 2], -$CellContext`f[1, 3, 1] + $CellContext`f[
              1, 3, 2]}, {$CellContext`f[2, 1, 1] - $CellContext`f[
             2, 1, 2], $CellContext`f[2, 1, 1] - $CellContext`f[
             2, 1, 3], -$CellContext`f[2, 2, 1] + $CellContext`f[
              2, 2, 2], $CellContext`f[2, 2, 2] - $CellContext`f[
             2, 2, 3]}, {$CellContext`f[3, 1, 1] - $CellContext`f[
             3, 1, 2], $CellContext`f[3, 1, 1] - $CellContext`f[
             3, 1, 3], $CellContext`f[3, 1, 1] - $CellContext`f[
             3, 1, 4], -$CellContext`f[3, 2, 1] + $CellContext`f[
              3, 2, 2], $CellContext`f[3, 2, 2] - $CellContext`f[
             3, 2, 3], $CellContext`f[3, 2, 2] - $CellContext`f[
             3, 2, 4], -$CellContext`f[3, 3, 1] + $CellContext`f[
              3, 3, 3], -$CellContext`f[3, 3, 2] + $CellContext`f[
              3, 3, 3], $CellContext`f[3, 3, 3] - $CellContext`f[
             3, 3, 4], -$CellContext`f[3, 4, 1] + $CellContext`f[
              3, 4, 4], -$CellContext`f[3, 4, 2] + $CellContext`f[
              3, 4, 4], -$CellContext`f[3, 4, 3] + $CellContext`f[3, 4, 4]}}],
          "ActualOutput" -> 
         HoldForm[{{$CellContext`f[1, 1, 1] - $CellContext`f[
             1, 1, 2], $CellContext`f[1, 1, 1] - $CellContext`f[
             1, 1, 3], $CellContext`f[1, 1, 1] - $CellContext`f[
             1, 1, 4], $CellContext`f[1, 1, 1] - $CellContext`f[
             1, 1, 5], $CellContext`f[1, 1, 1] - $CellContext`f[
             1, 1, 6], $CellContext`f[1, 1, 1] - $CellContext`f[
             1, 1, 7], $CellContext`f[1, 1, 1] - $CellContext`f[
             1, 1, 8], $CellContext`f[1, 1, 1] - $CellContext`f[
             1, 1, 9], $CellContext`f[1, 1, 1] - $CellContext`f[
             1, 1, 10], -$CellContext`f[1, 2, 1] + $CellContext`f[
              1, 2, 2], $CellContext`f[1, 2, 2] - $CellContext`f[
             1, 2, 3], $CellContext`f[1, 2, 2] - $CellContext`f[
             1, 2, 4], $CellContext`f[1, 2, 2] - $CellContext`f[
             1, 2, 5], $CellContext`f[1, 2, 2] - $CellContext`f[
             1, 2, 6], $CellContext`f[1, 2, 2] - $CellContext`f[
             1, 2, 7], $CellContext`f[1, 2, 2] - $CellContext`f[
             1, 2, 8], $CellContext`f[1, 2, 2] - $CellContext`f[
             1, 2, 9], $CellContext`f[1, 2, 2] - $CellContext`f[
             1, 2, 10], -$CellContext`f[1, 3, 1] + $CellContext`f[
              1, 3, 2], $CellContext`f[1, 3, 2] - $CellContext`f[
             1, 3, 3], $CellContext`f[1, 3, 2] - $CellContext`f[
             1, 3, 4], $CellContext`f[1, 3, 2] - $CellContext`f[
             1, 3, 5], $CellContext`f[1, 3, 2] - $CellContext`f[
             1, 3, 6], $CellContext`f[1, 3, 2] - $CellContext`f[
             1, 3, 7], $CellContext`f[1, 3, 2] - $CellContext`f[
             1, 3, 8], $CellContext`f[1, 3, 2] - $CellContext`f[
             1, 3, 9], $CellContext`f[1, 3, 2] - $CellContext`f[
             1, 3, 10]}, {$CellContext`f[2, 1, 1] - $CellContext`f[
             2, 1, 2], $CellContext`f[2, 1, 1] - $CellContext`f[
             2, 1, 3], $CellContext`f[2, 1, 1] - $CellContext`f[
             2, 1, 4], $CellContext`f[2, 1, 1] - $CellContext`f[
             2, 1, 5], $CellContext`f[2, 1, 1] - $CellContext`f[
             2, 1, 6], $CellContext`f[2, 1, 1] - $CellContext`f[
             2, 1, 7], $CellContext`f[2, 1, 1] - $CellContext`f[
             2, 1, 8], $CellContext`f[2, 1, 1] - $CellContext`f[
             2, 1, 9], $CellContext`f[2, 1, 1] - $CellContext`f[
             2, 1, 10], -$CellContext`f[2, 2, 1] + $CellContext`f[
              2, 2, 2], $CellContext`f[2, 2, 2] - $CellContext`f[
             2, 2, 3], $CellContext`f[2, 2, 2] - $CellContext`f[
             2, 2, 4], $CellContext`f[2, 2, 2] - $CellContext`f[
             2, 2, 5], $CellContext`f[2, 2, 2] - $CellContext`f[
             2, 2, 6], $CellContext`f[2, 2, 2] - $CellContext`f[
             2, 2, 7], $CellContext`f[2, 2, 2] - $CellContext`f[
             2, 2, 8], $CellContext`f[2, 2, 2] - $CellContext`f[
             2, 2, 9], $CellContext`f[2, 2, 2] - $CellContext`f[
             2, 2, 10]}, {$CellContext`f[3, 1, 1] - $CellContext`f[
             3, 1, 2], $CellContext`f[3, 1, 1] - $CellContext`f[
             3, 1, 3], $CellContext`f[3, 1, 1] - $CellContext`f[
             3, 1, 4], $CellContext`f[3, 1, 1] - $CellContext`f[
             3, 1, 5], $CellContext`f[3, 1, 1] - $CellContext`f[
             3, 1, 6], $CellContext`f[3, 1, 1] - $CellContext`f[
             3, 1, 7], $CellContext`f[3, 1, 1] - $CellContext`f[
             3, 1, 8], $CellContext`f[3, 1, 1] - $CellContext`f[
             3, 1, 9], $CellContext`f[3, 1, 1] - $CellContext`f[
             3, 1, 10], -$CellContext`f[3, 2, 1] + $CellContext`f[
              3, 2, 2], $CellContext`f[3, 2, 2] - $CellContext`f[
             3, 2, 3], $CellContext`f[3, 2, 2] - $CellContext`f[
             3, 2, 4], $CellContext`f[3, 2, 2] - $CellContext`f[
             3, 2, 5], $CellContext`f[3, 2, 2] - $CellContext`f[
             3, 2, 6], $CellContext`f[3, 2, 2] - $CellContext`f[
             3, 2, 7], $CellContext`f[3, 2, 2] - $CellContext`f[
             3, 2, 8], $CellContext`f[3, 2, 2] - $CellContext`f[
             3, 2, 9], $CellContext`f[3, 2, 2] - $CellContext`f[
             3, 2, 10], -$CellContext`f[3, 3, 1] + $CellContext`f[
              3, 3, 3], -$CellContext`f[3, 3, 2] + $CellContext`f[
              3, 3, 3], $CellContext`f[3, 3, 3] - $CellContext`f[
             3, 3, 4], $CellContext`f[3, 3, 3] - $CellContext`f[
             3, 3, 5], $CellContext`f[3, 3, 3] - $CellContext`f[
             3, 3, 6], $CellContext`f[3, 3, 3] - $CellContext`f[
             3, 3, 7], $CellContext`f[3, 3, 3] - $CellContext`f[
             3, 3, 8], $CellContext`f[3, 3, 3] - $CellContext`f[
             3, 3, 9], $CellContext`f[3, 3, 3] - $CellContext`f[
             3, 3, 10], -$CellContext`f[3, 4, 1] + $CellContext`f[
              3, 4, 4], -$CellContext`f[3, 4, 2] + $CellContext`f[
              3, 4, 4], -$CellContext`f[3, 4, 3] + $CellContext`f[
              3, 4, 4], $CellContext`f[3, 4, 4] - $CellContext`f[
             3, 4, 5], $CellContext`f[3, 4, 4] - $CellContext`f[
             3, 4, 6], $CellContext`f[3, 4, 4] - $CellContext`f[
             3, 4, 7], $CellContext`f[3, 4, 4] - $CellContext`f[
             3, 4, 8], $CellContext`f[3, 4, 4] - $CellContext`f[
             3, 4, 9], $CellContext`f[3, 4, 4] - $CellContext`f[3, 4, 10]}}], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.000801`3.0541475139162317, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[20616, "Bytes"]]], 
      33 -> TestResultObject[
        Association[
        "TestIndex" -> 33, "TestID" -> "pairwise inequalities (pdf case) 1", 
         "Outcome" -> "Success", "Input" -> 
         HoldForm[$CellContext`matchMatrix = {{{1, 1, 0, 0}, {0, 0, 1, 0}, {0,
              0, 0, 1}}}; $CellContext`mate = \
$CellContext`Cmate[$CellContext`matchMatrix]; $CellContext`ineqmembers = \
$CellContext`Cineqmembers[$CellContext`mate, "pairwise", {
              4}]; $CellContext`inequalities = \
$CellContext`Cinequalities[$CellContext`f, $CellContext`ineqmembers]], 
         "ExpectedOutput" -> 
         HoldForm[{{$CellContext`f[1, 1, 1] - $CellContext`f[
             1, 1, 3], $CellContext`f[1, 1, 1] - $CellContext`f[
             1, 1, 4], $CellContext`f[1, 1, 2] - $CellContext`f[
             1, 1, 3], $CellContext`f[1, 1, 2] - $CellContext`f[
             1, 1, 4], -$CellContext`f[1, 2, 1] + $CellContext`f[
              1, 2, 3], -$CellContext`f[1, 2, 2] + $CellContext`f[
              1, 2, 3], $CellContext`f[1, 2, 3] - $CellContext`f[
             1, 2, 4], -$CellContext`f[1, 3, 1] + $CellContext`f[
              1, 3, 4], -$CellContext`f[1, 3, 2] + $CellContext`f[
              1, 3, 4], -$CellContext`f[1, 3, 3] + $CellContext`f[1, 3, 4]}}],
          "ActualOutput" -> 
         HoldForm[{{$CellContext`f[1, 1, 1] - $CellContext`f[
             1, 1, 3], $CellContext`f[1, 1, 1] - $CellContext`f[
             1, 1, 4], $CellContext`f[1, 1, 2] - $CellContext`f[
             1, 1, 3], $CellContext`f[1, 1, 2] - $CellContext`f[
             1, 1, 4], -$CellContext`f[1, 2, 1] + $CellContext`f[
              1, 2, 3], -$CellContext`f[1, 2, 2] + $CellContext`f[
              1, 2, 3], $CellContext`f[1, 2, 3] - $CellContext`f[
             1, 2, 4], -$CellContext`f[1, 3, 1] + $CellContext`f[
              1, 3, 4], -$CellContext`f[1, 3, 2] + $CellContext`f[
              1, 3, 4], -$CellContext`f[1, 3, 3] + $CellContext`f[1, 3, 4]}}],
          "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> Quantity[0.000953`3.12960789847032, "Seconds"],
          "CPUTimeUsed" -> Quantity[0.0039999999999995595`, "Seconds"], 
         "MemoryUsed" -> Quantity[3928, "Bytes"]]], 34 -> TestResultObject[
        Association[
        "TestIndex" -> 34, "TestID" -> 
         "pairwise inequalities (pdf case) 2 - the used one", "Outcome" -> 
         "Success", "Input" -> 
         HoldForm[$CellContext`matchMatrix = {{{1, 0, 0}, {1, 0, 0}, {0, 1, 
             0}, {0, 0, 
             1}}}; $CellContext`mate = \
$CellContext`Cmate[$CellContext`matchMatrix]; $CellContext`ineqmembers = \
$CellContext`Cineqmembers[$CellContext`mate, "pairwise", {
              3}]; $CellContext`inequalities = \
$CellContext`Cinequalities[$CellContext`f, $CellContext`ineqmembers]], 
         "ExpectedOutput" -> 
         HoldForm[{{$CellContext`f[1, 1, 1] - $CellContext`f[
             1, 1, 2], $CellContext`f[1, 1, 1] - $CellContext`f[
             1, 1, 3], $CellContext`f[1, 2, 1] - $CellContext`f[
             1, 2, 2], $CellContext`f[1, 2, 1] - $CellContext`f[
             1, 2, 3], -$CellContext`f[1, 3, 1] + $CellContext`f[
              1, 3, 2], $CellContext`f[1, 3, 2] - $CellContext`f[
             1, 3, 3], -$CellContext`f[1, 4, 1] + $CellContext`f[
              1, 4, 3], -$CellContext`f[1, 4, 2] + $CellContext`f[1, 4, 3]}}],
          "ActualOutput" -> 
         HoldForm[{{$CellContext`f[1, 1, 1] - $CellContext`f[
             1, 1, 2], $CellContext`f[1, 1, 1] - $CellContext`f[
             1, 1, 3], $CellContext`f[1, 2, 1] - $CellContext`f[
             1, 2, 2], $CellContext`f[1, 2, 1] - $CellContext`f[
             1, 2, 3], -$CellContext`f[1, 3, 1] + $CellContext`f[
              1, 3, 2], $CellContext`f[1, 3, 2] - $CellContext`f[
             1, 3, 3], -$CellContext`f[1, 4, 1] + $CellContext`f[
              1, 4, 3], -$CellContext`f[1, 4, 2] + $CellContext`f[1, 4, 3]}}],
          "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 
         Quantity[0.000458`2.811380475835863, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[1736, "Bytes"]]], 
      35 -> TestResultObject[
        Association[
        "TestIndex" -> 35, "TestID" -> "3bca6c0f-e04d-4d1d-bbf3-eccd659c4a35",
          "Outcome" -> "Success", "Input" -> 
         HoldForm[$CellContext`matchMatrix = {{{1, 1, 0, 0}, {0, 0, 1, 0}, {0,
              0, 0, 1}}}; $CellContext`mate = \
$CellContext`Cmate[$CellContext`matchMatrix]; \
$CellContext`Cineqmembers[$CellContext`mate, "triples"]], "ExpectedOutput" -> 
         HoldForm[{{{{{1, 1, 1}, {1, 1, 2}, {1, 2, 3}, {1, 3, 4}}, {{1, 1, 
           1}, {1, 1, 2}, {1, 2, 3}, {1, 3, 4}}}, {{{1, 1, 3}, {1, 2, 4}, {1, 
           3, 1}, {1, 3, 2}}, {{1, 1, 4}, {1, 2, 1}, {1, 2, 2}, {1, 3, 
           3}}}}}], "ActualOutput" -> 
         HoldForm[{{{{{1, 1, 1}, {1, 1, 2}, {1, 2, 3}, {1, 3, 4}}, {{1, 1, 
           1}, {1, 1, 2}, {1, 2, 3}, {1, 3, 4}}}, {{{1, 1, 3}, {1, 2, 4}, {1, 
           3, 1}, {1, 3, 2}}, {{1, 1, 4}, {1, 2, 1}, {1, 2, 2}, {1, 3, 
           3}}}}}], "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 
         Quantity[0.000321`2.657020030236866, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.0039999999999995595`, "Seconds"], "MemoryUsed" -> 
         Quantity[1480, "Bytes"]]], 36 -> TestResultObject[
        Association[
        "TestIndex" -> 36, "TestID" -> "24a3e12b-bac0-4203-a98c-d9e85d6ee106",
          "Outcome" -> "Success", "Input" -> 
         HoldForm[$CellContext`matchMatrix = {{{1, 1, 0}, {0, 1, 0}, {0, 0, 
             1}}}; $CellContext`mate = \
$CellContext`Cmate[$CellContext`matchMatrix]; \
$CellContext`Cineqmembers[$CellContext`mate, "triples"]], "ExpectedOutput" -> 
         HoldForm[{{{{{1, 1, 1}, {1, 1, 2}, {1, 2, 2}, {1, 3, 3}}, {{1, 1, 
           1}, {1, 1, 2}, {1, 2, 2}, {1, 3, 3}}}, {{{1, 1, 2}, {1, 2, 3}, {1, 
           3, 1}, {1, 3, 2}}, {{1, 1, 3}, {1, 2, 1}, {1, 2, 2}, {1, 3, 
           2}}}}}], "ActualOutput" -> 
         HoldForm[{{{{{1, 1, 1}, {1, 1, 2}, {1, 2, 2}, {1, 3, 3}}, {{1, 1, 
           1}, {1, 1, 2}, {1, 2, 2}, {1, 3, 3}}}, {{{1, 1, 2}, {1, 2, 3}, {1, 
           3, 1}, {1, 3, 2}}, {{1, 1, 3}, {1, 2, 1}, {1, 2, 2}, {1, 3, 
           2}}}}}], "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 
         Quantity[0.000267`2.5770262591965687, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[1640, "Bytes"]]], 
      37 -> TestResultObject[
        Association[
        "TestIndex" -> 37, "TestID" -> "1fc94575-9b67-4f4a-baa4-b0d0c2a45502",
          "Outcome" -> "Success", "Input" -> 
         HoldForm[$CellContext`matchMatrix = {{{1, 0, 0, 0}, {0, 1, 0, 0}, {0,
              0, 1, 0}, {0, 0, 0, 
             1}}}; $CellContext`mate = \
$CellContext`Cmate[$CellContext`matchMatrix]; \
$CellContext`Cinequalities[$CellContext`f, 
             $CellContext`Cineqmembers[$CellContext`mate, "triples"]]], 
         "ExpectedOutput" -> 
         HoldForm[{{$CellContext`f[1, 1, 1] - $CellContext`f[
             1, 1, 2] + $CellContext`f[1, 2, 2] - $CellContext`f[
             1, 2, 3] - $CellContext`f[
             1, 3, 1] + $CellContext`f[1, 3, 3], $CellContext`f[
              1, 1, 1] - $CellContext`f[
             1, 1, 2] + $CellContext`f[1, 2, 2] - $CellContext`f[
             1, 2, 4] - $CellContext`f[
             1, 4, 1] + $CellContext`f[1, 4, 4], $CellContext`f[
              1, 1, 1] - $CellContext`f[
             1, 1, 3] + $CellContext`f[1, 3, 3] - $CellContext`f[
             1, 3, 4] - $CellContext`f[
             1, 4, 1] + $CellContext`f[1, 4, 4], $CellContext`f[
              1, 2, 2] - $CellContext`f[
             1, 2, 3] + $CellContext`f[1, 3, 3] - $CellContext`f[
             1, 3, 4] - $CellContext`f[
             1, 4, 2] + $CellContext`f[1, 4, 4], $CellContext`f[
              1, 1, 1] - $CellContext`f[1, 1, 3] - $CellContext`f[
             1, 2, 1] + $CellContext`f[1, 2, 2] - $CellContext`f[
             1, 3, 2] + $CellContext`f[1, 3, 3], $CellContext`f[
              1, 1, 1] - $CellContext`f[1, 1, 4] - $CellContext`f[
             1, 2, 1] + $CellContext`f[1, 2, 2] - $CellContext`f[
             1, 4, 2] + $CellContext`f[1, 4, 4], $CellContext`f[
              1, 1, 1] - $CellContext`f[1, 1, 4] - $CellContext`f[
             1, 3, 1] + $CellContext`f[1, 3, 3] - $CellContext`f[
             1, 4, 3] + $CellContext`f[1, 4, 4], $CellContext`f[
              1, 2, 2] - $CellContext`f[1, 2, 4] - $CellContext`f[
             1, 3, 2] + $CellContext`f[1, 3, 3] - $CellContext`f[
             1, 4, 3] + $CellContext`f[1, 4, 4]}}], "ActualOutput" -> 
         HoldForm[{{$CellContext`f[1, 1, 1] - $CellContext`f[
             1, 1, 2] + $CellContext`f[1, 2, 2] - $CellContext`f[
             1, 2, 3] - $CellContext`f[
             1, 3, 1] + $CellContext`f[1, 3, 3], $CellContext`f[
              1, 1, 1] - $CellContext`f[
             1, 1, 2] + $CellContext`f[1, 2, 2] - $CellContext`f[
             1, 2, 4] - $CellContext`f[
             1, 4, 1] + $CellContext`f[1, 4, 4], $CellContext`f[
              1, 1, 1] - $CellContext`f[
             1, 1, 3] + $CellContext`f[1, 3, 3] - $CellContext`f[
             1, 3, 4] - $CellContext`f[
             1, 4, 1] + $CellContext`f[1, 4, 4], $CellContext`f[
              1, 2, 2] - $CellContext`f[
             1, 2, 3] + $CellContext`f[1, 3, 3] - $CellContext`f[
             1, 3, 4] - $CellContext`f[
             1, 4, 2] + $CellContext`f[1, 4, 4], $CellContext`f[
              1, 1, 1] - $CellContext`f[1, 1, 3] - $CellContext`f[
             1, 2, 1] + $CellContext`f[1, 2, 2] - $CellContext`f[
             1, 3, 2] + $CellContext`f[1, 3, 3], $CellContext`f[
              1, 1, 1] - $CellContext`f[1, 1, 4] - $CellContext`f[
             1, 2, 1] + $CellContext`f[1, 2, 2] - $CellContext`f[
             1, 4, 2] + $CellContext`f[1, 4, 4], $CellContext`f[
              1, 1, 1] - $CellContext`f[1, 1, 4] - $CellContext`f[
             1, 3, 1] + $CellContext`f[1, 3, 3] - $CellContext`f[
             1, 4, 3] + $CellContext`f[1, 4, 4], $CellContext`f[
              1, 2, 2] - $CellContext`f[1, 2, 4] - $CellContext`f[
             1, 3, 2] + $CellContext`f[1, 3, 3] - $CellContext`f[
             1, 4, 3] + $CellContext`f[1, 4, 4]}}], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.000629`2.949165643277263, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[5416, "Bytes"]]], 
      38 -> TestResultObject[
        Association[
        "TestIndex" -> 38, "TestID" -> "9e000f58-4da2-4319-807b-9a01c1ba927f",
          "Outcome" -> "Success", "Input" -> 
         HoldForm[
          ClearAll[$CellContext`f]; \
$CellContext`Cinequalities[$CellContext`f, {{{{{1, 1, 1}, {1, 2, 2}}, {{1, 1, 
              1}, {1, 3, 2}}, {{1, 2, 2}, {1, 3, 2}}}, {{{1, 1, 2}, {1, 2, 
              1}}, {{1, 1, 2}, {1, 3, 1}}, {{1, 2, 2}, {1, 3, 2}}}}, {{{{2, 1,
               1}, {2, 2, 2}}}, {{{2, 1, 2}, {2, 2, 1}}}}, {{{{3, 1, 1}, {3, 
              2, 2}}, {{3, 1, 1}, {3, 3, 3}}, {{3, 1, 1}, {3, 4, 4}}, {{3, 2, 
              2}, {3, 3, 3}}, {{3, 2, 2}, {3, 4, 4}}, {{3, 3, 3}, {3, 4, 
              4}}}, {{{3, 1, 2}, {3, 2, 1}}, {{3, 1, 3}, {3, 3, 1}}, {{3, 1, 
              4}, {3, 4, 1}}, {{3, 2, 3}, {3, 3, 2}}, {{3, 2, 4}, {3, 4, 
              2}}, {{3, 3, 4}, {3, 4, 3}}}}}]], "ExpectedOutput" -> 
         HoldForm[{{$CellContext`f[1, 1, 1] - $CellContext`f[
             1, 1, 2] - $CellContext`f[
             1, 2, 1] + $CellContext`f[1, 2, 2], $CellContext`f[
              1, 1, 1] - $CellContext`f[1, 1, 2] - $CellContext`f[
             1, 3, 1] + $CellContext`f[1, 3, 2], 
             0}, {$CellContext`f[2, 1, 1] - $CellContext`f[
             2, 1, 2] - $CellContext`f[
             2, 2, 1] + $CellContext`f[2, 2, 2]}, {$CellContext`f[
              3, 1, 1] - $CellContext`f[3, 1, 2] - $CellContext`f[
             3, 2, 1] + $CellContext`f[3, 2, 2], $CellContext`f[
              3, 1, 1] - $CellContext`f[3, 1, 3] - $CellContext`f[
             3, 3, 1] + $CellContext`f[3, 3, 3], $CellContext`f[
              3, 1, 1] - $CellContext`f[3, 1, 4] - $CellContext`f[
             3, 4, 1] + $CellContext`f[3, 4, 4], $CellContext`f[
              3, 2, 2] - $CellContext`f[3, 2, 3] - $CellContext`f[
             3, 3, 2] + $CellContext`f[3, 3, 3], $CellContext`f[
              3, 2, 2] - $CellContext`f[3, 2, 4] - $CellContext`f[
             3, 4, 2] + $CellContext`f[3, 4, 4], $CellContext`f[
              3, 3, 3] - $CellContext`f[3, 3, 4] - $CellContext`f[
             3, 4, 3] + $CellContext`f[3, 4, 4]}}], "ActualOutput" -> 
         HoldForm[{{$CellContext`f[1, 1, 1] - $CellContext`f[
             1, 1, 2] - $CellContext`f[
             1, 2, 1] + $CellContext`f[1, 2, 2], $CellContext`f[
              1, 1, 1] - $CellContext`f[1, 1, 2] - $CellContext`f[
             1, 3, 1] + $CellContext`f[1, 3, 2], 
             0}, {$CellContext`f[2, 1, 1] - $CellContext`f[
             2, 1, 2] - $CellContext`f[
             2, 2, 1] + $CellContext`f[2, 2, 2]}, {$CellContext`f[
              3, 1, 1] - $CellContext`f[3, 1, 2] - $CellContext`f[
             3, 2, 1] + $CellContext`f[3, 2, 2], $CellContext`f[
              3, 1, 1] - $CellContext`f[3, 1, 3] - $CellContext`f[
             3, 3, 1] + $CellContext`f[3, 3, 3], $CellContext`f[
              3, 1, 1] - $CellContext`f[3, 1, 4] - $CellContext`f[
             3, 4, 1] + $CellContext`f[3, 4, 4], $CellContext`f[
              3, 2, 2] - $CellContext`f[3, 2, 3] - $CellContext`f[
             3, 3, 2] + $CellContext`f[3, 3, 3], $CellContext`f[
              3, 2, 2] - $CellContext`f[3, 2, 4] - $CellContext`f[
             3, 4, 2] + $CellContext`f[3, 4, 4], $CellContext`f[
              3, 3, 3] - $CellContext`f[3, 3, 4] - $CellContext`f[
             3, 4, 3] + $CellContext`f[3, 4, 4]}}], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.000272`2.5850839018661924, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[4264, "Bytes"]]], 
      39 -> TestResultObject[
        Association[
        "TestIndex" -> 39, "TestID" -> "c53bde2e-2e02-4b76-9b30-f9fb81bfab09",
          "Outcome" -> "Success", "Input" -> 
         HoldForm[$CellContext`matchMatrix = {{{1, 0}, {0, 1}}, {{1, 0, 0}, {
              0, 1, 0}, {0, 0, 
              1}}}; $CellContext`mate = \
$CellContext`Cmate[$CellContext`matchMatrix]; $CellContext`ineqmembers = \
$CellContext`Cineqmembers[$CellContext`mate]; $CellContext`inequalities = \
$CellContext`Cinequalities[$CellContext`f, $CellContext`ineqmembers]], 
         "ExpectedOutput" -> 
         HoldForm[{{$CellContext`f[1, 1, 1] - $CellContext`f[
             1, 1, 2] - $CellContext`f[
             1, 2, 1] + $CellContext`f[1, 2, 2]}, {$CellContext`f[
              2, 1, 1] - $CellContext`f[2, 1, 2] - $CellContext`f[
             2, 2, 1] + $CellContext`f[2, 2, 2], $CellContext`f[
              2, 1, 1] - $CellContext`f[2, 1, 3] - $CellContext`f[
             2, 3, 1] + $CellContext`f[2, 3, 3], $CellContext`f[
              2, 2, 2] - $CellContext`f[2, 2, 3] - $CellContext`f[
             2, 3, 2] + $CellContext`f[2, 3, 3]}}], "ActualOutput" -> 
         HoldForm[{{$CellContext`f[1, 1, 1] - $CellContext`f[
             1, 1, 2] - $CellContext`f[
             1, 2, 1] + $CellContext`f[1, 2, 2]}, {$CellContext`f[
              2, 1, 1] - $CellContext`f[2, 1, 2] - $CellContext`f[
             2, 2, 1] + $CellContext`f[2, 2, 2], $CellContext`f[
              2, 1, 1] - $CellContext`f[2, 1, 3] - $CellContext`f[
             2, 3, 1] + $CellContext`f[2, 3, 3], $CellContext`f[
              2, 2, 2] - $CellContext`f[2, 2, 3] - $CellContext`f[
             2, 3, 2] + $CellContext`f[2, 3, 3]}}], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.000372`2.7210579377138915, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[2136, "Bytes"]]], 
      40 -> TestResultObject[
        Association[
        "TestIndex" -> 40, "TestID" -> "49574d8e-1468-4bdd-84a7-f5969424f035",
          "Outcome" -> "Success", "Input" -> 
         HoldForm[$CellContext`matchMatrix = {{{1, 1}, {0, 1}}, {{1, 1, 0}, {
              0, 1, 1}, {0, 0, 
              1}}}; $CellContext`mate = \
$CellContext`Cmate[$CellContext`matchMatrix]; $CellContext`ineqmembers = \
$CellContext`Cineqmembers[$CellContext`mate]], "ExpectedOutput" -> 
         HoldForm[{{{{{1, 1, 1}, {1, 1, 2}, {1, 2, 2}}}, {{{1, 1, 2}, {1, 2, 
            1}, {1, 2, 
            2}}}}, {{{{2, 1, 1}, {2, 1, 2}, {2, 2, 2}, {2, 2, 3}}, {{2, 1, 
              1}, {2, 1, 2}, {2, 3, 3}}, {{2, 2, 2}, {2, 2, 3}, {2, 3, 
              3}}}, {{{2, 1, 2}, {2, 1, 3}, {2, 2, 1}, {2, 2, 2}}, {{2, 1, 
              3}, {2, 3, 1}, {2, 3, 2}}, {{2, 2, 3}, {2, 3, 2}, {2, 3, 
              3}}}}}], "ActualOutput" -> 
         HoldForm[{{{{{1, 1, 1}, {1, 1, 2}, {1, 2, 2}}}, {{{1, 1, 2}, {1, 2, 
            1}, {1, 2, 
            2}}}}, {{{{2, 1, 1}, {2, 1, 2}, {2, 2, 2}, {2, 2, 3}}, {{2, 1, 
              1}, {2, 1, 2}, {2, 3, 3}}, {{2, 2, 2}, {2, 2, 3}, {2, 3, 
              3}}}, {{{2, 1, 2}, {2, 1, 3}, {2, 2, 1}, {2, 2, 2}}, {{2, 1, 
              3}, {2, 3, 1}, {2, 3, 2}}, {{2, 2, 3}, {2, 3, 2}, {2, 3, 
              3}}}}}], "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 
         Quantity[0.000288`2.6099074855912248, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[784, "Bytes"]]], 
      41 -> TestResultObject[
        Association[
        "TestIndex" -> 41, "TestID" -> "8150403b-2a0d-430b-84f2-2d0bd6f03c45",
          "Outcome" -> "Failure", "Input" -> 
         HoldForm[$CellContext`matchMatrix = {{{1, 1}, {0, 0}, {0, 
             0}}}; $CellContext`mate = \
$CellContext`Cmate[$CellContext`matchMatrix]; $CellContext`ineqmembers = \
$CellContext`Cineqmembers[$CellContext`mate]], "ExpectedOutput" -> 
         HoldForm[Null], "ActualOutput" -> 
         HoldForm[{{{{{1, 1, 1}, {1, 1, 2}}, {{1, 1, 1}, {1, 1, 2}}, {}}, {{{
              1, 2, 1}, {1, 2, 2}}, {{1, 3, 1}, {1, 3, 2}}, {}}}}], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.0002`2.4515449934959754, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[528, "Bytes"]]], 
      42 -> TestResultObject[
        Association[
        "TestIndex" -> 42, "TestID" -> "4336de11-deda-4888-869c-9c0fa9d85422",
          "Outcome" -> "Success", "Input" -> 
         HoldForm[$CellContext`matchMatrix = {{{1, 1}, {1, 
             0}}}; $CellContext`mate = \
$CellContext`Cmate[$CellContext`matchMatrix]; {$CellContext`ineqmembers = \
$CellContext`Cineqmembers[$CellContext`mate], $CellContext`inequalities = \
$CellContext`Cinequalities[$CellContext`f, $CellContext`ineqmembers]}], 
         "ExpectedOutput" -> 
         HoldForm[{{{{{{1, 1, 1}, {1, 1, 2}, {1, 2, 1}}}, {{{1, 1, 1}, {1, 2, 
            1}, {1, 2, 
            2}}}}}, {{$CellContext`f[1, 1, 2] - $CellContext`f[1, 2, 2]}}}], 
         "ActualOutput" -> 
         HoldForm[{{{{{{1, 1, 1}, {1, 1, 2}, {1, 2, 1}}}, {{{1, 1, 1}, {1, 2, 
            1}, {1, 2, 
            2}}}}}, {{$CellContext`f[1, 1, 2] - $CellContext`f[1, 2, 2]}}}], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.000238`2.5270919548885056, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.0039999999999995595`, "Seconds"], "MemoryUsed" -> 
         Quantity[1224, "Bytes"]]], 43 -> TestResultObject[
        Association[
        "TestIndex" -> 43, "TestID" -> "0c9f1e6c-be61-4dcd-96dc-e2a0c7ebfce8",
          "Outcome" -> "Failure", "Input" -> 
         HoldForm[$CellContext`matchMatrix = {{{1, 1}, {1, 0}, {0, 
             0}}}; $CellContext`mate = \
$CellContext`Cmate[$CellContext`matchMatrix]; $CellContext`ineqmembers = \
$CellContext`Cineqmembers[$CellContext`mate]], "ExpectedOutput" -> 
         HoldForm[{{{{{1, 1, 1}, {1, 1, 2}, {1, 2, 1}}}, {{{1, 1, 1}, {1, 2, 
           1}, {1, 2, 2}}}}}], "ActualOutput" -> 
         HoldForm[{{{{{1, 1, 1}, {1, 1, 2}, {1, 2, 1}}, {{1, 1, 1}, {1, 1, 
              2}}, {{1, 2, 1}}}, {{{1, 1, 1}, {1, 2, 1}, {1, 2, 2}}, {{1, 3, 
              1}, {1, 3, 2}}, {{1, 3, 1}}}}}], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.000204`2.4601451652578925, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[1440, "Bytes"]]], 
      44 -> TestResultObject[
        Association[
        "TestIndex" -> 44, "TestID" -> "e2e1ff5f-5463-4623-9d7e-ee4de9547756",
          "Outcome" -> "Failure", "Input" -> 
         HoldForm[$CellContext`TUmatchMatrix = {{{1, 1}, {1, 1}}, {{1, 1}, {0,
              0}}}; $CellContext`TUmate = \
$CellContext`Cmate[$CellContext`TUmatchMatrix]; $CellContext`TUineqmembers = \
$CellContext`Cineqmembers[$CellContext`TUmate]], "ExpectedOutput" -> 
         HoldForm[Null], "ActualOutput" -> 
         HoldForm[{{{{{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}}}, {{{1, 1, 
            1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}}}}, {{{{2, 1, 1}, {2, 1, 
            2}}}, {{{2, 2, 1}, {2, 2, 2}}}}}], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.000231`2.514126977724138, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[-3616, "Bytes"]]], 
      45 -> TestResultObject[
        Association[
        "TestIndex" -> 45, "TestID" -> "34939d07-f993-4bac-bb3e-92b118d464a2",
          "Outcome" -> "Success", "Input" -> 
         HoldForm[$CellContext`TUmatchMatrix = {{{0, 0}, {0, 1}, {1, 1}}, {{0,
               1, 0}, {0, 1, 0}}, {{1, 1, 0, 0}, {1, 0, 1, 1}, {1, 0, 1, 0}, {
              1, 1, 1, 
              1}}}; $CellContext`TUmate = \
$CellContext`Cmate[$CellContext`TUmatchMatrix]; $CellContext`TUineqmembers = \
$CellContext`Cineqmembers[$CellContext`TUmate]; $CellContext`TUinequalities = \
$CellContext`Cinequalities[$CellContext`f, $CellContext`TUineqmembers]], 
         "ExpectedOutput" -> 
         HoldForm[{{-$CellContext`f[1, 1, 2] + $CellContext`f[
              1, 2, 2], -$CellContext`f[1, 1, 1] - $CellContext`f[
             1, 1, 2] + $CellContext`f[1, 3, 1] + $CellContext`f[
              1, 3, 2], -$CellContext`f[1, 2, 1] + $CellContext`f[1, 3, 1]}, {
            0}, {$CellContext`f[3, 1, 2] - $CellContext`f[
             3, 1, 3] - $CellContext`f[3, 1, 4] - $CellContext`f[
             3, 2, 2] + $CellContext`f[3, 2, 3] + $CellContext`f[
              3, 2, 4], $CellContext`f[3, 1, 2] - $CellContext`f[
             3, 1, 3] - $CellContext`f[
             3, 3, 2] + $CellContext`f[
              3, 3, 3], -$CellContext`f[3, 1, 3] - $CellContext`f[
             3, 1, 4] + $CellContext`f[3, 4, 3] + $CellContext`f[
              3, 4, 4], $CellContext`f[3, 2, 4] - $CellContext`f[
             3, 3, 4], -$CellContext`f[3, 2, 2] + $CellContext`f[
              3, 4, 2], -$CellContext`f[3, 3, 2] - $CellContext`f[
             3, 3, 4] + $CellContext`f[3, 4, 2] + $CellContext`f[3, 4, 4]}}], 
         "ActualOutput" -> 
         HoldForm[{{-$CellContext`f[1, 1, 2] + $CellContext`f[
              1, 2, 2], -$CellContext`f[1, 1, 1] - $CellContext`f[
             1, 1, 2] + $CellContext`f[1, 3, 1] + $CellContext`f[
              1, 3, 2], -$CellContext`f[1, 2, 1] + $CellContext`f[1, 3, 1]}, {
            0}, {$CellContext`f[3, 1, 2] - $CellContext`f[
             3, 1, 3] - $CellContext`f[3, 1, 4] - $CellContext`f[
             3, 2, 2] + $CellContext`f[3, 2, 3] + $CellContext`f[
              3, 2, 4], $CellContext`f[3, 1, 2] - $CellContext`f[
             3, 1, 3] - $CellContext`f[
             3, 3, 2] + $CellContext`f[
              3, 3, 3], -$CellContext`f[3, 1, 3] - $CellContext`f[
             3, 1, 4] + $CellContext`f[3, 4, 3] + $CellContext`f[
              3, 4, 4], $CellContext`f[3, 2, 4] - $CellContext`f[
             3, 3, 4], -$CellContext`f[3, 2, 2] + $CellContext`f[
              3, 4, 2], -$CellContext`f[3, 3, 2] - $CellContext`f[
             3, 3, 4] + $CellContext`f[3, 4, 2] + $CellContext`f[3, 4, 4]}}], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.000614`2.9386833689731615, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[11744, "Bytes"]]], 
      46 -> TestResultObject[
        Association[
        "TestIndex" -> 46, "TestID" -> "a772a312-0199-4338-abb3-c7c152abb130",
          "Outcome" -> "Success", "Input" -> 
         HoldForm[$CellContext`TUmatchMatrix = {{{1, 0}, {0, 1}, {0, 1}}, {{1,
               0, 0}, {0, 1, 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {
              0, 0, 0, 
              1}}}; $CellContext`TUmate = \
$CellContext`Cmate[$CellContext`TUmatchMatrix]; $CellContext`TUineqmembers = \
$CellContext`Cineqmembers[$CellContext`TUmate]; $CellContext`TUinequalities = \
$CellContext`Cinequalities[$CellContext`f, $CellContext`TUineqmembers]], 
         "ExpectedOutput" -> 
         HoldForm[{{$CellContext`f[1, 1, 1] - $CellContext`f[
             1, 1, 2] - $CellContext`f[
             1, 2, 1] + $CellContext`f[1, 2, 2], $CellContext`f[
              1, 1, 1] - $CellContext`f[1, 1, 2] - $CellContext`f[
             1, 3, 1] + $CellContext`f[1, 3, 2], 
             0}, {$CellContext`f[2, 1, 1] - $CellContext`f[
             2, 1, 2] - $CellContext`f[
             2, 2, 1] + $CellContext`f[2, 2, 2]}, {$CellContext`f[
              3, 1, 1] - $CellContext`f[3, 1, 2] - $CellContext`f[
             3, 2, 1] + $CellContext`f[3, 2, 2], $CellContext`f[
              3, 1, 1] - $CellContext`f[3, 1, 3] - $CellContext`f[
             3, 3, 1] + $CellContext`f[3, 3, 3], $CellContext`f[
              3, 1, 1] - $CellContext`f[3, 1, 4] - $CellContext`f[
             3, 4, 1] + $CellContext`f[3, 4, 4], $CellContext`f[
              3, 2, 2] - $CellContext`f[3, 2, 3] - $CellContext`f[
             3, 3, 2] + $CellContext`f[3, 3, 3], $CellContext`f[
              3, 2, 2] - $CellContext`f[3, 2, 4] - $CellContext`f[
             3, 4, 2] + $CellContext`f[3, 4, 4], $CellContext`f[
              3, 3, 3] - $CellContext`f[3, 3, 4] - $CellContext`f[
             3, 4, 3] + $CellContext`f[3, 4, 4]}}], "ActualOutput" -> 
         HoldForm[{{$CellContext`f[1, 1, 1] - $CellContext`f[
             1, 1, 2] - $CellContext`f[
             1, 2, 1] + $CellContext`f[1, 2, 2], $CellContext`f[
              1, 1, 1] - $CellContext`f[1, 1, 2] - $CellContext`f[
             1, 3, 1] + $CellContext`f[1, 3, 2], 
             0}, {$CellContext`f[2, 1, 1] - $CellContext`f[
             2, 1, 2] - $CellContext`f[
             2, 2, 1] + $CellContext`f[2, 2, 2]}, {$CellContext`f[
              3, 1, 1] - $CellContext`f[3, 1, 2] - $CellContext`f[
             3, 2, 1] + $CellContext`f[3, 2, 2], $CellContext`f[
              3, 1, 1] - $CellContext`f[3, 1, 3] - $CellContext`f[
             3, 3, 1] + $CellContext`f[3, 3, 3], $CellContext`f[
              3, 1, 1] - $CellContext`f[3, 1, 4] - $CellContext`f[
             3, 4, 1] + $CellContext`f[3, 4, 4], $CellContext`f[
              3, 2, 2] - $CellContext`f[3, 2, 3] - $CellContext`f[
             3, 3, 2] + $CellContext`f[3, 3, 3], $CellContext`f[
              3, 2, 2] - $CellContext`f[3, 2, 4] - $CellContext`f[
             3, 4, 2] + $CellContext`f[3, 4, 4], $CellContext`f[
              3, 3, 3] - $CellContext`f[3, 3, 4] - $CellContext`f[
             3, 4, 3] + $CellContext`f[3, 4, 4]}}], "ExpectedMessages" -> {}, 
         "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.00057`2.906389853504485, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[1224, "Bytes"]]], 
      47 -> TestResultObject[
        Association[
        "TestIndex" -> 47, "TestID" -> "6c16a66a-3e9d-40ab-8083-e1f4f22d4b6c",
          "Outcome" -> "Success", "Input" -> HoldForm[{
            Normal[
             CoefficientArrays[
             1 + $CellContext`x1 + $CellContext`x2, {$CellContext`x1, \
$CellContext`x2}]], 
            Normal[
             
             CoefficientArrays[$CellContext`x1, {$CellContext`x1, \
$CellContext`x2}]], 
            Normal[
             CoefficientArrays[5, {$CellContext`x1, $CellContext`x2}]]}], 
         "ExpectedOutput" -> HoldForm[{{1, {1, 1}}, {0, {1, 0}}, {5}}], 
         "ActualOutput" -> HoldForm[{{1, {1, 1}}, {0, {1, 0}}, {5}}], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.000157`2.3464146502412273, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[504, "Bytes"]]], 
      48 -> TestResultObject[
        Association[
        "TestIndex" -> 48, "TestID" -> "5c71e018-f99c-4ed0-b7c1-a920dbc359b5",
          "Outcome" -> "Success", "Input" -> 
         HoldForm[{$CellContext`header, $CellContext`noM, $CellContext`noU, \
$CellContext`noD, $CellContext`noAttr, $CellContext`distanceMatrices, \
$CellContext`matchMatrix, $CellContext`mate} = $CellContext`import[
              StringJoin[
               NotebookDirectory[], "/import/", "precomp_proof.dat"], 
              "precomp"]; $CellContext`payoffMatrix = \
$CellContext`CpayoffMatrix[$CellContext`payoffDM, $CellContext`noM, \
$CellContext`noU, $CellContext`noD]; $CellContext`ineqmembers = \
$CellContext`Cineqmembers[$CellContext`mate]; \
$CellContext`CdataArray[$CellContext`payoffMatrix, 
             $CellContext`Cx[$CellContext`noAttr - 1]]], "ExpectedOutput" -> 
         HoldForm[{{-$CellContext`d1121 + $CellContext`d1221, \
-$CellContext`d1122 + $CellContext`d1222, -$CellContext`d1123 + \
$CellContext`d1223}, {-$CellContext`d1111 - $CellContext`d1121 + \
$CellContext`d1311 + $CellContext`d1321, -$CellContext`d1112 - \
$CellContext`d1122 + $CellContext`d1312 + $CellContext`d1322, \
-$CellContext`d1113 - $CellContext`d1123 + $CellContext`d1313 + \
$CellContext`d1323}, {-$CellContext`d1211 + $CellContext`d1311, \
-$CellContext`d1212 + $CellContext`d1312, -$CellContext`d1213 + \
$CellContext`d1313}, {0, 0, 
            0}, {$CellContext`d3121 - $CellContext`d3131 - $CellContext`d3141 - \
$CellContext`d3221 + $CellContext`d3231 + $CellContext`d3241, \
$CellContext`d3122 - $CellContext`d3132 - $CellContext`d3142 - \
$CellContext`d3222 + $CellContext`d3232 + $CellContext`d3242, \
$CellContext`d3123 - $CellContext`d3133 - $CellContext`d3143 - \
$CellContext`d3223 + $CellContext`d3233 + $CellContext`d3243}, \
{$CellContext`d3121 - $CellContext`d3131 - $CellContext`d3321 + \
$CellContext`d3331, $CellContext`d3122 - $CellContext`d3132 - \
$CellContext`d3322 + $CellContext`d3332, $CellContext`d3123 - \
$CellContext`d3133 - $CellContext`d3323 + $CellContext`d3333}, \
{-$CellContext`d3131 - $CellContext`d3141 + $CellContext`d3431 + \
$CellContext`d3441, -$CellContext`d3132 - $CellContext`d3142 + \
$CellContext`d3432 + $CellContext`d3442, -$CellContext`d3133 - \
$CellContext`d3143 + $CellContext`d3433 + $CellContext`d3443}, \
{$CellContext`d3241 - $CellContext`d3341, $CellContext`d3242 - \
$CellContext`d3342, $CellContext`d3243 - $CellContext`d3343}, \
{-$CellContext`d3221 + $CellContext`d3421, -$CellContext`d3222 + \
$CellContext`d3422, -$CellContext`d3223 + $CellContext`d3423}, \
{-$CellContext`d3321 - $CellContext`d3341 + $CellContext`d3421 + \
$CellContext`d3441, -$CellContext`d3322 - $CellContext`d3342 + \
$CellContext`d3422 + $CellContext`d3442, -$CellContext`d3323 - \
$CellContext`d3343 + $CellContext`d3423 + $CellContext`d3443}}], 
         "ActualOutput" -> 
         HoldForm[{{-$CellContext`d1121 + $CellContext`d1221, \
-$CellContext`d1122 + $CellContext`d1222, -$CellContext`d1123 + \
$CellContext`d1223}, {-$CellContext`d1111 - $CellContext`d1121 + \
$CellContext`d1311 + $CellContext`d1321, -$CellContext`d1112 - \
$CellContext`d1122 + $CellContext`d1312 + $CellContext`d1322, \
-$CellContext`d1113 - $CellContext`d1123 + $CellContext`d1313 + \
$CellContext`d1323}, {-$CellContext`d1211 + $CellContext`d1311, \
-$CellContext`d1212 + $CellContext`d1312, -$CellContext`d1213 + \
$CellContext`d1313}, {0, 0, 
            0}, {$CellContext`d3121 - $CellContext`d3131 - $CellContext`d3141 - \
$CellContext`d3221 + $CellContext`d3231 + $CellContext`d3241, \
$CellContext`d3122 - $CellContext`d3132 - $CellContext`d3142 - \
$CellContext`d3222 + $CellContext`d3232 + $CellContext`d3242, \
$CellContext`d3123 - $CellContext`d3133 - $CellContext`d3143 - \
$CellContext`d3223 + $CellContext`d3233 + $CellContext`d3243}, \
{$CellContext`d3121 - $CellContext`d3131 - $CellContext`d3321 + \
$CellContext`d3331, $CellContext`d3122 - $CellContext`d3132 - \
$CellContext`d3322 + $CellContext`d3332, $CellContext`d3123 - \
$CellContext`d3133 - $CellContext`d3323 + $CellContext`d3333}, \
{-$CellContext`d3131 - $CellContext`d3141 + $CellContext`d3431 + \
$CellContext`d3441, -$CellContext`d3132 - $CellContext`d3142 + \
$CellContext`d3432 + $CellContext`d3442, -$CellContext`d3133 - \
$CellContext`d3143 + $CellContext`d3433 + $CellContext`d3443}, \
{$CellContext`d3241 - $CellContext`d3341, $CellContext`d3242 - \
$CellContext`d3342, $CellContext`d3243 - $CellContext`d3343}, \
{-$CellContext`d3221 + $CellContext`d3421, -$CellContext`d3222 + \
$CellContext`d3422, -$CellContext`d3223 + $CellContext`d3423}, \
{-$CellContext`d3321 - $CellContext`d3341 + $CellContext`d3421 + \
$CellContext`d3441, -$CellContext`d3322 - $CellContext`d3342 + \
$CellContext`d3422 + $CellContext`d3442, -$CellContext`d3323 - \
$CellContext`d3343 + $CellContext`d3423 + $CellContext`d3443}}], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.005754`3.910484855386301, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.0039999999999995595`, "Seconds"], "MemoryUsed" -> 
         Quantity[22376, "Bytes"]]], 49 -> TestResultObject[
        Association[
        "TestIndex" -> 49, "TestID" -> "6f34b9bb-5494-4098-8ade-603f7d41ff61",
          "Outcome" -> "Success", "Input" -> 
         HoldForm[{$CellContext`header, $CellContext`noM, $CellContext`noU, \
$CellContext`noD, $CellContext`noAttr, $CellContext`distanceMatrices, \
$CellContext`matchMatrix, $CellContext`mate} = $CellContext`import[
              StringJoin[
               NotebookDirectory[], "/import/", "precomp_testdata.dat"], 
              "precomp"]; $CellContext`payoffMatrix = \
$CellContext`CpayoffMatrix[$CellContext`payoffDM, $CellContext`noM, \
$CellContext`noU, $CellContext`noD]; $CellContext`ineqmembers = \
$CellContext`Cineqmembers[$CellContext`mate]; \
$CellContext`CdataArray[$CellContext`payoffMatrix, 
             $CellContext`Cx[$CellContext`noAttr - 1]]], "ExpectedOutput" -> 
         HoldForm[CompressedData["
1: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
N83ME2xR2DTcTLtG6ZmtFZvo5eD/AcLIrT8=
           "]], "ActualOutput" -> HoldForm[CompressedData["
1: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
N83ME2xR2DTcTLtG6ZmtFZvo5eD/AcLIrT8=
           "]], "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
         "AbsoluteTimeUsed" -> 
         Quantity[0.043452`4.788524768696631, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0.04400000000000048, "Seconds"], "MemoryUsed" -> 
         Quantity[378112, "Bytes"]]], 50 -> TestResultObject[
        Association[
        "TestIndex" -> 50, "TestID" -> "ffb521e1-7d9e-483b-b34d-cf184b9bdaf3",
          "Outcome" -> "Success", "Input" -> HoldForm[Null], "ExpectedOutput" -> 
         HoldForm[Null], "ActualOutput" -> HoldForm[Null], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.000109`2.1879414957726175, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[40, "Bytes"]]], 51 -> 
      TestResultObject[
        Association[
        "TestIndex" -> 51, "TestID" -> "2adeb567-fbae-415d-81a6-49d573649378",
          "Outcome" -> "Success", "Input" -> HoldForm[Null], "ExpectedOutput" -> 
         HoldForm[Null], "ActualOutput" -> HoldForm[Null], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.00008`2.0536049848239375, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[40, "Bytes"]]], 52 -> 
      TestResultObject[
        Association[
        "TestIndex" -> 52, "TestID" -> "5b4d457a-0127-4ecc-86ae-344bfec7e9ee",
          "Outcome" -> "Success", "Input" -> HoldForm[Null], "ExpectedOutput" -> 
         HoldForm[Null], "ActualOutput" -> HoldForm[Null], 
         "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
         Quantity[0.00008`2.0536049848239375, "Seconds"], "CPUTimeUsed" -> 
         Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[40, "Bytes"]]]], 
    "TestsSucceededIndices" -> {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
      15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 
     35, 36, 37, 38, 39, 40, 42, 45, 46, 47, 48, 49, 50, 51, 52}, 
    "TestsFailedIndices" -> {31, 32, 41, 43, 44}, 
    "TestsFailedWrongResultsIndices" -> {31, 32, 41, 43, 44}, 
    "TestsFailedWithMessagesIndices" -> {}, 
    "TestsFailedWithErrorsIndices" -> {}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.657296685360821*^9, {3.6572967602840357`*^9, 3.6572968000756474`*^9}, 
   3.657297012004459*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"tr", "[", "\"\<TestResultRules\>\"", "]"}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ft", "=", 
   RowBox[{"tr", "[", "\"\<TestsFailedWrongResults\>\"", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6572968782489777`*^9, 3.657296890931469*^9}, {
  3.657296926596367*^9, 3.657296964436349*^9}}],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"31", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["TestResultObject",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PanelBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[
             ButtonBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"],
               ImageSizeCache->{15., {0., 15.}}],
              Appearance->None,
              ButtonFunction:>(Typeset`open$$ = True),
              Evaluator->Automatic,
              Method->"Preemptive"],
             Alignment->{Center, Center},
             
             ImageSize->
              Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[InsetBox[
              PaneBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "MUnitExpressions", "TestFailureIcon"],
                ImageSizeCache->{15., {3., 12.}}],
               Alignment->Center,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]]],
             AspectRatio->1,
             Axes->False,
             Background->GrayLevel[0.93],
             Frame->True,
             FrameStyle->Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]],
             FrameTicks->None,
             ImageSize->{Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])]},
             PlotRange->{{0, 1}, {0, 1}}], GridBox[{
              {
               RowBox[{
                TagBox["\<\"Outcome: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["\<\"Failure\"\>",
                 "SummaryItem"]}]},
              {
               RowBox[{
                TagBox["\<\"Test ID: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["\<\"79b58c2c-1cda-4a62-bdb0-512b7c17bc38\"\>",
                 "SummaryItem"]}]}
             },
             AutoDelete->False,
             
             BaseStyle->{
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False},
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Rows" -> {{Top}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
         GridBox[{
           {
            PaneBox[
             ButtonBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"],
               ImageSizeCache->{15., {0., 15.}}],
              Appearance->None,
              ButtonFunction:>(Typeset`open$$ = False),
              Evaluator->Automatic,
              Method->"Preemptive"],
             Alignment->{Center, Center},
             
             ImageSize->
              Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[InsetBox[
              PaneBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "MUnitExpressions", "TestFailureIcon"],
                ImageSizeCache->{15., {5., 10.}}],
               Alignment->Center,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]]],
             AspectRatio->1,
             Axes->False,
             Background->GrayLevel[0.93],
             Frame->True,
             FrameStyle->Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]],
             FrameTicks->None,
             ImageSize->{Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])]},
             PlotRange->{{0, 1}, {0, 1}}], GridBox[{
              {
               RowBox[{
                TagBox["\<\"Outcome: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["\<\"Failure\"\>",
                 "SummaryItem"]}]},
              {
               RowBox[{
                TagBox["\<\"Test ID: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["\<\"79b58c2c-1cda-4a62-bdb0-512b7c17bc38\"\>",
                 "SummaryItem"]}]},
              {
               RowBox[{
                TagBox["\<\"Input: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox[
                 PaneBox[
                  TagBox[
                   RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}],
                   Short[#, 
                    Rational[2, 3]]& ],
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0,
                  ImageSize->{{1, 500}, Automatic},
                  StripOnInput->True],
                 "SummaryItem"]}]},
              {
               RowBox[{
                TagBox["\<\"Expected output: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox[
                 PaneBox[
                  TagBox[
                   RowBox[{"{", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "}"}],
                   Short[#, 
                    Rational[2, 3]]& ],
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0,
                  ImageSize->{{1, 500}, Automatic},
                  StripOnInput->True],
                 "SummaryItem"]}]},
              {
               RowBox[{
                TagBox["\<\"Actual output: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox[
                 PaneBox[
                  TagBox[
                   RowBox[{"{", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "}"}],
                   Short[#, 
                    Rational[2, 3]]& ],
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0,
                  ImageSize->{{1, 500}, Automatic},
                  StripOnInput->True],
                 "SummaryItem"]}]},
              {
               RowBox[{
                TagBox["\<\"Time Taken: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox[
                 PaneBox[
                  TagBox[
                   
                   TemplateBox[{
                    "0.086708`5.088574166768087","\"s\"","seconds",
                    "\"Seconds\""},
                    "Quantity"],
                   Short[#, 
                    Rational[2, 3]]& ],
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0,
                  ImageSize->{{1, 500}, Automatic},
                  StripOnInput->True],
                 "SummaryItem"]}]}
             },
             AutoDelete->False,
             
             BaseStyle->{
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False},
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Rows" -> {{Top}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open$$],
         ImageSize->Automatic],
        BaselinePosition->Baseline],
       DynamicModuleValues:>{}], "]"}],
     TestResultObject[
      Association[
      "TestIndex" -> 31, "TestID" -> "79b58c2c-1cda-4a62-bdb0-512b7c17bc38", 
       "Outcome" -> "Failure", "Input" -> 
       HoldForm[{$CellContext`header, $CellContext`noM, $CellContext`noU, \
$CellContext`noD, $CellContext`noAttr, $CellContext`distanceMatrices, \
$CellContext`matchMatrix, $CellContext`mate} = $CellContext`import[
            StringJoin[
             NotebookDirectory[], "/import/precomp_proof_1-1.xlsx"], 
            "precomp"]; $CellContext`ineqmembers = \
$CellContext`Cineqmembers[$CellContext`mate, "pairwise"]], "ExpectedOutput" -> 
       HoldForm[{{{{{1, 1, 1}}, {{1, 2, 2}}, {{1, 3, 2}}}, {{{1, 1, 2}}, {{1, 
          2, 1}}, {{1, 3, 1}}}}, {{{{2, 1, 1}}, {{2, 1, 1}}, {{2, 2, 2}}, {{2,
           2, 2}}}, {{{2, 1, 2}}, {{2, 1, 3}}, {{2, 2, 1}}, {{2, 2, 
          3}}}}, {{{{3, 1, 1}}, {{3, 1, 1}}, {{3, 1, 1}}, {{3, 2, 2}}, {{3, 2,
           2}}, {{3, 2, 2}}, {{3, 3, 3}}, {{3, 3, 3}}, {{3, 3, 3}}, {{3, 4, 
          4}}, {{3, 4, 4}}, {{3, 4, 4}}}, {{{3, 1, 2}}, {{3, 1, 3}}, {{3, 1, 
          4}}, {{3, 2, 1}}, {{3, 2, 3}}, {{3, 2, 4}}, {{3, 3, 1}}, {{3, 3, 
          2}}, {{3, 3, 4}}, {{3, 4, 1}}, {{3, 4, 2}}, {{3, 4, 3}}}}}], 
       "ActualOutput" -> 
       HoldForm[{{{{{1, 1, 1}}, {{1, 1, 1}}, {{1, 1, 1}}, {{1, 1, 1}}, {{1, 1,
           1}}, {{1, 1, 1}}, {{1, 1, 1}}, {{1, 1, 1}}, {{1, 1, 1}}, {{1, 2, 
          2}}, {{1, 2, 2}}, {{1, 2, 2}}, {{1, 2, 2}}, {{1, 2, 2}}, {{1, 2, 
          2}}, {{1, 2, 2}}, {{1, 2, 2}}, {{1, 2, 2}}, {{1, 3, 2}}, {{1, 3, 
          2}}, {{1, 3, 2}}, {{1, 3, 2}}, {{1, 3, 2}}, {{1, 3, 2}}, {{1, 3, 
          2}}, {{1, 3, 2}}, {{1, 3, 2}}}, {{{1, 1, 2}}, {{1, 1, 3}}, {{1, 1, 
          4}}, {{1, 1, 5}}, {{1, 1, 6}}, {{1, 1, 7}}, {{1, 1, 8}}, {{1, 1, 
          9}}, {{1, 1, 10}}, {{1, 2, 1}}, {{1, 2, 3}}, {{1, 2, 4}}, {{1, 2, 
          5}}, {{1, 2, 6}}, {{1, 2, 7}}, {{1, 2, 8}}, {{1, 2, 9}}, {{1, 2, 
          10}}, {{1, 3, 1}}, {{1, 3, 3}}, {{1, 3, 4}}, {{1, 3, 5}}, {{1, 3, 
          6}}, {{1, 3, 7}}, {{1, 3, 8}}, {{1, 3, 9}}, {{1, 3, 10}}}}, {{{{2, 
          1, 1}}, {{2, 1, 1}}, {{2, 1, 1}}, {{2, 1, 1}}, {{2, 1, 1}}, {{2, 1, 
          1}}, {{2, 1, 1}}, {{2, 1, 1}}, {{2, 1, 1}}, {{2, 2, 2}}, {{2, 2, 
          2}}, {{2, 2, 2}}, {{2, 2, 2}}, {{2, 2, 2}}, {{2, 2, 2}}, {{2, 2, 
          2}}, {{2, 2, 2}}, {{2, 2, 2}}}, {{{2, 1, 2}}, {{2, 1, 3}}, {{2, 1, 
          4}}, {{2, 1, 5}}, {{2, 1, 6}}, {{2, 1, 7}}, {{2, 1, 8}}, {{2, 1, 
          9}}, {{2, 1, 10}}, {{2, 2, 1}}, {{2, 2, 3}}, {{2, 2, 4}}, {{2, 2, 
          5}}, {{2, 2, 6}}, {{2, 2, 7}}, {{2, 2, 8}}, {{2, 2, 9}}, {{2, 2, 
          10}}}}, {{{{3, 1, 1}}, {{3, 1, 1}}, {{3, 1, 1}}, {{3, 1, 1}}, {{3, 
          1, 1}}, {{3, 1, 1}}, {{3, 1, 1}}, {{3, 1, 1}}, {{3, 1, 1}}, {{3, 2, 
          2}}, {{3, 2, 2}}, {{3, 2, 2}}, {{3, 2, 2}}, {{3, 2, 2}}, {{3, 2, 
          2}}, {{3, 2, 2}}, {{3, 2, 2}}, {{3, 2, 2}}, {{3, 3, 3}}, {{3, 3, 
          3}}, {{3, 3, 3}}, {{3, 3, 3}}, {{3, 3, 3}}, {{3, 3, 3}}, {{3, 3, 
          3}}, {{3, 3, 3}}, {{3, 3, 3}}, {{3, 4, 4}}, {{3, 4, 4}}, {{3, 4, 
          4}}, {{3, 4, 4}}, {{3, 4, 4}}, {{3, 4, 4}}, {{3, 4, 4}}, {{3, 4, 
          4}}, {{3, 4, 4}}}, {{{3, 1, 2}}, {{3, 1, 3}}, {{3, 1, 4}}, {{3, 1, 
          5}}, {{3, 1, 6}}, {{3, 1, 7}}, {{3, 1, 8}}, {{3, 1, 9}}, {{3, 1, 
          10}}, {{3, 2, 1}}, {{3, 2, 3}}, {{3, 2, 4}}, {{3, 2, 5}}, {{3, 2, 
          6}}, {{3, 2, 7}}, {{3, 2, 8}}, {{3, 2, 9}}, {{3, 2, 10}}, {{3, 3, 
          1}}, {{3, 3, 2}}, {{3, 3, 4}}, {{3, 3, 5}}, {{3, 3, 6}}, {{3, 3, 
          7}}, {{3, 3, 8}}, {{3, 3, 9}}, {{3, 3, 10}}, {{3, 4, 1}}, {{3, 4, 
          2}}, {{3, 4, 3}}, {{3, 4, 5}}, {{3, 4, 6}}, {{3, 4, 7}}, {{3, 4, 
          8}}, {{3, 4, 9}}, {{3, 4, 10}}}}}], "ExpectedMessages" -> {}, 
       "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
       Quantity[0.086708`5.088574166768087, "Seconds"], "CPUTimeUsed" -> 
       Quantity[0.02000000000000135, "Seconds"], "MemoryUsed" -> 
       Quantity[-197400, "Bytes"]]],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"32", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["TestResultObject",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PanelBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[
             ButtonBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"],
               ImageSizeCache->{15., {0., 15.}}],
              Appearance->None,
              ButtonFunction:>(Typeset`open$$ = True),
              Evaluator->Automatic,
              Method->"Preemptive"],
             Alignment->{Center, Center},
             
             ImageSize->
              Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[InsetBox[
              PaneBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "MUnitExpressions", "TestFailureIcon"],
                ImageSizeCache->{15., {3., 12.}}],
               Alignment->Center,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]]],
             AspectRatio->1,
             Axes->False,
             Background->GrayLevel[0.93],
             Frame->True,
             FrameStyle->Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]],
             FrameTicks->None,
             ImageSize->{Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])]},
             PlotRange->{{0, 1}, {0, 1}}], GridBox[{
              {
               RowBox[{
                TagBox["\<\"Outcome: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["\<\"Failure\"\>",
                 "SummaryItem"]}]},
              {
               RowBox[{
                TagBox["\<\"Test ID: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["\<\"630d55a0-a4d9-45b1-8692-4cd10e1b3376\"\>",
                 "SummaryItem"]}]}
             },
             AutoDelete->False,
             
             BaseStyle->{
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False},
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Rows" -> {{Top}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
         GridBox[{
           {
            PaneBox[
             ButtonBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"],
               ImageSizeCache->{15., {0., 15.}}],
              Appearance->None,
              ButtonFunction:>(Typeset`open$$ = False),
              Evaluator->Automatic,
              Method->"Preemptive"],
             Alignment->{Center, Center},
             
             ImageSize->
              Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[InsetBox[
              PaneBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "MUnitExpressions", "TestFailureIcon"],
                ImageSizeCache->{15., {5., 10.}}],
               Alignment->Center,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]]],
             AspectRatio->1,
             Axes->False,
             Background->GrayLevel[0.93],
             Frame->True,
             FrameStyle->Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]],
             FrameTicks->None,
             ImageSize->{Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])]},
             PlotRange->{{0, 1}, {0, 1}}], GridBox[{
              {
               RowBox[{
                TagBox["\<\"Outcome: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["\<\"Failure\"\>",
                 "SummaryItem"]}]},
              {
               RowBox[{
                TagBox["\<\"Test ID: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["\<\"630d55a0-a4d9-45b1-8692-4cd10e1b3376\"\>",
                 "SummaryItem"]}]},
              {
               RowBox[{
                TagBox["\<\"Input: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox[
                 PaneBox[
                  TagBox[
                   RowBox[{"Cinequalities", "[", 
                    RowBox[{"f", ",", "ineqmembers"}], "]"}],
                   Short[#, 
                    Rational[2, 3]]& ],
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0,
                  ImageSize->{{1, 500}, Automatic},
                  StripOnInput->True],
                 "SummaryItem"]}]},
              {
               RowBox[{
                TagBox["\<\"Expected output: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox[
                 PaneBox[
                  TagBox[
                   RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}],
                   Short[#, 
                    Rational[2, 3]]& ],
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0,
                  ImageSize->{{1, 500}, Automatic},
                  StripOnInput->True],
                 "SummaryItem"]}]},
              {
               RowBox[{
                TagBox["\<\"Actual output: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox[
                 PaneBox[
                  TagBox[
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"1", ",", "1", ",", "1"}], "]"}], "-", 
                    RowBox[{"f", "[", 
                    RowBox[{"1", ",", "1", ",", "2"}], "]"}]}], ",", 
                    RowBox[{"\[LeftSkeleton]", "25", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{"f", "[", 
                    RowBox[{"1", ",", "3", ",", "2"}], "]"}], "-", 
                    RowBox[{"f", "[", 
                    RowBox[{"1", ",", "3", ",", "10"}], "]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "}"}]}], "}"}],
                   Short[#, 
                    Rational[2, 3]]& ],
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0,
                  ImageSize->{{1, 500}, Automatic},
                  StripOnInput->True],
                 "SummaryItem"]}]},
              {
               RowBox[{
                TagBox["\<\"Time Taken: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox[
                 PaneBox[
                  TagBox[
                   
                   TemplateBox[{
                    "0.000801`3.0541475139162317","\"s\"","seconds",
                    "\"Seconds\""},
                    "Quantity"],
                   Short[#, 
                    Rational[2, 3]]& ],
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0,
                  ImageSize->{{1, 500}, Automatic},
                  StripOnInput->True],
                 "SummaryItem"]}]}
             },
             AutoDelete->False,
             
             BaseStyle->{
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False},
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Rows" -> {{Top}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open$$],
         ImageSize->Automatic],
        BaselinePosition->Baseline],
       DynamicModuleValues:>{}], "]"}],
     TestResultObject[
      Association[
      "TestIndex" -> 32, "TestID" -> "630d55a0-a4d9-45b1-8692-4cd10e1b3376", 
       "Outcome" -> "Failure", "Input" -> HoldForm[
         $CellContext`Cinequalities[$CellContext`f, \
$CellContext`ineqmembers]], "ExpectedOutput" -> 
       HoldForm[{{$CellContext`f[1, 1, 1] - $CellContext`f[
           1, 1, 2], -$CellContext`f[1, 2, 1] + $CellContext`f[
            1, 2, 2], -$CellContext`f[1, 3, 1] + $CellContext`f[
            1, 3, 2]}, {$CellContext`f[2, 1, 1] - $CellContext`f[
           2, 1, 2], $CellContext`f[2, 1, 1] - $CellContext`f[
           2, 1, 3], -$CellContext`f[2, 2, 1] + $CellContext`f[
            2, 2, 2], $CellContext`f[2, 2, 2] - $CellContext`f[
           2, 2, 3]}, {$CellContext`f[3, 1, 1] - $CellContext`f[
           3, 1, 2], $CellContext`f[3, 1, 1] - $CellContext`f[
           3, 1, 3], $CellContext`f[3, 1, 1] - $CellContext`f[
           3, 1, 4], -$CellContext`f[3, 2, 1] + $CellContext`f[
            3, 2, 2], $CellContext`f[3, 2, 2] - $CellContext`f[
           3, 2, 3], $CellContext`f[3, 2, 2] - $CellContext`f[
           3, 2, 4], -$CellContext`f[3, 3, 1] + $CellContext`f[
            3, 3, 3], -$CellContext`f[3, 3, 2] + $CellContext`f[
            3, 3, 3], $CellContext`f[3, 3, 3] - $CellContext`f[
           3, 3, 4], -$CellContext`f[3, 4, 1] + $CellContext`f[
            3, 4, 4], -$CellContext`f[3, 4, 2] + $CellContext`f[
            3, 4, 4], -$CellContext`f[3, 4, 3] + $CellContext`f[3, 4, 4]}}], 
       "ActualOutput" -> 
       HoldForm[{{$CellContext`f[1, 1, 1] - $CellContext`f[
           1, 1, 2], $CellContext`f[1, 1, 1] - $CellContext`f[
           1, 1, 3], $CellContext`f[1, 1, 1] - $CellContext`f[
           1, 1, 4], $CellContext`f[1, 1, 1] - $CellContext`f[
           1, 1, 5], $CellContext`f[1, 1, 1] - $CellContext`f[
           1, 1, 6], $CellContext`f[1, 1, 1] - $CellContext`f[
           1, 1, 7], $CellContext`f[1, 1, 1] - $CellContext`f[
           1, 1, 8], $CellContext`f[1, 1, 1] - $CellContext`f[
           1, 1, 9], $CellContext`f[1, 1, 1] - $CellContext`f[
           1, 1, 10], -$CellContext`f[1, 2, 1] + $CellContext`f[
            1, 2, 2], $CellContext`f[1, 2, 2] - $CellContext`f[
           1, 2, 3], $CellContext`f[1, 2, 2] - $CellContext`f[
           1, 2, 4], $CellContext`f[1, 2, 2] - $CellContext`f[
           1, 2, 5], $CellContext`f[1, 2, 2] - $CellContext`f[
           1, 2, 6], $CellContext`f[1, 2, 2] - $CellContext`f[
           1, 2, 7], $CellContext`f[1, 2, 2] - $CellContext`f[
           1, 2, 8], $CellContext`f[1, 2, 2] - $CellContext`f[
           1, 2, 9], $CellContext`f[1, 2, 2] - $CellContext`f[
           1, 2, 10], -$CellContext`f[1, 3, 1] + $CellContext`f[
            1, 3, 2], $CellContext`f[1, 3, 2] - $CellContext`f[
           1, 3, 3], $CellContext`f[1, 3, 2] - $CellContext`f[
           1, 3, 4], $CellContext`f[1, 3, 2] - $CellContext`f[
           1, 3, 5], $CellContext`f[1, 3, 2] - $CellContext`f[
           1, 3, 6], $CellContext`f[1, 3, 2] - $CellContext`f[
           1, 3, 7], $CellContext`f[1, 3, 2] - $CellContext`f[
           1, 3, 8], $CellContext`f[1, 3, 2] - $CellContext`f[
           1, 3, 9], $CellContext`f[1, 3, 2] - $CellContext`f[
           1, 3, 10]}, {$CellContext`f[2, 1, 1] - $CellContext`f[
           2, 1, 2], $CellContext`f[2, 1, 1] - $CellContext`f[
           2, 1, 3], $CellContext`f[2, 1, 1] - $CellContext`f[
           2, 1, 4], $CellContext`f[2, 1, 1] - $CellContext`f[
           2, 1, 5], $CellContext`f[2, 1, 1] - $CellContext`f[
           2, 1, 6], $CellContext`f[2, 1, 1] - $CellContext`f[
           2, 1, 7], $CellContext`f[2, 1, 1] - $CellContext`f[
           2, 1, 8], $CellContext`f[2, 1, 1] - $CellContext`f[
           2, 1, 9], $CellContext`f[2, 1, 1] - $CellContext`f[
           2, 1, 10], -$CellContext`f[2, 2, 1] + $CellContext`f[
            2, 2, 2], $CellContext`f[2, 2, 2] - $CellContext`f[
           2, 2, 3], $CellContext`f[2, 2, 2] - $CellContext`f[
           2, 2, 4], $CellContext`f[2, 2, 2] - $CellContext`f[
           2, 2, 5], $CellContext`f[2, 2, 2] - $CellContext`f[
           2, 2, 6], $CellContext`f[2, 2, 2] - $CellContext`f[
           2, 2, 7], $CellContext`f[2, 2, 2] - $CellContext`f[
           2, 2, 8], $CellContext`f[2, 2, 2] - $CellContext`f[
           2, 2, 9], $CellContext`f[2, 2, 2] - $CellContext`f[
           2, 2, 10]}, {$CellContext`f[3, 1, 1] - $CellContext`f[
           3, 1, 2], $CellContext`f[3, 1, 1] - $CellContext`f[
           3, 1, 3], $CellContext`f[3, 1, 1] - $CellContext`f[
           3, 1, 4], $CellContext`f[3, 1, 1] - $CellContext`f[
           3, 1, 5], $CellContext`f[3, 1, 1] - $CellContext`f[
           3, 1, 6], $CellContext`f[3, 1, 1] - $CellContext`f[
           3, 1, 7], $CellContext`f[3, 1, 1] - $CellContext`f[
           3, 1, 8], $CellContext`f[3, 1, 1] - $CellContext`f[
           3, 1, 9], $CellContext`f[3, 1, 1] - $CellContext`f[
           3, 1, 10], -$CellContext`f[3, 2, 1] + $CellContext`f[
            3, 2, 2], $CellContext`f[3, 2, 2] - $CellContext`f[
           3, 2, 3], $CellContext`f[3, 2, 2] - $CellContext`f[
           3, 2, 4], $CellContext`f[3, 2, 2] - $CellContext`f[
           3, 2, 5], $CellContext`f[3, 2, 2] - $CellContext`f[
           3, 2, 6], $CellContext`f[3, 2, 2] - $CellContext`f[
           3, 2, 7], $CellContext`f[3, 2, 2] - $CellContext`f[
           3, 2, 8], $CellContext`f[3, 2, 2] - $CellContext`f[
           3, 2, 9], $CellContext`f[3, 2, 2] - $CellContext`f[
           3, 2, 10], -$CellContext`f[3, 3, 1] + $CellContext`f[
            3, 3, 3], -$CellContext`f[3, 3, 2] + $CellContext`f[
            3, 3, 3], $CellContext`f[3, 3, 3] - $CellContext`f[
           3, 3, 4], $CellContext`f[3, 3, 3] - $CellContext`f[
           3, 3, 5], $CellContext`f[3, 3, 3] - $CellContext`f[
           3, 3, 6], $CellContext`f[3, 3, 3] - $CellContext`f[
           3, 3, 7], $CellContext`f[3, 3, 3] - $CellContext`f[
           3, 3, 8], $CellContext`f[3, 3, 3] - $CellContext`f[
           3, 3, 9], $CellContext`f[3, 3, 3] - $CellContext`f[
           3, 3, 10], -$CellContext`f[3, 4, 1] + $CellContext`f[
            3, 4, 4], -$CellContext`f[3, 4, 2] + $CellContext`f[
            3, 4, 4], -$CellContext`f[3, 4, 3] + $CellContext`f[
            3, 4, 4], $CellContext`f[3, 4, 4] - $CellContext`f[
           3, 4, 5], $CellContext`f[3, 4, 4] - $CellContext`f[
           3, 4, 6], $CellContext`f[3, 4, 4] - $CellContext`f[
           3, 4, 7], $CellContext`f[3, 4, 4] - $CellContext`f[
           3, 4, 8], $CellContext`f[3, 4, 4] - $CellContext`f[
           3, 4, 9], $CellContext`f[3, 4, 4] - $CellContext`f[3, 4, 10]}}], 
       "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
       Quantity[0.000801`3.0541475139162317, "Seconds"], "CPUTimeUsed" -> 
       Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[20616, "Bytes"]]],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"41", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["TestResultObject",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PanelBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[
             ButtonBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"],
               ImageSizeCache->{15., {0., 15.}}],
              Appearance->None,
              ButtonFunction:>(Typeset`open$$ = True),
              Evaluator->Automatic,
              Method->"Preemptive"],
             Alignment->{Center, Center},
             
             ImageSize->
              Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[InsetBox[
              PaneBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "MUnitExpressions", "TestFailureIcon"],
                ImageSizeCache->{15., {3., 12.}}],
               Alignment->Center,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]]],
             AspectRatio->1,
             Axes->False,
             Background->GrayLevel[0.93],
             Frame->True,
             FrameStyle->Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]],
             FrameTicks->None,
             ImageSize->{Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])]},
             PlotRange->{{0, 1}, {0, 1}}], GridBox[{
              {
               RowBox[{
                TagBox["\<\"Outcome: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["\<\"Failure\"\>",
                 "SummaryItem"]}]},
              {
               RowBox[{
                TagBox["\<\"Test ID: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["\<\"8150403b-2a0d-430b-84f2-2d0bd6f03c45\"\>",
                 "SummaryItem"]}]}
             },
             AutoDelete->False,
             
             BaseStyle->{
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False},
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Rows" -> {{Top}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
         GridBox[{
           {
            PaneBox[
             ButtonBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"],
               ImageSizeCache->{15., {0., 15.}}],
              Appearance->None,
              ButtonFunction:>(Typeset`open$$ = False),
              Evaluator->Automatic,
              Method->"Preemptive"],
             Alignment->{Center, Center},
             
             ImageSize->
              Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[InsetBox[
              PaneBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "MUnitExpressions", "TestFailureIcon"],
                ImageSizeCache->{15., {5., 10.}}],
               Alignment->Center,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]]],
             AspectRatio->1,
             Axes->False,
             Background->GrayLevel[0.93],
             Frame->True,
             FrameStyle->Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]],
             FrameTicks->None,
             ImageSize->{Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])]},
             PlotRange->{{0, 1}, {0, 1}}], GridBox[{
              {
               RowBox[{
                TagBox["\<\"Outcome: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["\<\"Failure\"\>",
                 "SummaryItem"]}]},
              {
               RowBox[{
                TagBox["\<\"Test ID: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["\<\"8150403b-2a0d-430b-84f2-2d0bd6f03c45\"\>",
                 "SummaryItem"]}]},
              {
               RowBox[{
                TagBox["\<\"Input: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox[
                 PaneBox[
                  TagBox[
                   RowBox[{
                    RowBox[{"matchMatrix", "=", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "}"}]}], ";", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], ";", 
                    RowBox[{"ineqmembers", "=", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    "[", "mate", "]"}]}]}],
                   Short[#, 
                    Rational[2, 3]]& ],
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0,
                  ImageSize->{{1, 500}, Automatic},
                  StripOnInput->True],
                 "SummaryItem"]}]},
              {
               RowBox[{
                TagBox["\<\"Expected output: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox[
                 PaneBox[
                  TagBox["Null",
                   Short[#, 
                    Rational[2, 3]]& ],
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0,
                  ImageSize->{{1, 500}, Automatic},
                  StripOnInput->True],
                 "SummaryItem"]}]},
              {
               RowBox[{
                TagBox["\<\"Actual output: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox[
                 PaneBox[
                  TagBox[
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "2"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "}"}]}], "}"}], "}"}],
                   Short[#, 
                    Rational[2, 3]]& ],
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0,
                  ImageSize->{{1, 500}, Automatic},
                  StripOnInput->True],
                 "SummaryItem"]}]},
              {
               RowBox[{
                TagBox["\<\"Time Taken: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox[
                 PaneBox[
                  TagBox[
                   
                   TemplateBox[{
                    "0.0002`2.4515449934959754","\"s\"","seconds",
                    "\"Seconds\""},
                    "Quantity"],
                   Short[#, 
                    Rational[2, 3]]& ],
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0,
                  ImageSize->{{1, 500}, Automatic},
                  StripOnInput->True],
                 "SummaryItem"]}]}
             },
             AutoDelete->False,
             
             BaseStyle->{
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False},
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Rows" -> {{Top}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open$$],
         ImageSize->Automatic],
        BaselinePosition->Baseline],
       DynamicModuleValues:>{}], "]"}],
     TestResultObject[
      Association[
      "TestIndex" -> 41, "TestID" -> "8150403b-2a0d-430b-84f2-2d0bd6f03c45", 
       "Outcome" -> "Failure", "Input" -> 
       HoldForm[$CellContext`matchMatrix = {{{1, 1}, {0, 0}, {0, 
           0}}}; $CellContext`mate = \
$CellContext`Cmate[$CellContext`matchMatrix]; $CellContext`ineqmembers = \
$CellContext`Cineqmembers[$CellContext`mate]], "ExpectedOutput" -> 
       HoldForm[Null], "ActualOutput" -> 
       HoldForm[{{{{{1, 1, 1}, {1, 1, 2}}, {{1, 1, 1}, {1, 1, 2}}, {}}, {{{1, 
            2, 1}, {1, 2, 2}}, {{1, 3, 1}, {1, 3, 2}}, {}}}}], 
       "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
       Quantity[0.0002`2.4515449934959754, "Seconds"], "CPUTimeUsed" -> 
       Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[528, "Bytes"]]],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"43", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["TestResultObject",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PanelBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[
             ButtonBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"],
               ImageSizeCache->{15., {0., 15.}}],
              Appearance->None,
              ButtonFunction:>(Typeset`open$$ = True),
              Evaluator->Automatic,
              Method->"Preemptive"],
             Alignment->{Center, Center},
             
             ImageSize->
              Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[InsetBox[
              PaneBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "MUnitExpressions", "TestFailureIcon"],
                ImageSizeCache->{15., {3., 12.}}],
               Alignment->Center,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]]],
             AspectRatio->1,
             Axes->False,
             Background->GrayLevel[0.93],
             Frame->True,
             FrameStyle->Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]],
             FrameTicks->None,
             ImageSize->{Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])]},
             PlotRange->{{0, 1}, {0, 1}}], GridBox[{
              {
               RowBox[{
                TagBox["\<\"Outcome: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["\<\"Failure\"\>",
                 "SummaryItem"]}]},
              {
               RowBox[{
                TagBox["\<\"Test ID: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["\<\"0c9f1e6c-be61-4dcd-96dc-e2a0c7ebfce8\"\>",
                 "SummaryItem"]}]}
             },
             AutoDelete->False,
             
             BaseStyle->{
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False},
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Rows" -> {{Top}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
         GridBox[{
           {
            PaneBox[
             ButtonBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"],
               ImageSizeCache->{15., {0., 15.}}],
              Appearance->None,
              ButtonFunction:>(Typeset`open$$ = False),
              Evaluator->Automatic,
              Method->"Preemptive"],
             Alignment->{Center, Center},
             
             ImageSize->
              Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[InsetBox[
              PaneBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "MUnitExpressions", "TestFailureIcon"],
                ImageSizeCache->{15., {5., 10.}}],
               Alignment->Center,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]]],
             AspectRatio->1,
             Axes->False,
             Background->GrayLevel[0.93],
             Frame->True,
             FrameStyle->Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]],
             FrameTicks->None,
             ImageSize->{Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])]},
             PlotRange->{{0, 1}, {0, 1}}], GridBox[{
              {
               RowBox[{
                TagBox["\<\"Outcome: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["\<\"Failure\"\>",
                 "SummaryItem"]}]},
              {
               RowBox[{
                TagBox["\<\"Test ID: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["\<\"0c9f1e6c-be61-4dcd-96dc-e2a0c7ebfce8\"\>",
                 "SummaryItem"]}]},
              {
               RowBox[{
                TagBox["\<\"Input: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox[
                 PaneBox[
                  TagBox[
                   RowBox[{
                    RowBox[{"matchMatrix", "=", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "}"}]}], ";", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], ";", 
                    RowBox[{"ineqmembers", "=", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "12", "\[RightSkeleton]"}], 
                    "[", "mate", "]"}]}]}],
                   Short[#, 
                    Rational[2, 3]]& ],
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0,
                  ImageSize->{{1, 500}, Automatic},
                  StripOnInput->True],
                 "SummaryItem"]}]},
              {
               RowBox[{
                TagBox["\<\"Expected output: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox[
                 PaneBox[
                  TagBox[
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "1"}], "}"}]}], "}"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "2"}], "}"}]}], "}"}], 
                    "}"}]}], "}"}], "}"}],
                   Short[#, 
                    Rational[2, 3]]& ],
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0,
                  ImageSize->{{1, 500}, Automatic},
                  StripOnInput->True],
                 "SummaryItem"]}]},
              {
               RowBox[{
                TagBox["\<\"Actual output: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox[
                 PaneBox[
                  TagBox[
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "1"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "1"}], "}"}], "}"}]}], "}"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}], 
                    "}"}], "}"}],
                   Short[#, 
                    Rational[2, 3]]& ],
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0,
                  ImageSize->{{1, 500}, Automatic},
                  StripOnInput->True],
                 "SummaryItem"]}]},
              {
               RowBox[{
                TagBox["\<\"Time Taken: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox[
                 PaneBox[
                  TagBox[
                   
                   TemplateBox[{
                    "0.000204`2.4601451652578925","\"s\"","seconds",
                    "\"Seconds\""},
                    "Quantity"],
                   Short[#, 
                    Rational[2, 3]]& ],
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0,
                  ImageSize->{{1, 500}, Automatic},
                  StripOnInput->True],
                 "SummaryItem"]}]}
             },
             AutoDelete->False,
             
             BaseStyle->{
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False},
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Rows" -> {{Top}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open$$],
         ImageSize->Automatic],
        BaselinePosition->Baseline],
       DynamicModuleValues:>{}], "]"}],
     TestResultObject[
      Association[
      "TestIndex" -> 43, "TestID" -> "0c9f1e6c-be61-4dcd-96dc-e2a0c7ebfce8", 
       "Outcome" -> "Failure", "Input" -> 
       HoldForm[$CellContext`matchMatrix = {{{1, 1}, {1, 0}, {0, 
           0}}}; $CellContext`mate = \
$CellContext`Cmate[$CellContext`matchMatrix]; $CellContext`ineqmembers = \
$CellContext`Cineqmembers[$CellContext`mate]], "ExpectedOutput" -> 
       HoldForm[{{{{{1, 1, 1}, {1, 1, 2}, {1, 2, 1}}}, {{{1, 1, 1}, {1, 2, 
         1}, {1, 2, 2}}}}}], "ActualOutput" -> 
       HoldForm[{{{{{1, 1, 1}, {1, 1, 2}, {1, 2, 1}}, {{1, 1, 1}, {1, 1, 
            2}}, {{1, 2, 1}}}, {{{1, 1, 1}, {1, 2, 1}, {1, 2, 2}}, {{1, 3, 
            1}, {1, 3, 2}}, {{1, 3, 1}}}}}], "ExpectedMessages" -> {}, 
       "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
       Quantity[0.000204`2.4601451652578925, "Seconds"], "CPUTimeUsed" -> 
       Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[1440, "Bytes"]]],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"44", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["TestResultObject",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PanelBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[
             ButtonBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"],
               ImageSizeCache->{15., {0., 15.}}],
              Appearance->None,
              ButtonFunction:>(Typeset`open$$ = True),
              Evaluator->Automatic,
              Method->"Preemptive"],
             Alignment->{Center, Center},
             ImageSize->
              Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[InsetBox[
              PaneBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "MUnitExpressions", "TestFailureIcon"],
                ImageSizeCache->{15., {3., 12.}}],
               Alignment->Center,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]]],
             AspectRatio->1,
             Axes->False,
             Background->GrayLevel[0.93],
             Frame->True,
             FrameStyle->Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]],
             FrameTicks->None,
             ImageSize->{Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])]},
             PlotRange->{{0, 1}, {0, 1}}], GridBox[{
              {
               RowBox[{
                TagBox["\<\"Outcome: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["\<\"Failure\"\>",
                 "SummaryItem"]}]},
              {
               RowBox[{
                TagBox["\<\"Test ID: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["\<\"e2e1ff5f-5463-4623-9d7e-ee4de9547756\"\>",
                 "SummaryItem"]}]}
             },
             AutoDelete->False,
             
             BaseStyle->{
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False},
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Rows" -> {{Top}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
         GridBox[{
           {
            PaneBox[
             ButtonBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"],
               ImageSizeCache->{15., {0., 15.}}],
              Appearance->None,
              ButtonFunction:>(Typeset`open$$ = False),
              Evaluator->Automatic,
              Method->"Preemptive"],
             Alignment->{Center, Center},
             
             ImageSize->
              Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[InsetBox[
              PaneBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "MUnitExpressions", "TestFailureIcon"],
                ImageSizeCache->{15., {5., 10.}}],
               Alignment->Center,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]]],
             AspectRatio->1,
             Axes->False,
             Background->GrayLevel[0.93],
             Frame->True,
             FrameStyle->Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]],
             FrameTicks->None,
             ImageSize->{Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])]},
             PlotRange->{{0, 1}, {0, 1}}], GridBox[{
              {
               RowBox[{
                TagBox["\<\"Outcome: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["\<\"Failure\"\>",
                 "SummaryItem"]}]},
              {
               RowBox[{
                TagBox["\<\"Test ID: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox["\<\"e2e1ff5f-5463-4623-9d7e-ee4de9547756\"\>",
                 "SummaryItem"]}]},
              {
               RowBox[{
                TagBox["\<\"Input: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox[
                 PaneBox[
                  TagBox[
                   RowBox[{
                    RowBox[{"TUmatchMatrix", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], "}"}]}], ";", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    RowBox[{"TUineqmembers", "=", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}]}],
                   Short[#, 
                    Rational[2, 3]]& ],
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0,
                  ImageSize->{{1, 500}, Automatic},
                  StripOnInput->True],
                 "SummaryItem"]}]},
              {
               RowBox[{
                TagBox["\<\"Expected output: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox[
                 PaneBox[
                  TagBox["Null",
                   Short[#, 
                    Rational[2, 3]]& ],
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0,
                  ImageSize->{{1, 500}, Automatic},
                  StripOnInput->True],
                 "SummaryItem"]}]},
              {
               RowBox[{
                TagBox["\<\"Actual output: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox[
                 PaneBox[
                  TagBox[
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "2"}], "}"}]}], "}"}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "}"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "}"}], "}"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}], 
                    "}"}]}], "}"}],
                   Short[#, 
                    Rational[2, 3]]& ],
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0,
                  ImageSize->{{1, 500}, Automatic},
                  StripOnInput->True],
                 "SummaryItem"]}]},
              {
               RowBox[{
                TagBox["\<\"Time Taken: \"\>",
                 "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                TagBox[
                 PaneBox[
                  TagBox[
                   
                   TemplateBox[{
                    "0.000231`2.514126977724138","\"s\"","seconds",
                    "\"Seconds\""},
                    "Quantity"],
                   Short[#, 
                    Rational[2, 3]]& ],
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0,
                  ImageSize->{{1, 500}, Automatic},
                  StripOnInput->True],
                 "SummaryItem"]}]}
             },
             AutoDelete->False,
             
             BaseStyle->{
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False},
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Rows" -> {{Top}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open$$],
         ImageSize->Automatic],
        BaselinePosition->Baseline],
       DynamicModuleValues:>{}], "]"}],
     TestResultObject[
      Association[
      "TestIndex" -> 44, "TestID" -> "e2e1ff5f-5463-4623-9d7e-ee4de9547756", 
       "Outcome" -> "Failure", "Input" -> 
       HoldForm[$CellContext`TUmatchMatrix = {{{1, 1}, {1, 1}}, {{1, 1}, {0, 
           0}}}; $CellContext`TUmate = \
$CellContext`Cmate[$CellContext`TUmatchMatrix]; $CellContext`TUineqmembers = \
$CellContext`Cineqmembers[$CellContext`TUmate]], "ExpectedOutput" -> 
       HoldForm[Null], "ActualOutput" -> 
       HoldForm[{{{{{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}}}, {{{1, 1, 
          1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}}}}, {{{{2, 1, 1}, {2, 1, 
          2}}}, {{{2, 2, 1}, {2, 2, 2}}}}}], "ExpectedMessages" -> {}, 
       "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
       Quantity[0.000231`2.514126977724138, "Seconds"], "CPUTimeUsed" -> 
       Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[-3616, "Bytes"]]],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.6572968928855963`*^9, {3.6572969546820498`*^9, 3.65729701866429*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["File Sizes", "Subsubsection",
 CellChangeTimes->{{3.6303041623888693`*^9, 3.6303041670138693`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"filelist", ",", "bytes", ",", "l"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"filelist", "=", "notebookslist"}], ";", "\[IndentingNewLine]", 
    RowBox[{"bytes", "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"FileByteCount", "[", 
         RowBox[{"directory", "<>", "#"}], "]"}], "&"}], "/@", "filelist"}], 
      ")"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"l", "=", 
     RowBox[{"Length", "[", "filelist", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"Join", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"\"\<File Name\>\"", ",", "\"\<Bytes\>\""}], "}"}], "}"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"filelist", "[", 
             RowBox[{"[", "#", "]"}], "]"}], ",", 
            RowBox[{"bytes", "[", 
             RowBox[{"[", "#", "]"}], "]"}]}], "}"}], "&"}], "/@", 
         RowBox[{"Range", "[", "l", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"\"\<Total\>\"", ",", 
           RowBox[{"Plus", "@@", "bytes"}]}], "}"}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
      RowBox[{"Frame", "\[Rule]", "All"}], ",", 
      RowBox[{"Alignment", "\[Rule]", "Right"}], ",", 
      RowBox[{"Background", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{"Yellow", ",", "None"}], "}"}]}], "}"}]}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6303041502951193`*^9, 3.630304152435745*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"File Name\"\>", "\<\"Bytes\"\>"},
    {"\<\"import.nb\"\>", "84158"},
    {"\<\"export.nb\"\>", "11368"},
    {"\<\"payoff.nb\"\>", "15490"},
    {"\<\"modifydata.nb\"\>", "95119"},
    {"\<\"matching.nb\"\>", "98786"},
    {"\<\"inequalities.nb\"\>", "49430"},
    {"\<\"dataArray.nb\"\>", "14106"},
    {"\<\"objective.nb\"\>", "24717"},
    {"\<\"PSO.nb\"\>", "45511"},
    {"\<\"maximize.nb\"\>", "2015611"},
    {"\<\"confidence.nb\"\>", "73712"},
    {"\<\"Total\"\>", "2528008"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Right}}},
   GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {
       RGBColor[1, 1, 0], None}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.6303041535763693`*^9, 3.630304609654495*^9, 3.6303055557013693`*^9, 
   3.6572947016680927`*^9, {3.6572968004185333`*^9, 3.657296815068605*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"filelist", ",", "bytes", ",", "l"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"filelist", "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"StringReplacePart", "[", 
         RowBox[{"#", ",", "\"\<m\>\"", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "]"}], "&"}], "/@", 
       "notebookslist"}], ")"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"bytes", "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"FileByteCount", "[", 
         RowBox[{"directory", "<>", "#"}], "]"}], "&"}], "/@", "filelist"}], 
      ")"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"l", "=", 
     RowBox[{"Length", "[", "filelist", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"Join", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"\"\<File Name\>\"", ",", "\"\<Bytes\>\""}], "}"}], "}"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"filelist", "[", 
             RowBox[{"[", "#", "]"}], "]"}], ",", 
            RowBox[{"bytes", "[", 
             RowBox[{"[", "#", "]"}], "]"}]}], "}"}], "&"}], "/@", 
         RowBox[{"Range", "[", "l", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"\"\<Total\>\"", ",", 
           RowBox[{"Plus", "@@", "bytes"}]}], "}"}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
      RowBox[{"Frame", "\[Rule]", "All"}], ",", 
      RowBox[{"Alignment", "\[Rule]", "Right"}], ",", 
      RowBox[{"Background", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{"Yellow", ",", "None"}], "}"}]}], "}"}]}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6303040759513693`*^9, 3.6303041093263693`*^9}, {
  3.630304616873245*^9, 3.6303046193263693`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"File Name\"\>", "\<\"Bytes\"\>"},
    {"\<\"import.m\"\>", "8570"},
    {"\<\"export.m\"\>", "1816"},
    {"\<\"payoff.m\"\>", "3220"},
    {"\<\"modifydata.m\"\>", "3513"},
    {"\<\"matching.m\"\>", "5391"},
    {"\<\"inequalities.m\"\>", "4889"},
    {"\<\"dataArray.m\"\>", "2622"},
    {"\<\"objective.m\"\>", "3336"},
    {"\<\"PSO.m\"\>", "6209"},
    {"\<\"maximize.m\"\>", "4500"},
    {"\<\"confidence.m\"\>", "13237"},
    {"\<\"Total\"\>", "57303"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Right}}},
   GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {
       RGBColor[1, 1, 0], None}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.6303039932638693`*^9, 3.6303040801701193`*^9, 3.630304619998245*^9, 
   3.6303055558888693`*^9, 3.657294701688858*^9, {3.65729680044989*^9, 
   3.657296831630869*^9}}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Profiling Tools", "Section",
 CellChangeTimes->{{3.630302887262945*^9, 3.6303028880207605`*^9}, {
  3.630303071610591*^9, 3.630303073643861*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"clearMemory", ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Unprotect", "[", 
       RowBox[{"In", ",", "Out"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Clear", "[", 
       RowBox[{"In", ",", "Out"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Protect", "[", 
       RowBox[{"In", ",", "Out"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"ClearSystemCache", "[", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Share", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6303015146705484`*^9, 3.630301516438389*^9}, {
  3.6303015663810625`*^9, 3.6303015884897857`*^9}, {3.6303023777294893`*^9, 
  3.6303023886507287`*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"memoryGraph", "=", 
   RowBox[{"DynamicModule", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pm", "=", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"Dynamic", "@", 
      RowBox[{"Refresh", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"pm", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"pm", ",", 
            RowBox[{"MemoryInUse", "[", "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "pm", "]"}], ">", "300"}], ",", 
           RowBox[{"pm", "=", 
            RowBox[{"Drop", "[", 
             RowBox[{"pm", ",", "1"}], "]"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"pm", "/", "1024"}], "/", "1024"}], ",", 
           RowBox[{"AxesLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<Time [s]\>\"", ",", "\"\<Memory [MB]\>\""}], 
             "}"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0", ",", "All"}], "}"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], ",", 
        RowBox[{"UpdateInterval", "\[Rule]", "1"}], ",", 
        RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
         RowBox[{"{", "}"}]}]}], "]"}]}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.630303091939893*^9, 3.63030313320378*^9}, {
   3.630307614716995*^9, 3.6303076359201193`*^9}, {3.630307738998245*^9, 
   3.630307740373245*^9}, {3.6306744694259043`*^9, 3.630674472722779*^9}, {
   3.6306745478321543`*^9, 3.630674551847779*^9}, {3.630675066410279*^9, 
   3.630675070629029*^9}, {3.630675541066529*^9, 3.6306755525196543`*^9}, {
   3.6307445652237167`*^9, 3.630744570802653*^9}, 3.6307473814413433`*^9},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "$globalProperties", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"$globalProperties", "=", 
    RowBox[{"{", 
     RowBox[{
     "OwnValues", ",", "DownValues", ",", "SubValues", ",", "UpValues", ",", 
      "NValues", ",", "FormatValues", ",", "Options", ",", "DefaultValues", 
      ",", "Attributes", ",", "Messages"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", "getDefinitions", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"getDefinitions", ",", "HoldAllComplete"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getDefinitions", "[", "s_Symbol", "]"}], ":=", 
    RowBox[{"Flatten", "@", 
     RowBox[{"Through", "[", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{"prop", ",", 
           RowBox[{"Function", "[", 
            RowBox[{"sym", ",", 
             RowBox[{"prop", "[", "sym", "]"}], ",", "HoldAll"}], "]"}]}], 
          "]"}], ",", "$globalProperties"}], "]"}], "[", 
       RowBox[{"Unevaluated", "[", "s", "]"}], "]"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", "symbolMemoryUsage", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"symbolMemoryUsage", "[", "sname_String", "]"}], ":=", 
    RowBox[{"ToExpression", "[", 
     RowBox[{"sname", ",", "InputForm", ",", 
      RowBox[{"Function", "[", 
       RowBox[{"s", ",", 
        RowBox[{"ByteCount", "[", 
         RowBox[{"getDefinitions", "[", "s", "]"}], "]"}], ",", 
        "HoldAllComplete"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", "heavySymbols", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"heavySymbols", "[", 
    RowBox[{"context_", ",", 
     RowBox[{"sizeLim_:", " ", 
      RowBox[{"10", "^", "6"}]}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Pick", "[", 
      RowBox[{"#", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"UnitStep", "[", 
          RowBox[{"#", "-", "sizeLim"}], "]"}], "&"}], "@", 
        RowBox[{"Map", "[", 
         RowBox[{"symbolMemoryUsage", ",", "#"}], "]"}]}], ",", "1"}], "]"}], 
     "&"}], "@", 
    RowBox[{"Names", "[", 
     RowBox[{"context", "<>", "\"\<*\>\""}], "]"}]}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6303033134612865`*^9, 3.630303337907171*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell["http://stackoverflow.com/a/7088467/2468683", "Text",
 CellChangeTimes->{3.6267492216387043`*^9}],

Cell[TextData[StyleBox["CHECK THIS ALSO : \
http://stackoverflow.com/a/5017071/2468683",
 Background->RGBColor[1, 1, 0]]], "Text",
 CellChangeTimes->{{3.626749982096613*^9, 3.6267499917831364`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "myByteCount", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"myByteCount", "[", "symbolName_String", "]"}], ":=", 
   RowBox[{"Replace", "[", 
    RowBox[{
     RowBox[{"ToHeldExpression", "[", "symbolName", "]"}], ",", 
     RowBox[{
      RowBox[{"Hold", "[", "x__", "]"}], "\[RuleDelayed]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"Attributes", "[", "x", "]"}], ",", 
          RowBox[{"Protected", "|", "ReadProtected"}]}], "]"}], ",", 
        RowBox[{"Sequence", "@@", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ByteCount", "[", 
           RowBox[{"Through", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "OwnValues", ",", "DownValues", ",", "UpValues", ",", 
               "SubValues", ",", "DefaultValues", ",", "FormatValues", ",", 
               "NValues"}], "}"}], "[", 
             RowBox[{
              RowBox[{"Unevaluated", "@", "x"}], ",", 
              RowBox[{"Sort", "\[Rule]", "False"}]}], "]"}], "]"}], "]"}], 
          ",", "symbolName"}], "}"}]}], "]"}]}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6267492083994465`*^9, 3.6267492486582355`*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "memory", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"memory", "[", 
   RowBox[{"n_:", "20"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"listing", "=", 
      RowBox[{"myByteCount", "/@", 
       RowBox[{"Names", "[", "]"}]}]}], "}"}], ",", 
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"Reverse", "@", 
         RowBox[{"Take", "[", 
          RowBox[{
           RowBox[{"Sort", "[", "listing", "]"}], ",", 
           RowBox[{"-", "n"}]}], "]"}]}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}], ",", 
      RowBox[{"Column", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<ByteCount for symbols without attributes Protected and \
ReadProtected in all contexts\>\"", ",", "16", ",", 
            RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}]}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Row", "@", 
             RowBox[{"{", 
              RowBox[{"\"\<Total: \>\"", ",", 
               RowBox[{"Total", "[", 
                RowBox[{"listing", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", 
               "\"\< bytes for \>\"", ",", 
               RowBox[{"Length", "[", "listing", "]"}], ",", 
               "\"\< symbols\>\""}], "}"}]}], ",", "Bold"}], "]"}]}], "}"}], 
        ",", "Center", ",", "1.5"}], "]"}], ",", "Top"}], "]"}]}], 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6267492668211555`*^9, 3.6267492668233037`*^9}, {
  3.626749802548315*^9, 3.6267498099940605`*^9}, {3.6267500178163395`*^9, 
  3.626750047663767*^9}},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Profiling", "Section",
 CellChangeTimes->{{3.6303032286937523`*^9, 3.6303032307945395`*^9}, {
  3.630303261205505*^9, 3.63030327161974*^9}, {3.630304915904495*^9, 
  3.630304917591995*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"clearMemory", ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"MaxMemoryUsed", "[", "]"}], ",", 
   RowBox[{"MemoryInUse", "[", "]"}], ",", "1"}], "}"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.630056021042386*^9, 3.6300560240446587`*^9}, {
  3.630056059723995*^9, 3.6300560655661116`*^9}, {3.6303008396612225`*^9, 
  3.6303008444976263`*^9}, {3.6303015294445252`*^9, 3.630301556460724*^9}, {
  3.630301633313238*^9, 3.6303016333906536`*^9}, {3.6425743797100973`*^9, 
  3.642574386059437*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"143240616", ",", "116963768", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.6300560625456057`*^9, 3.6300560662403316`*^9}, 
   3.6301491156441593`*^9, 3.630232218958432*^9, 3.6302322865558558`*^9, 
   3.6303003934846325`*^9, 3.630300439517514*^9, 3.630300519105129*^9, 
   3.6303007435928307`*^9, {3.630300845155033*^9, 3.6303008807688923`*^9}, 
   3.6303009225896826`*^9, 3.630301280192438*^9, {3.630301380168746*^9, 
   3.630301408618872*^9}, {3.630301619457239*^9, 3.630301645894122*^9}, 
   3.6303021467204123`*^9, 3.630302289514037*^9, 3.630302391078882*^9, 
   3.6303032032741127`*^9, 3.6303034122254333`*^9, 3.630303959373245*^9, 
   3.6303043577951193`*^9, 3.6303051797326193`*^9, 3.630305265373245*^9, 
   3.6303053073576193`*^9, 3.6303054083888693`*^9, 3.6303054421076193`*^9, {
   3.630305551091995*^9, 3.630305556404495*^9}, 3.630307839091995*^9, 
   3.630577331624513*^9, 3.6385982368678455`*^9, 3.6425744946936293`*^9, 
   3.65729467248221*^9, 3.687963013957589*^9, 3.687963119818549*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"memory", "[", "]"}]], "Input",
 CellChangeTimes->{{3.630304880529495*^9, 3.630304885123245*^9}}],

Cell[BoxData[
 TemplateBox[{TagBox[
    GridBox[{{
      "16242088", "\"CalculateUnits`UnitCommonSymbols`UnitLookup\""}, {
      "10806480", "\"payoffMatrix\""}, {
      "7740312", "\"QuantityUnits`Private`PrimaryDestinationLookup\""}, {
      "6151256", "\"ineqmembers\""}, {"5806480", "\"distanceMatrices\""}, {
      "2887088", "\"CalculateScan`UnitScanner`Private`SIFilter\""}, {
      "1812896", "\"QuantityUnits`Private`QuantityVariableLookup\""}, {
      "1773128", "\"CalculateScan`UnitScanner`Private`MKSALI2\""}, {
      "1693416", "\"System`PlotThemeDump`resolvePlotTheme\""}, {
      "1563584", "\"CalculateUnits`UnitTable`CUF1\""}, {
      "1525384", "\"CalculateScan`UnitScanner`Private`MKSALI0\""}, {
      "1514544", "\"CalculateUnits`UnitTable`Private`FromFraction\""}, {
      "1472536", "\"CalculateUnits`UnitTable`Private`ToNamedUnitRules\""}, {
      "1306480", "\"matchMatrix\""}, {
      "1302232", "\"CalculateUnits`UnitTable`CUF0\""}, {
      "1151032", 
       "\"PacletManager`LayoutDocsCollection`Private`$layoutDocsCollection\""}\
, {"1070160", "\"CalculateUnits`UnitTable`Private`unnamedRules\""}, {
      "1068920", "\"CalculateUnits`UnitTable`Private`allprefixrules\""}, {
      "1035592", "\"CalculateUnits`UnitTable`Private`uncompound\""}, {
      "1002792", "\"DataPaclets`CalendarDataDump`EarthVSOPD\""}}, 
     GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
     GridBoxFrame -> {"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}}, 
     GridBoxItemSize -> {
      "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],TagBox[
    GridBox[{{
       StyleBox[
       "\"ByteCount for symbols without attributes Protected and \
ReadProtected in all contexts\"", 16, FontFamily -> "Times", StripOnInput -> 
        False]}, {
       StyleBox[
        TemplateBox[{
         "\"Total: \"", "113419548", "\" bytes for \"", "27997", 
          "\" symbols\""}, "RowDefault"], Bold, StripOnInput -> False]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
     "Column", 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.5}}}], 
    "Column"]},
  "Labeled",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {2, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2, ",", "Top"}], "]"}]& )]], "Output",
 CellChangeTimes->{3.630304887373245*^9, 3.6303055575451193`*^9, 
  3.630307855279495*^9, 3.630576839066324*^9, 3.630576912503913*^9, 
  3.630577014000422*^9, 3.6305770522914376`*^9, 3.6305773373764668`*^9, 
  3.6305775182636003`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Stack", "[", "]"}]], "Input",
 CellChangeTimes->{{3.630301855766635*^9, 3.6303018582549305`*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.6303018593862195`*^9, 3.6303023646289735`*^9, 
  3.630305557841995*^9, 3.630308091310745*^9, 3.6305768521756563`*^9, 
  3.6305769180390697`*^9, 3.6305770152387033`*^9, 3.630577102400257*^9, 
  3.630577366728029*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"(*", 
    RowBox[{"Tracking", " ", 
     RowBox[{"Leaks", "!"}]}], "*)"}],
   Background->RGBColor[1, 1, 0]], "\[IndentingNewLine]", 
  RowBox[{"heavySymbols", "[", "\"\<Global`\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.6303047042326193`*^9, 3.6303047077638693`*^9}}],

Cell[" {1, 12, 18}", "Print",
 CellChangeTimes->{3.630577369477052*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"distanceMatrices\"\>", ",", "\<\"ineqmembers\"\>", 
   ",", "\<\"matchMatrix\"\>", ",", "\<\"payoffMatrix\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6303024972861643`*^9, 3.630302536372999*^9, {3.6303025922744884`*^9, 
   3.6303026353392406`*^9}, 3.630303066635459*^9, {3.630303414910261*^9, 
   3.63030342020172*^9}, 3.630305558091995*^9, 3.6303079104826193`*^9, 
   3.630576856702155*^9, 3.630576922086921*^9, 3.6305770177152653`*^9, 
   3.630577104721681*^9, 3.630577369537599*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ByteCount", "[", 
    RowBox[{"ToExpression", "@", "#"}], "]"}], "&"}], "/@", "%"}]], "Input",
 CellChangeTimes->{{3.6303025975282955`*^9, 3.630302632677788*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5806128", ",", "6150904", ",", "1306128", ",", "10806128"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6303026048947144`*^9, 3.6303026360180006`*^9}, 
   3.630303426627572*^9, 3.6303055581388693`*^9, 3.630577018967219*^9, 
   3.6305771167625556`*^9, 3.630577378046388*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Names", "[", 
   RowBox[{"$Context", "<>", "\"\<*\>\""}], "]"}], "==", 
  RowBox[{"Names", "[", "\"\<Global`*\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.6267514101884656`*^9, 3.6267514101884656`*^9}, {
  3.6267515580245943`*^9, 3.626751560730649*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.6267515346543283`*^9, 3.6267515616847506`*^9}, 
   3.630305558185745*^9, 3.6305770208275704`*^9, 3.630577131923689*^9, 
   3.630577379166505*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{"Names", "[", "\"\<Global`*\>\"", "]"}], "\[Rule]", 
    RowBox[{"ByteCount", "/@", 
     RowBox[{"ToExpression", "[", 
      RowBox[{"Names", "[", "\"\<Global`*\>\"", "]"}], "]"}]}]}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "2"}], 
   RowBox[{"(*", "All", "*)"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6303019699009323`*^9, 3.6303020935594893`*^9}, {
  3.6303021283368835`*^9, 3.630302129245265*^9}, {3.6303021918810205`*^9, 
  3.630302192925148*^9}, {3.630302243536085*^9, 3.630302321620004*^9}}],

Cell[" {8, 16, 25}", "Print",
 CellChangeTimes->{3.6305773814877944`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "16", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "184904", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "56", ",", "0", ",", "0", ",", "0", ",", "0", ",", "5806128", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "104", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "710376", 
   ",", "0", ",", "0", ",", "0", ",", "320", ",", "0", ",", "0", ",", "16", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "6150904",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "136", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "1306128", ",", "0", ",", "83360", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "1320", ",", "648", ",", "32", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "24664", ",", "0", ",", "0", ",", "16", ",",
    "0", ",", "528", ",", "0", ",", "16", ",", "0", ",", "504", ",", "528", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "16", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "10806128", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "4448", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "128", ",", "0", ",", "0", ",", "0", ",", "0", ",", "72", ",", 
   "3840", ",", "16", ",", "0", ",", "0", ",", "0", ",", "0", ",", "104", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "72"}], "}"}]], "Output",
 CellChangeTimes->{{3.6303020646844697`*^9, 3.6303020939951744`*^9}, {
   3.630302129957995*^9, 3.630302146804961*^9}, {3.6303021789899282`*^9, 
   3.6303022037800145`*^9}, {3.6303022757498894`*^9, 3.630302322289385*^9}, 
   3.630302504094198*^9, 3.6303034298794346`*^9, 3.6303055584201193`*^9, 
   3.6303079217951193`*^9, 3.6305770234301095`*^9, 3.630577134126814*^9, 
   3.6305773815473647`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Names", "[", "\"\<@$@\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6303024278795156`*^9, 3.630302433637021*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"extractmatrix$1090\"\>", ",", "\<\"join$1091\"\>", 
   ",", "\<\"neighbours$1428\"\>", ",", "\<\"neighbours$1535\"\>", 
   ",", "\<\"neighbours$1639\"\>", ",", "\<\"neighbours$1743\"\>", 
   ",", "\<\"neighbours$1847\"\>", ",", "\<\"neighbours$1951\"\>", 
   ",", "\<\"neighbours$2055\"\>", ",", "\<\"neighbours$2159\"\>", 
   ",", "\<\"neighbours$2263\"\>", ",", "\<\"neighbours$2367\"\>", 
   ",", "\<\"neighbours$2471\"\>", ",", "\<\"neighbours$2575\"\>", 
   ",", "\<\"neighbours$2679\"\>", ",", "\<\"neighbours$2783\"\>", 
   ",", "\<\"neighbours$2887\"\>", ",", "\<\"neighbours$2991\"\>", 
   ",", "\<\"neighbours$3095\"\>", ",", "\<\"neighbours$3199\"\>", 
   ",", "\<\"neighbours$3303\"\>", ",", "\<\"neighbours$3407\"\>", 
   ",", "\<\"neighbours$3511\"\>", ",", "\<\"neighbours$3615\"\>", 
   ",", "\<\"neighbours$3719\"\>", ",", "\<\"neighbours$3823\"\>", 
   ",", "\<\"neighbours$3927\"\>", ",", "\<\"neighbours$4031\"\>", 
   ",", "\<\"neighbours$4135\"\>", ",", "\<\"neighbours$4260\"\>", 
   ",", "\<\"neighbours$4364\"\>", ",", "\<\"neighbours$4488\"\>", 
   ",", "\<\"neighbours$4612\"\>", ",", "\<\"neighbours$4736\"\>", 
   ",", "\<\"neighbours$4840\"\>", ",", "\<\"neighbours$4944\"\>", 
   ",", "\<\"neighbours$5048\"\>", ",", "\<\"neighbours$5152\"\>", 
   ",", "\<\"neighbours$5256\"\>", ",", "\<\"neighbours$5360\"\>", 
   ",", "\<\"neighbours$5464\"\>", ",", "\<\"neighbours$5568\"\>", 
   ",", "\<\"neighbours$5672\"\>", ",", "\<\"neighbours$5776\"\>", 
   ",", "\<\"neighbours$5880\"\>", ",", "\<\"neighbours$5984\"\>", 
   ",", "\<\"neighbours$6088\"\>", ",", "\<\"neighbours$6192\"\>", 
   ",", "\<\"neighbours$6296\"\>", ",", "\<\"neighbours$6400\"\>", 
   ",", "\<\"neighbours$6504\"\>", ",", "\<\"neighbours$6608\"\>", 
   ",", "\<\"neighbours$6712\"\>", ",", "\<\"pm$$\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.6303024191016474`*^9, 3.630302434085891*^9}, 
   3.6303025867425485`*^9, 3.6303034666701193`*^9, 3.6303049498576193`*^9, 
   3.630305558466995*^9, 3.630577026375422*^9, 3.630577141038923*^9, 
   3.630577385633302*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "neighbours$1428"}]], "Input",
 CellChangeTimes->{{3.630577434265138*^9, 3.6305774402709975`*^9}}],

Cell[CellGroupData[{

Cell["Global`neighbours$1428", "Print", "PrintUsage",
 CellChangeTimes->{3.63057744071631*^9},
 CellTags->"Info3630584640-1266060"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{"Attributes", "[", "neighbours$1428", "]"}], "=", 
      RowBox[{"{", "Temporary", "}"}]}]},
    {" "},
    {GridBox[{
       {
        RowBox[{
         RowBox[{"neighbours$1428", "[", "poss$_", "]"}], ":=", 
         RowBox[{"Transpose", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"RotateLeft", "[", 
              RowBox[{"poss$", ",", "#1"}], "]"}], "&"}], ")"}], "/@", 
           RowBox[{"Range", "[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "]"}]}], "]"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`neighbours$1428],
  Editable->False]], "Print",
 CellChangeTimes->{3.630577440742677*^9},
 CellTags->"Info3630584640-1266060"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "join$1091"}]], "Input",
 CellChangeTimes->{{3.630577450641852*^9, 3.6305774585092926`*^9}}],

Cell[CellGroupData[{

Cell["Global`join$1091", "Print", "PrintUsage",
 CellChangeTimes->{3.6305774597603197`*^9},
 CellTags->"Info3630584659-1266060"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{"Attributes", "[", "join$1091", "]"}], "=", 
      RowBox[{"{", "Temporary", "}"}]}]},
    {" "},
    {GridBox[{
       {
        RowBox[{"join$1091", ":=", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"##1", ",", "2"}], "]"}], "&"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`join$1091],
  Editable->False]], "Print",
 CellChangeTimes->{3.630577459777722*^9},
 CellTags->"Info3630584659-1266060"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "extractmatrix$1090"}]], "Input",
 CellChangeTimes->{{3.6305774668546977`*^9, 3.6305774732374144`*^9}}],

Cell[CellGroupData[{

Cell["Global`extractmatrix$1090", "Print", "PrintUsage",
 CellChangeTimes->{3.630577474461645*^9},
 CellTags->"Info3630584674-1266060"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{"Attributes", "[", "extractmatrix$1090", "]"}], "=", 
      RowBox[{"{", "Temporary", "}"}]}]},
    {" "},
    {GridBox[{
       {
        RowBox[{
         RowBox[{"extractmatrix$1090", "[", 
          RowBox[{"list_", ",", "vars_"}], "]"}], ":=", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", "join", "}"}], ",", 
           RowBox[{
            RowBox[{"join", ":=", 
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{"##1", ",", "2"}], "]"}], "&"}]}], ";", 
            RowBox[{"join", "@@", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"list", "/.", "\[VeryThinSpace]", 
                 RowBox[{"Thread", "[", 
                  RowBox[{"vars", "\[Rule]", 
                   RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"{", 
                    RowBox[{"Length", "[", "vars", "]"}], "}"}]}], "]"}]}], 
                  "]"}]}], "}"}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Coefficient", "[", 
                   RowBox[{"list", ",", "#1"}], "]"}], "&"}], ")"}], "/@", 
                "vars"}]}], "]"}]}]}]}], "]"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`extractmatrix$1090],
  Editable->False]], "Print",
 CellChangeTimes->{3.6305774744825273`*^9},
 CellTags->"Info3630584674-1266060"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "pm$$"}]], "Input",
 CellChangeTimes->{{3.6305774805046363`*^9, 3.630577484723533*^9}}],

Cell["Global`pm$$", "Print", "PrintUsage",
 CellChangeTimes->{3.630577485971592*^9},
 CellTags->"Info3630584685-1266060"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
  "You", " ", "can", " ", "reclaim", " ", "the", " ", "memory", " ", "by", 
   " ", "evaluating", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Remove", "[", "\"\<*`*modelData$*\>\"", "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
   "Remove", "[", "\"\<System`HistogramListDump`modelData$*\>\"", "]"}], " ", 
   RowBox[{"safer", "?"}]}], "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{{3.6267512582963495`*^9, 3.6267512582963495`*^9}, {
  3.626751644322725*^9, 3.6267516481044984`*^9}, {3.626751910215664*^9, 
  3.6267519196887555`*^9}, {3.6267520157557683`*^9, 3.626752017485086*^9}}],

Cell["\<\
Differences between Module, Block and With nicely explained.
http://mathematica.stackexchange.com/a/633/7966\
\>", "Text",
 CellChangeTimes->{{3.6267516083810396`*^9, 3.6267516407622757`*^9}}],

Cell["\<\
x = \[OpenCurlyDoubleQuote]global\[CloseCurlyDoubleQuote]; f[] := x

Module[{x = \[OpenCurlyDoubleQuote]local\[CloseCurlyDoubleQuote]}, {x, f[], \
Hold[x]}]
Block[{x = \[OpenCurlyDoubleQuote]local\[CloseCurlyDoubleQuote]}, {x, f[], \
Hold[x]}]
With[{x = \[OpenCurlyDoubleQuote]local\[CloseCurlyDoubleQuote]}, {x, f[], \
Hold[x]}]

which returns:
  
{\[OpenCurlyDoubleQuote]local\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]global\[CloseCurlyDoubleQuote], Hold[x$123]}        (* \
Module *)
{\[OpenCurlyDoubleQuote]local\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]local\[CloseCurlyDoubleQuote],  Hold[x]}               \
  (* Block *)
{\[OpenCurlyDoubleQuote]local\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]global\[CloseCurlyDoubleQuote], Hold[\
\[OpenCurlyDoubleQuote]local\[CloseCurlyDoubleQuote]]}        (* With *)\
\>", "Text",
 CellChangeTimes->{{3.626751774308022*^9, 3.626751825510888*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Notebook Palette", "Section",
 CellChangeTimes->{{3.6303050753888693`*^9, 3.630305105529495*^9}}],

Cell[TextData[{
 "Multiple notebooks in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ":\n",
 "http://mathematica.stackexchange.com/questions/28226/multiple-notebooks-in-\
mathematica/28229?noredirect=1#comment88697_28229"
}], "Text",
 CellChangeTimes->{{3.5825948318504267`*^9, 3.5825948557467937`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "palette", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"palette", ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"NotebookOpen", "[", 
        RowBox[{
         RowBox[{"directory", "<>", 
          RowBox[{"notebookslist", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ",", 
         RowBox[{"Visible", "\[Rule]", "True"}]}], "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "notebookslist", "]"}]}], "}"}]}], "]"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Without", " ", 
       RowBox[{"Palette", "'"}], "s", " ", "Notebook"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"title", "=", "\"\<Notebook selector\>\""}], "}"}], ",", 
       RowBox[{"CreatePalette", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Row", "[", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Dynamic", "@", 
             RowBox[{"Column", "@", 
              RowBox[{"DeleteCases", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Button", "[", 
                   RowBox[{
                    RowBox[{"\"\<WindowTitle\>\"", "/.", 
                    RowBox[{"NotebookInformation", "@", "#"}]}], ",", 
                    RowBox[{"SetSelectedNotebook", "@", "#"}]}], "]"}], "&"}],
                  "/@", 
                 RowBox[{"Notebooks", "[", "]"}]}], ",", 
                RowBox[{"Button", "[", 
                 RowBox[{"title", ",", "_"}], "]"}]}], "]"}]}]}], ",", 
            "\[IndentingNewLine]", "memoryGraph"}], "\[IndentingNewLine]", 
           "}"}], "]"}], "\[IndentingNewLine]", ",", 
         RowBox[{"WindowTitle", "\[Rule]", "title"}]}], "]"}]}], "]"}]}], 
    ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.5825947421562967`*^9, 3.582594742162297*^9}, {
  3.5825948614131174`*^9, 3.5825948767089925`*^9}, {3.630306985560745*^9, 
  3.6303070231076193`*^9}, {3.6303070690138693`*^9, 3.630307147279495*^9}, {
  3.630307239341995*^9, 3.630307307623245*^9}, {3.630307658185745*^9, 
  3.630307682435745*^9}, {3.630307990998245*^9, 3.630308053841995*^9}}],

Cell[CellGroupData[{

Cell[BoxData["palette"], "Input",
 CellChangeTimes->{{3.630308097560745*^9, 3.6303080989201193`*^9}}],

Cell[BoxData[
 TemplateBox[{FrontEndObject[
    LinkObject["ekynq_shm", 3, 1]],153,
   "FrontEndObject[LinkObject[\"ekynq_shm\", 3, 1]]","153",
   "\"Notebook selector\""},
  "NotebookObjectUnsaved"]], "Output",
 CellChangeTimes->{3.6303081021076193`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["MSE Help catalog", "Subchapter",
 CellChangeTimes->{{3.626750729142158*^9, 3.626750736795643*^9}}],

Cell[CellGroupData[{

Cell["import.m", "Subsubsection",
 CellChangeTimes->{{3.6263399973647165`*^9, 3.6263399987865915`*^9}, {
  3.6263446785157623`*^9, 3.6263446841095123`*^9}, {3.6263455192188873`*^9, 
  3.6263455303126373`*^9}, {3.6385982564615955`*^9, 3.6385982586803455`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Information", "[", 
     RowBox[{"#", ",", 
      RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{
    "readHeader", ",", "readYourCSV", ",", "importCSV", ",", "readTable", ",",
      "importDoubleCSV", ",", "import"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6263454851876373`*^9, 3.6263454971407623`*^9}, {
   3.630058293868199*^9, 3.630058320805699*^9}, {3.6327136496510983`*^9, 
   3.6327136538528056`*^9}, {3.6327158247037554`*^9, 3.632715830530904*^9}, 
   3.687963077355504*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"readHeader[file] opens the file and reads the first line. A \
list of string records is returned.\\nIt is assumed that the file containes \
only test and the first line involves tabs or commas to separate records\"\>",
   "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.687963133946168*^9},
 CellTags->"Info473687970333-2892810"],

Cell[BoxData[
 StyleBox["\<\"readYourCSV[file,n] opens and reads a CSV or TSV file assuming \
that the number of columns equals n. Remark: All fields must be numeric - the \
header must be manually removed afterwards or translated to String with the \
ToString command\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.687963134121447*^9},
 CellTags->"Info473687970333-2892810"],

Cell[BoxData[
 StyleBox["\<\"importCSV[file] opens and reads a CSV or TSV file assuming \
that each row contains the same number of records. Remark: All fields must be \
numeric - the header must be manually removed afterwards or translated to \
String with the ToString command\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6879631342363234`*^9},
 CellTags->"Info473687970334-2892810"],

Cell[BoxData[
 StyleBox["\<\"readTable[file] open and reads tabular data in a memory \
efficient way\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.68796313433989*^9},
 CellTags->"Info473687970334-2892810"],

Cell[BoxData[
 StyleBox["\<\"importDoubleCSV[file] is a Java-based solution for efficient \
importing, pretty fast but valid only when all your columns are numerical \
(double) values. Note that Java parsing code adopts a convention to replace \
all non-parsable strings with zeros. It is possible to improve on this, by \
returning also the positions of non-parsable strings, separately. Note also \
that the UTF-8 encoding is implicitly assumed\"\>", "MSG"]], "Print", \
"PrintUsage",
 CellChangeTimes->{3.6879631344453707`*^9},
 CellTags->"Info473687970334-2892810"],

Cell[BoxData[
 StyleBox["\<\"{noM,no,u,noAttr}=import[filename,\\\"stream\\\"] to load an \
upstream. \\n{noM,no,d,noAttr}=import[filename,\\\"stream\\\"] to load a \
downstream. \\nimports a file .xls or .xlsx or a tab delimited file .dat that \
includes data corresponding to an upstream (u) or downstream (d). \
\\nDatafiles consist of rows in the form \
{noM,no,attr1,attr2,...,attrn,noAttr}. \\nIn the case of .xls or .xlsx files \
multiple sheets are joined - for example if each market resides in its own \
excel sheet. \
\\n___________________________________________________________________________\
_______________________ \
\\n{header,noM,noU,noD,noAttr,distanceMatrices,matchMatrix,mate}=import[\
filename_,\\\"precomp\\\",printflag_:False] \\nimports a file .xls or .xlsx \
or a tab delimited file .dat that includes precomputed matched data \
(distances between same attributes are already computed). \\nDatafiles \
consists of rows in the form {m,u,d,u1,d1,u2,d2,...,un,dn,matched (0 or 1)}. \
\\nIn the case of .xls or .xlsx files multiple sheets are joined - for \
example if each market resides in its own excel sheet. \"\>", "MSG"]], "Print",\
 "PrintUsage",
 CellChangeTimes->{3.687963134551483*^9},
 CellTags->"Info473687970334-2892810"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["export.m", "Subsubsection",
 CellChangeTimes->{{3.6263399973647165`*^9, 3.6263399987865915`*^9}, {
  3.6263446785157623`*^9, 3.6263446841095123`*^9}, {3.6263455192188873`*^9, 
  3.6263455303126373`*^9}, {3.6385982564615955`*^9, 3.6385982586803455`*^9}, {
  3.68796294995008*^9, 3.687962951185492*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Information", "[", 
     RowBox[{"#", ",", 
      RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}], "&"}], "/@", 
   RowBox[{"{", "writeYourTSV", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6263454851876373`*^9, 3.6263454971407623`*^9}, {
  3.630058293868199*^9, 3.630058320805699*^9}, {3.6327136496510983`*^9, 
  3.6327136538528056`*^9}, {3.6327158247037554`*^9, 3.632715830530904*^9}, {
  3.687962976975609*^9, 3.6879629928773603`*^9}}],

Cell[CellGroupData[{

Cell["Global`writeYourTSV", "Print", "PrintUsage",
 CellChangeTimes->{3.687963138737048*^9},
 CellTags->"Info483687970338-2892810"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{
         RowBox[{"writeYourTSV", "[", 
          RowBox[{"file_String", ",", 
           RowBox[{"list_List", "?", "MatrixQ"}]}], "]"}], ":=", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"str", "=", 
              RowBox[{"OpenWrite", "[", 
               RowBox[{"file", ",", 
                RowBox[{"PageWidth", "\[Rule]", "\[Infinity]"}]}], "]"}]}], 
             ",", 
             RowBox[{"len", "=", 
              RowBox[{"Length", "[", 
               RowBox[{
               "list", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                "]"}]}]}], "}"}], ",", 
           RowBox[{
            RowBox[{"Scan", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Write", "[", 
                RowBox[{"str", ",", 
                 RowBox[{"Sequence", "@@", 
                  RowBox[{"Join", "[", 
                   RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"\<\"OutputForm\"\>", "[", "\<\"\\t\"\>", "]"}]}],
                     "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"len", "-", "1"}]}], "}"}]}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "#1", "\[LeftDoubleBracket]", "len", 
                    "\[RightDoubleBracket]"}], "}"}]}], "]"}]}]}], "]"}], 
               "&"}], ",", "list"}], "]"}], ";", 
            RowBox[{"Close", "[", "str", "]"}], ";"}]}], "]"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`writeYourTSV],
  Editable->False]], "Print",
 CellChangeTimes->{3.687963138783916*^9},
 CellTags->"Info483687970338-2892810"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["payoff.m", "Subsubsection",
 CellChangeTimes->{{3.6263455153907623`*^9, 3.6263455332813873`*^9}, {
  3.6327398536631265`*^9, 3.632739855775431*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Information", "[", 
     RowBox[{"#", ",", 
      RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{
    "Cx", ",", "payoff", ",", "payoffDM", ",", "CpayoffMatrix", ",", 
     "Ctotalpayoff"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6263455440470123`*^9, 3.6263455810157623`*^9}, {
  3.6329334546220965`*^9, 3.63293346034941*^9}, {3.6385982128834705`*^9, 
  3.6385982130865955`*^9}, {3.657294661024534*^9, 3.6572946613940268`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"Cx[n] creates a list of n variables named x1,x2,...,xn.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.687963185829968*^9},
 CellTags->"Info493687970385-2892810"],

Cell[BoxData[
 StyleBox["\<\"payoff[m,i,j] returns the payoff of i-upstream and j-upstream \
in the m-market. \\nIt is used in the case of importing streams (not \
precomputed). It is assumed that u , d , and noAttr have been already \
assigned.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.687963185920019*^9},
 CellTags->"Info493687970385-2892810"],

Cell[BoxData[
 StyleBox["\<\"payoffDM[m,i,j] returns the payoff of i-upstream and \
j-upstream in the m-market. \\nIt is used in the case of precomputed data. It \
is assumed that noAttr and distanceMatrices have been already assigned.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.687963186024823*^9},
 CellTags->"Info493687970385-2892810"],

Cell[BoxData[
 StyleBox["\<\"CpayoffMatrix[payoff(or \
payoffDM),noM_,noU_:noU,noD_:noD,parallel_:False] calculates and assigns the \
payoffMatrix.  \\nIn case of separated streams payoff is used and in the case \
of precomputed data payoffDM is used. \\n\\nCpayoffMatrix[solution_] \
substitutes the solution to all payoffMatrix's entries.\\n\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.687963186129279*^9},
 CellTags->"Info493687970386-2892810"],

Cell[BoxData[
 StyleBox["\<\"Ctotalpayoff[payoffobject,mates] calculates the total payoff \
that a specific match defined by mates returns.\\nIf the payoffobject is the \
payoff function then the head equals Symbol and the corresponding routine is \
used.\\nIf the payoffobject is the payoffMatrix then the head equals List and \
the corresponding routine is used.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.68796318623969*^9},
 CellTags->"Info493687970386-2892810"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["modifydata.m", "Subsubsection",
 CellChangeTimes->{{3.6263455153907623`*^9, 3.6263455332813873`*^9}, {
  3.6327398536631265`*^9, 3.632739855775431*^9}, {3.639207444412646*^9, 
  3.639207447999198*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Information", "[", 
     RowBox[{"#", ",", 
      RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{
    "store", ",", "restore", ",", "removeU", ",", "removeD", ",", "removeUD", 
     ",", "payoffMatrix2Positive"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6263455440470123`*^9, 3.6263455810157623`*^9}, {
   3.6329334546220965`*^9, 3.63293346034941*^9}, {3.6385982691803455`*^9, 
   3.6385982739459705`*^9}, 3.6385983155240955`*^9, {3.6392074657610393`*^9, 
   3.6392074698322167`*^9}, {3.6392251222989073`*^9, 3.6392251265957823`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"store[] is used for storing the lists payoffMatrix and \
matchMatrix before they are modified. In that case they can restored later \
(with the restore[] command).\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6879631940238333`*^9},
 CellTags->"Info503687970393-2892810"],

Cell[BoxData[
 StyleBox["\<\"restore[] is used to restore the lists payoffMatrix and \
matchMatrix mate to their original (when the last store[] command was used)\"\
\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.687963194116276*^9},
 CellTags->"Info503687970394-2892810"],

Cell[BoxData[
 StyleBox["\<\"removeU[m_,u_List,match_:False] removes from the \
payoffMatrix's market m the upstreams that are included in the list u. If the \
match flag is set to True then they are removed also from the matchMatrix. \
This is preferred on the precomputed case where we do not have to change noU \
and noD lists.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.687963194217113*^9},
 CellTags->"Info503687970394-2892810"],

Cell[BoxData[
 StyleBox["\<\"removeD[m_,d_List,match_:False] removes from the \
payoffMatrix's market m the downstreams that are included in the list d. If \
the match flag is set to True then they are removed also from the \
matchMatrix. This is preferred on the precomputed case where we do not have \
to change noU and noD lists.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.687963194320709*^9},
 CellTags->"Info503687970394-2892810"],

Cell[BoxData[
 StyleBox["\<\"removeUD[m_,u_List,d_List,match_:False] combines removeU and \
removeD in one step\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.687963194430661*^9},
 CellTags->"Info503687970394-2892810"],

Cell[BoxData[
 StyleBox["\<\"payoffMatrix2Positive[offset,payoffMatrix,epsilon_:0,\
sameoffset_:False] returns a list of matrices of positive elements. The \
offset variable is set accordingly. If the sameoffset flag is set to True \
then the offset equals the minimum element in the entire payoffMatrix.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.687963194538601*^9},
 CellTags->"Info503687970394-2892810"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["matching.m", "Subsubsection",
 CellChangeTimes->{{3.6263399973647165`*^9, 3.6263399987865915`*^9}, {
  3.6263446785157623`*^9, 3.6263446841095123`*^9}, {3.6263455192188873`*^9, 
  3.6263455303126373`*^9}, {3.6263464008438873`*^9, 3.6263464040313873`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Information", "[", 
     RowBox[{"#", ",", 
      RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{
    "generateAssignmentMatrix", ",", "CmatchMatrix", ",", "Cmates", ",", 
     "Cmate", ",", "quotas"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.6263464174845123`*^9, {3.632738594158817*^9, 3.6327385953404126`*^9}, {
   3.6327388438072643`*^9, 3.6327388473288803`*^9}, {3.6327389544128256`*^9, 
   3.6327389601678934`*^9}, {3.6425742082933493`*^9, 3.6425742101944513`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"generateAssignmentMatrix[payoffs_,quotaU_:1,quotaD_:1,options__\
_?OptionQ] generates the optimal assignment of matches from the given matrix \
of payoffs for each match. In an assignment matrix, each entry (i,j) is 1 if \
i and j are matched and 0 otherwise. The quota can be a number (the same for \
all streams) or a list that sets a specific quota per stream.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.642574540480421*^9},
 CellTags->"Info3642585340-7330477"],

Cell[BoxData[
 StyleBox["\<\"CmatchMatrix[payoffMatrix_,quotaU_:1,quotaD_:1,parallel_:False]\
 creates the matchMatrix by running generateAssignmentMatrix routine for all \
markets. For the moment quota's are fixed numbers the same accross all \
markets.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.642574540557891*^9},
 CellTags->"Info3642585340-7330477"],

Cell[BoxData[
 StyleBox["\<\"Cmates[matchMatrix] simplifies matchMatrix to a list of \
triples that define matches across all markets. Example : \
{{{1,1,3},{1,3,1},{1,3,2}},{{2,1,1},{2,2,1},{2,2,3},{2,3,2}}}.  This is \
mainly used for the calculation of the total payoff - see Ctotalpayoff \
routine.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.642574540624168*^9},
 CellTags->"Info3642585340-7330477"],

Cell[BoxData[
 StyleBox["\<\"Cmate[matchMatrix] simplifies matchMatrix to pairs of lists, \
one pair per market. The first part is the normal numbering and the second is \
the corespondance. Example : \
{{{{1},{2},{3}},{{3},{},{1,2}}},{{{1},{2},{3}},{{1},{1,3},{2}}}}.  This is \
the prevailing way to express mates. This is feeded to the Cineqmembers \
routine.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6425745406897573`*^9},
 CellTags->"Info3642585340-7330477"],

Cell[BoxData[
 StyleBox["\<\"quotas[matchMatrix] returns the list {quotaU,quotaD}. Each \
quota is defined for each stream.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6425745407577057`*^9},
 CellTags->"Info3642585340-7330477"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["inequalities.m", "Subsubsection",
 CellChangeTimes->{{3.6263399973647165`*^9, 3.6263399987865915`*^9}, {
  3.6263446785157623`*^9, 3.6263446841095123`*^9}, {3.6263455192188873`*^9, 
  3.6263455303126373`*^9}, {3.6263464008438873`*^9, 3.6263464040313873`*^9}, {
  3.632739944031017*^9, 3.6327399471273017`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Information", "[", 
     RowBox[{"#", ",", 
      RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"Cineqmembers", ",", "Cinequalities"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.6263464174845123`*^9, {3.632738594158817*^9, 3.6327385953404126`*^9}, {
   3.6327388438072643`*^9, 3.6327388473288803`*^9}, {3.6327389544128256`*^9, 
   3.6327389601678934`*^9}, 3.632739954674167*^9, {3.632739984899753*^9, 
   3.632739986935886*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"Cineqmembers[mate] generates all the members required to form \
the inequalities for many to many relationships defined by the mate. The \
produced list of lists of triples define also the way inequalities are \
formed. At this time there is only one way we have to create inequalities. \
CAUTION: ineqmembers is the largest object so it consumes a lot of memory. \
This is why we use MSEresources=\\\"Memory\\\" when it is needed. Be carefull \
because then ineqmembers are erased after used for the dataArray calculation \
(only in the memorry model).\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6327432703656244`*^9},
 CellTags->"Info3632750470-1900277"],

Cell[BoxData[
 StyleBox["\<\"Cinequalities[f,ineqmembers] apply properly the f function to \
ineqmembers to create inequalities. This routine is called by CdataArray \
internally where as a function it uses payoffMatrix[[##]]&.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.632743270451562*^9},
 CellTags->"Info3632750470-1900277"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["dataArray.m", "Subsubsection",
 CellChangeTimes->{{3.6263399973647165`*^9, 3.6263399987865915`*^9}, {
  3.6263446785157623`*^9, 3.6263446841095123`*^9}, {3.6263455192188873`*^9, 
  3.6263455303126373`*^9}, {3.6263464008438873`*^9, 3.6263464040313873`*^9}, {
  3.632739944031017*^9, 3.6327399471273017`*^9}, {3.6327417143368845`*^9, 
  3.632741715725564*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Information", "[", 
     RowBox[{"#", ",", 
      RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}], "&"}], "/@", 
   RowBox[{"{", "CdataArray", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.6263464174845123`*^9, {3.632738594158817*^9, 3.6327385953404126`*^9}, {
   3.6327388438072643`*^9, 3.6327388473288803`*^9}, {3.6327389544128256`*^9, 
   3.6327389601678934`*^9}, 3.632739954674167*^9, {3.632739984899753*^9, 
   3.632739986935886*^9}, {3.632741720407563*^9, 3.6327417305821953`*^9}}],

Cell[BoxData[
 StyleBox["\<\"CdataArray[payoffMatrix,xlist,printflag] creates the \
dataArray. It works either using the \\\"Speed\\\" model or the \
\\\"Memory\\\" model. It uses ineqmembers and Cinequalities internally and \
for the memory model it erases ineqmembers after use.\"\>", "MSG"]], "Print", \
"PrintUsage",
 CellChangeTimes->{3.6327432732132807`*^9},
 CellTags->"Info3632750473-1900277"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["objective.m", "Subsubsection",
 CellChangeTimes->{{3.6263399973647165`*^9, 3.6263399987865915`*^9}, {
  3.6263446785157623`*^9, 3.6263446841095123`*^9}, {3.6263455192188873`*^9, 
  3.6263455303126373`*^9}, {3.6263464008438873`*^9, 3.6263464040313873`*^9}, {
  3.632739944031017*^9, 3.6327399471273017`*^9}, {3.6327417143368845`*^9, 
  3.632741715725564*^9}, {3.632742125674448*^9, 3.632742130523081*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "coefficient1"}]], "Input",
 CellChangeTimes->{{3.6348077407779307`*^9, 3.6348077466407475`*^9}}],

Cell[BoxData[
 StyleBox["\<\"Set coefficient1=1 (default) or coefficient=-1\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6348077619483976`*^9},
 CellTags->"Info3634814961-3521141"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Information", "[", 
     RowBox[{"#", ",", 
      RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"objective", ",", "objectiveV"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.6263464174845123`*^9, {3.632738594158817*^9, 3.6327385953404126`*^9}, {
   3.6327388438072643`*^9, 3.6327388473288803`*^9}, {3.6327389544128256`*^9, 
   3.6327389601678934`*^9}, 3.632739954674167*^9, {3.632739984899753*^9, 
   3.632739986935886*^9}, {3.632741720407563*^9, 3.6327417305821953`*^9}, {
   3.6327421388746433`*^9, 3.6327421509058933`*^9}, {3.634807522634574*^9, 
   3.6348075239929724`*^9}, 3.634807765549716*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"objective[dataArray,x1,x2,...,xn] defines the objective \
function to minimize, as the number of satisfied inequalities. For a specific \
x-vector value we get a list of numbers. The number of positives is the \
outcome.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6348077658502455`*^9},
 CellTags->"Info3634814965-3521141"],

Cell[BoxData[
 StyleBox["\<\"objectiveV[dataArray,x1,x2,...,xn] is the verbose version of \
objective routine. It also uses groupIDs produced by CdataArray routine. It \
returns more information about how many inequalities are satisfied for each \
market. It is obviously slower than the plain objective and it is used as the \
final step after the maximization process.\"\>", "MSG"]], "Print", \
"PrintUsage",
 CellChangeTimes->{3.634807765912457*^9},
 CellTags->"Info3634814965-3521141"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["maximize.m", "Subsubsection",
 CellChangeTimes->{{3.63273431747729*^9, 3.6327343201374464`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Information", "[", 
     RowBox[{"#", ",", 
      RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"optimize", ",", "maximize"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.632735284147875*^9, 3.6327352880934114`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"optimize[f,x,method] is a wrapper that involves several \
separated optimization methods. f must be defined as a pure function in the \
sense f=func[Sequence@@#]&. x is a list of uknowns {x1,x2,...,xn}. \
Implemented methods for now include Mathematica's DifferentialEvolution, \
SimulatedAnnealing, RandomSearch, NelderMead. ParticleSwarmOptimization is an \
external method (PSO).\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.632743278913476*^9},
 CellTags->"Info3632750478-1900277"],

Cell[BoxData[
 StyleBox["\<\"maximize[dataArray_,noAttr_,method_:\\\"DifferentialEvolution\\\
\",permuteinvariant_:False,printflag_:False] is MSE specific and uses the \
optimize method. It uses objective function (that counts the number of \
satisfied inequalities).\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6327432789974604`*^9},
 CellTags->"Info3632750478-1900277"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["confidence.m", "Subsubsection",
 CellChangeTimes->{{3.63273431747729*^9, 3.6327343201374464`*^9}, {
  3.6327432907446365`*^9, 3.6327432938469267`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Information", "[", 
     RowBox[{"#", ",", 
      RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"generateRandomSubsample", ",", "pointIdentifiedCR"}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.632735284147875*^9, 3.6327352880934114`*^9}, {
  3.6327433024987617`*^9, 3.63274331333218*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"generateRandomSubsample[ssSize,groupIDs,dataArray] generates a \
subsample of a given size from a data array.\"\>", "MSG"]], "Print", \
"PrintUsage",
 CellChangeTimes->{3.6327450722237415`*^9},
 CellTags->"Info3632752272-6621207"],

Cell[BoxData[
 StyleBox["\<\"pointIdentifiedCR[ssSize,numSubsamples,pointEstimate,args,\
groupIDs,dataArray,method,permuteinvariant,options] generates a confidence \
region estimate using subsampling.
\\nParameters:\\nssSize - The size of each subsample to be \
estimated.\\nnumSubsamples -The number of subsamples to use in estimating the \
confidence region.\\npointEstimate - The point estimate to build the \
confidence region around (typically the output of pairwiseMSE).\\nobjFunc - \
The objective function used in pairwiseMSE.\\nargs - A list of unique symbols \
used in pairwiseMSE.\\ngroupIDs - A data map used to generate the subsamples.\
\\ndataArray - The dataArray parameter used in pairwiseMSE.\\noptions - An \
optional parameter specifying options. Available options are:\\n\t\
progressUpdate - How often to print progress (0 to disable).Default=0. \\n\t\
confidenceLevel - The confidence level of the region.Default=.95.\\n\t\
asymptotics - Type of asymptotics to use (nests or coalitions).Default=nests.\
\\n\tsubsampleMonitor - An expression to evaluate for each \
subsample.Default=Null.\\n\tsymmetric - True or False.If True,the confidence \
region will be symmetric.Default=False.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6327450723205996`*^9},
 CellTags->"Info3632752272-6621207"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{1366, 729},
WindowMargins->{{Automatic, 135}, {Automatic, 73}},
ShowSelection->True,
Magnification->1.25,
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3630584640-1266060"->{
  Cell[247850, 4971, 131, 2, 52, "Print",
   CellTags->"Info3630584640-1266060"],
  Cell[247984, 4975, 1275, 36, 72, "Print",
   CellTags->"Info3630584640-1266060"]},
 "Info3630584659-1266060"->{
  Cell[249454, 5023, 128, 2, 52, "Print",
   CellTags->"Info3630584659-1266060"],
  Cell[249585, 5027, 989, 29, 72, "Print",
   CellTags->"Info3630584659-1266060"]},
 "Info3630584674-1266060"->{
  Cell[250780, 5068, 135, 2, 52, "Print",
   CellTags->"Info3630584674-1266060"],
  Cell[250918, 5072, 2015, 54, 101, "Print",
   CellTags->"Info3630584674-1266060"]},
 "Info3630584685-1266060"->{
  Cell[253101, 5136, 121, 2, 52, "Print",
   CellTags->"Info3630584685-1266060"]},
 "Info473687970333-2892810"->{
  Cell[259398, 5306, 363, 6, 73, "Print",
   CellTags->"Info473687970333-2892810"],
  Cell[259764, 5314, 387, 6, 73, "Print",
   CellTags->"Info473687970333-2892810"]},
 "Info473687970334-2892810"->{
  Cell[260154, 5322, 399, 6, 73, "Print",
   CellTags->"Info473687970334-2892810"],
  Cell[260556, 5330, 218, 4, 50, "Print",
   CellTags->"Info473687970334-2892810"],
  Cell[260777, 5336, 569, 9, 96, "Print",
   CellTags->"Info473687970334-2892810"],
  Cell[261349, 5347, 1258, 20, 256, "Print",
   CellTags->"Info473687970334-2892810"]},
 "Info483687970338-2892810"->{
  Cell[263528, 5397, 131, 2, 52, "Print",
   CellTags->"Info483687970338-2892810"],
  Cell[263662, 5401, 2582, 66, 81, "Print",
   CellTags->"Info483687970338-2892810"]},
 "Info493687970385-2892810"->{
  Cell[267053, 5497, 206, 4, 50, "Print",
   CellTags->"Info493687970385-2892810"],
  Cell[267262, 5503, 364, 6, 74, "Print",
   CellTags->"Info493687970385-2892810"],
  Cell[267629, 5511, 357, 6, 73, "Print",
   CellTags->"Info493687970385-2892810"]},
 "Info493687970386-2892810"->{
  Cell[267989, 5519, 465, 8, 140, "Print",
   CellTags->"Info493687970386-2892810"],
  Cell[268457, 5529, 482, 7, 95, "Print",
   CellTags->"Info493687970386-2892810"]},
 "Info503687970393-2892810"->{
  Cell[269906, 5568, 313, 5, 52, "Print",
   CellTags->"Info503687970393-2892810"]},
 "Info503687970394-2892810"->{
  Cell[270222, 5575, 283, 5, 52, "Print",
   CellTags->"Info503687970394-2892810"],
  Cell[270508, 5582, 449, 7, 73, "Print",
   CellTags->"Info503687970394-2892810"],
  Cell[270960, 5591, 451, 7, 73, "Print",
   CellTags->"Info503687970394-2892810"],
  Cell[271414, 5600, 230, 4, 50, "Print",
   CellTags->"Info503687970394-2892810"],
  Cell[271647, 5606, 426, 7, 73, "Print",
   CellTags->"Info503687970394-2892810"]},
 "Info3642585340-7330477"->{
  Cell[273033, 5645, 512, 8, 143, "Print",
   CellTags->"Info3642585340-7330477"],
  Cell[273548, 5655, 371, 6, 96, "Print",
   CellTags->"Info3642585340-7330477"],
  Cell[273922, 5663, 419, 7, 143, "Print",
   CellTags->"Info3642585340-7330477"],
  Cell[274344, 5672, 481, 8, 143, "Print",
   CellTags->"Info3642585340-7330477"],
  Cell[274828, 5682, 242, 4, 101, "Print",
   CellTags->"Info3642585340-7330477"]},
 "Info3632750470-1900277"->{
  Cell[276041, 5718, 701, 10, 187, "Print",
   CellTags->"Info3632750470-1900277"],
  Cell[276745, 5730, 347, 6, 96, "Print",
   CellTags->"Info3632750470-1900277"]},
 "Info3632750473-1900277"->{
  Cell[278098, 5766, 401, 7, 96, "Print",
   CellTags->"Info3632750473-1900277"]},
 "Info3634814961-3521141"->{
  Cell[279111, 5792, 197, 4, 101, "Print",
   CellTags->"Info3634814961-3521141"]},
 "Info3634814965-3521141"->{
  Cell[280084, 5820, 368, 6, 96, "Print",
   CellTags->"Info3634814965-3521141"],
  Cell[280455, 5828, 489, 8, 141, "Print",
   CellTags->"Info3634814965-3521141"]},
 "Info3632750478-1900277"->{
  Cell[281485, 5861, 528, 8, 145, "Print",
   CellTags->"Info3632750478-1900277"],
  Cell[282016, 5871, 386, 6, 101, "Print",
   CellTags->"Info3632750478-1900277"]},
 "Info3632752272-6621207"->{
  Cell[283075, 5905, 259, 5, 96, "Print",
   CellTags->"Info3632752272-6621207"],
  Cell[283337, 5912, 1322, 19, 706, "Print",
   CellTags->"Info3632752272-6621207"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3630584640-1266060", 285091, 5950},
 {"Info3630584659-1266060", 285287, 5955},
 {"Info3630584674-1266060", 285482, 5960},
 {"Info3630584685-1266060", 285679, 5965},
 {"Info473687970333-2892810", 285793, 5968},
 {"Info473687970334-2892810", 285993, 5973},
 {"Info483687970338-2892810", 286364, 5982},
 {"Info493687970385-2892810", 286566, 5987},
 {"Info493687970386-2892810", 286850, 5994},
 {"Info503687970393-2892810", 287051, 5999},
 {"Info503687970394-2892810", 287167, 6002},
 {"Info3642585340-7330477", 287617, 6013},
 {"Info3632750470-1900277", 288061, 6024},
 {"Info3632750473-1900277", 288257, 6029},
 {"Info3634814961-3521141", 288369, 6032},
 {"Info3634814965-3521141", 288482, 6035},
 {"Info3632750478-1900277", 288677, 6040},
 {"Info3632752272-6621207", 288873, 6045}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 110, 1, 44, "Subsubsection"],
Cell[692, 25, 272, 5, 67, "Text"],
Cell[967, 32, 179, 4, 40, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1183, 41, 97, 1, 81, "Section"],
Cell[1283, 44, 149, 4, 60, "Input"],
Cell[1435, 50, 265, 6, 60, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1725, 60, 410, 9, 60, "Input",
 InitializationCell->True],
Cell[2138, 71, 1474, 22, 40, "Output"]
}, Open  ]],
Cell[3627, 96, 641, 15, 89, "Input",
 InitializationCell->True],
Cell[4271, 113, 451, 11, 89, "Input",
 InitializationCell->True],
Cell[4725, 126, 882, 17, 89, "Input",
 InitializationCell->True],
Cell[5610, 145, 513, 15, 40, "Input"],
Cell[6126, 162, 1576, 29, 89, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[7727, 195, 409, 9, 62, "Input"],
Cell[8139, 206, 144012, 2446, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152188, 2657, 368, 9, 69, "Input"],
Cell[152559, 2668, 64648, 1562, 1437, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[217244, 4235, 105, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[217374, 4240, 1814, 47, 563, "Input"],
Cell[219191, 4289, 1023, 25, 613, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220251, 4319, 2169, 58, 563, "Input"],
Cell[222423, 4379, 1021, 26, 613, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[223505, 4412, 151, 2, 81, "Section"],
Cell[223659, 4416, 879, 20, 229, "Input",
 InitializationCell->True],
Cell[224541, 4438, 1959, 47, 145, "Input",
 InitializationCell->True],
Cell[226503, 4487, 2581, 71, 512, "Input",
 InitializationCell->True],
Cell[229087, 4560, 102, 1, 40, "Text"],
Cell[229192, 4563, 198, 3, 40, "Text"],
Cell[229393, 4568, 1398, 35, 204, "Input",
 InitializationCell->True],
Cell[230794, 4605, 1937, 50, 230, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[232768, 4660, 195, 3, 81, "Section"],
Cell[CellGroupData[{
Cell[232988, 4667, 596, 12, 89, "Input",
 InitializationCell->True],
Cell[233587, 4681, 1048, 15, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234672, 4701, 120, 2, 40, "Input"],
Cell[234795, 4705, 3121, 59, 589, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[237953, 4769, 121, 2, 40, "Input"],
Cell[238077, 4773, 282, 5, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238396, 4783, 320, 8, 69, "Input"],
Cell[238719, 4793, 71, 1, 30, "Print"],
Cell[238793, 4796, 535, 9, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239365, 4810, 209, 5, 40, "Input"],
Cell[239577, 4817, 313, 6, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239927, 4828, 290, 6, 40, "Input"],
Cell[240220, 4836, 199, 3, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240456, 4844, 593, 13, 40, "Input"],
Cell[241052, 4859, 73, 1, 30, "Print"],
Cell[241128, 4862, 4246, 57, 293, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[245411, 4924, 136, 2, 40, "Input"],
Cell[245550, 4928, 2111, 32, 265, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[247698, 4965, 127, 2, 40, "Input"],
Cell[CellGroupData[{
Cell[247850, 4971, 131, 2, 52, "Print",
 CellTags->"Info3630584640-1266060"],
Cell[247984, 4975, 1275, 36, 72, "Print",
 CellTags->"Info3630584640-1266060"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[249308, 5017, 121, 2, 40, "Input"],
Cell[CellGroupData[{
Cell[249454, 5023, 128, 2, 52, "Print",
 CellTags->"Info3630584659-1266060"],
Cell[249585, 5027, 989, 29, 72, "Print",
 CellTags->"Info3630584659-1266060"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[250623, 5062, 132, 2, 40, "Input"],
Cell[CellGroupData[{
Cell[250780, 5068, 135, 2, 52, "Print",
 CellTags->"Info3630584674-1266060"],
Cell[250918, 5072, 2015, 54, 101, "Print",
 CellTags->"Info3630584674-1266060"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[252982, 5132, 116, 2, 40, "Input"],
Cell[253101, 5136, 121, 2, 52, "Print",
 CellTags->"Info3630584685-1266060"]
}, Open  ]],
Cell[253237, 5141, 699, 12, 209, "Input"],
Cell[253939, 5155, 202, 4, 67, "Text"],
Cell[254144, 5161, 928, 22, 308, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255109, 5188, 103, 1, 81, "Section"],
Cell[255215, 5191, 311, 8, 68, "Text"],
Cell[255529, 5201, 2399, 56, 350, "Input"],
Cell[CellGroupData[{
Cell[257953, 5261, 101, 1, 40, "Input"],
Cell[258057, 5264, 255, 6, 51, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[258361, 5276, 104, 1, 80, "Subchapter"],
Cell[CellGroupData[{
Cell[258490, 5281, 259, 3, 44, "Subsubsection"],
Cell[CellGroupData[{
Cell[258774, 5288, 599, 14, 40, "Input"],
Cell[CellGroupData[{
Cell[259398, 5306, 363, 6, 73, "Print",
 CellTags->"Info473687970333-2892810"],
Cell[259764, 5314, 387, 6, 73, "Print",
 CellTags->"Info473687970333-2892810"],
Cell[260154, 5322, 399, 6, 73, "Print",
 CellTags->"Info473687970334-2892810"],
Cell[260556, 5330, 218, 4, 50, "Print",
 CellTags->"Info473687970334-2892810"],
Cell[260777, 5336, 569, 9, 96, "Print",
 CellTags->"Info473687970334-2892810"],
Cell[261349, 5347, 1258, 20, 256, "Print",
 CellTags->"Info473687970334-2892810"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[262668, 5374, 307, 4, 44, "Subsubsection"],
Cell[CellGroupData[{
Cell[263000, 5382, 503, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[263528, 5397, 131, 2, 52, "Print",
 CellTags->"Info483687970338-2892810"],
Cell[263662, 5401, 2582, 66, 81, "Print",
 CellTags->"Info483687970338-2892810"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[266305, 5474, 154, 2, 44, "Subsubsection"],
Cell[CellGroupData[{
Cell[266484, 5480, 544, 13, 40, "Input"],
Cell[CellGroupData[{
Cell[267053, 5497, 206, 4, 50, "Print",
 CellTags->"Info493687970385-2892810"],
Cell[267262, 5503, 364, 6, 74, "Print",
 CellTags->"Info493687970385-2892810"],
Cell[267629, 5511, 357, 6, 73, "Print",
 CellTags->"Info493687970385-2892810"],
Cell[267989, 5519, 465, 8, 140, "Print",
 CellTags->"Info493687970386-2892810"],
Cell[268457, 5529, 482, 7, 95, "Print",
 CellTags->"Info493687970386-2892810"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[269000, 5543, 207, 3, 44, "Subsubsection"],
Cell[CellGroupData[{
Cell[269232, 5550, 649, 14, 40, "Input"],
Cell[CellGroupData[{
Cell[269906, 5568, 313, 5, 52, "Print",
 CellTags->"Info503687970393-2892810"],
Cell[270222, 5575, 283, 5, 52, "Print",
 CellTags->"Info503687970394-2892810"],
Cell[270508, 5582, 449, 7, 73, "Print",
 CellTags->"Info503687970394-2892810"],
Cell[270960, 5591, 451, 7, 73, "Print",
 CellTags->"Info503687970394-2892810"],
Cell[271414, 5600, 230, 4, 50, "Print",
 CellTags->"Info503687970394-2892810"],
Cell[271647, 5606, 426, 7, 73, "Print",
 CellTags->"Info503687970394-2892810"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[272134, 5620, 261, 3, 44, "Subsubsection"],
Cell[CellGroupData[{
Cell[272420, 5627, 588, 14, 72, "Input"],
Cell[CellGroupData[{
Cell[273033, 5645, 512, 8, 143, "Print",
 CellTags->"Info3642585340-7330477"],
Cell[273548, 5655, 371, 6, 96, "Print",
 CellTags->"Info3642585340-7330477"],
Cell[273922, 5663, 419, 7, 143, "Print",
 CellTags->"Info3642585340-7330477"],
Cell[274344, 5672, 481, 8, 143, "Print",
 CellTags->"Info3642585340-7330477"],
Cell[274828, 5682, 242, 4, 101, "Print",
 CellTags->"Info3642585340-7330477"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[275131, 5693, 316, 4, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[275472, 5701, 544, 13, 72, "Input"],
Cell[CellGroupData[{
Cell[276041, 5718, 701, 10, 187, "Print",
 CellTags->"Info3632750470-1900277"],
Cell[276745, 5730, 347, 6, 96, "Print",
 CellTags->"Info3632750470-1900277"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[277153, 5743, 364, 5, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[277542, 5752, 553, 12, 72, "Input"],
Cell[278098, 5766, 401, 7, 96, "Print",
 CellTags->"Info3632750473-1900277"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[278548, 5779, 410, 5, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[278983, 5788, 125, 2, 72, "Input"],
Cell[279111, 5792, 197, 4, 101, "Print",
 CellTags->"Info3634814961-3521141"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279345, 5801, 714, 15, 72, "Input"],
Cell[CellGroupData[{
Cell[280084, 5820, 368, 6, 96, "Print",
 CellTags->"Info3634814965-3521141"],
Cell[280455, 5828, 489, 8, 141, "Print",
 CellTags->"Info3634814965-3521141"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[281005, 5843, 102, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[281132, 5848, 328, 9, 72, "Input"],
Cell[CellGroupData[{
Cell[281485, 5861, 528, 8, 145, "Print",
 CellTags->"Info3632750478-1900277"],
Cell[282016, 5871, 386, 6, 101, "Print",
 CellTags->"Info3632750478-1900277"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[282463, 5884, 157, 2, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[282645, 5890, 405, 11, 72, "Input"],
Cell[CellGroupData[{
Cell[283075, 5905, 259, 5, 96, "Print",
 CellTags->"Info3632752272-6621207"],
Cell[283337, 5912, 1322, 19, 706, "Print",
 CellTags->"Info3632752272-6621207"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

