(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     81527,       2275]
NotebookOptionsPosition[     73125,       1983]
NotebookOutlinePosition[     73697,       2007]
CellTagsIndexPosition[     73611,       2002]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["import.nb", "Section",
 CellChangeTimes->{{3.62600628385137*^9, 3.626006284835745*^9}, {
  3.6260709487170696`*^9, 3.6260709533480415`*^9}, {3.630057085989955*^9, 
  3.6300570872701597`*^9}}],

Cell[CellGroupData[{

Cell["For the Developer", "Subsubsection",
 CellChangeTimes->{{3.5819225877880845`*^9, 3.581922592443351*^9}}],

Cell["\<\
AutoGeneratedPackage is an option for notebooks that specifies whether a \
package is automatically created when a notebook that contains initialization \
cells or groups is saved.\
\>", "Text",
 CellChangeTimes->{{3.5808982533077106`*^9, 3.580898259632072*^9}}],

Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{
   RowBox[{"InputNotebook", "[", "]"}], ",", 
   RowBox[{"AutoGeneratedPackage", "\[Rule]", "Automatic"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$HistoryLength", "=", "0"}], ";"}]], "Input",
 CellChangeTimes->{{3.5816697178146343`*^9, 3.581669717815634*^9}}],

Cell[BoxData[
 RowBox[{"ClearSystemCache", "[", "]"}]], "Input",
 CellChangeTimes->{{3.581669726757145*^9, 3.5816697379287844`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "General import functions : The goal is to eventually substitute ",
 StyleBox["Mathematica\[CloseCurlyQuote]s Import function",
  FontSlant->"Italic"]
}], "Subsection",
 CellChangeTimes->{{3.626595458713975*^9, 3.626595540197707*^9}}],

Cell[CellGroupData[{

Cell["readHeader", "Subsubsection",
 CellChangeTimes->{{3.630058841055699*^9, 3.630058844555699*^9}}],

Cell["\<\
Determine the Number of Lines in a Text File
http://mathematica.stackexchange.com/a/23504/7966\
\>", "Text",
 CellChangeTimes->{{3.626567467630173*^9, 3.6265674967649393`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "readHeader", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"readHeader", "::", "usage"}], "=", 
    "\"\<readHeader[file] opens the file and reads the first line. A list of \
string records is returned.\\nIt is assumed that the file containes only test \
and the first line involves tabs or commas to separate records\>\""}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"readHeader", "[", 
    RowBox[{"file_String", "?", "FileExistsQ"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"str", "=", 
        RowBox[{"OpenRead", "[", "file", "]"}]}], ",", "header"}], "}"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"header", "=", 
       RowBox[{"StringSplit", "[", 
        RowBox[{
         RowBox[{"StringReplace", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Read", "[", 
            RowBox[{"str", ",", "Record", ",", 
             RowBox[{"RecordSeparators", "\[Rule]", 
              RowBox[{"{", "\"\<\\n\>\"", "}"}]}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<\\t\>\"", "\[Rule]", "\"\<,\>\""}]}], "]"}], ",", 
         "\"\<,\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Close", "[", "str", "]"}], ";", "header"}]}], "]"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6265685723341365`*^9, 3.6265685887572727`*^9}, {
  3.6265686911491575`*^9, 3.6265688796331024`*^9}, {3.6265689721119843`*^9, 
  3.626568979237961*^9}, {3.6265693875618863`*^9, 3.6265693881077847`*^9}, {
  3.6265695532209625`*^9, 3.626569564261348*^9}, {3.6265950116568413`*^9, 
  3.6265950611881294`*^9}, {3.6265951235937757`*^9, 3.6265952163358335`*^9}, {
  3.6265952497929*^9, 3.6265952967445955`*^9}, {3.6327169662146244`*^9, 
  3.6327169875808353`*^9}, {3.632720906595982*^9, 3.6327209067980433`*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"header", "=", 
  RowBox[{"readHeader", "[", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\</import/\>\"", "<>", 
    "\"\<stream_uproof.dat\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6265693621116915`*^9, 3.626569368434933*^9}, {
  3.6265694333129272`*^9, 3.6265694338594313`*^9}, {3.6265695723517704`*^9, 
  3.6265695752648563`*^9}, {3.626595853046469*^9, 3.6265958558869276`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"m\"\>", ",", "\<\"u\"\>", ",", "\<\"a1\"\>", ",", "\<\"a2\"\>",
    ",", "\<\"a3\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6265693726663785`*^9, {3.6265694053034735`*^9, 3.6265694348663006`*^9}, 
   3.626569576299036*^9, 3.6265952246576495`*^9, 3.626595650478885*^9, 
   3.6265958911052055`*^9, 3.6265973386706195`*^9, 3.6265974096081195`*^9, 
   3.6265975813581195`*^9, 3.6265987514518695`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"header", "=", 
  RowBox[{"readHeader", "[", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\</import/\>\"", "<>", 
    "\"\<stream_dproof.dat\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.626569446165176*^9, {3.6265694839830933`*^9, 3.6265694879537964`*^9}, {
   3.6265695790080204`*^9, 3.6265695820998173`*^9}, {3.6265958721235666`*^9, 
   3.626595874410079*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"m\"\>", ",", "\<\"d\"\>", ",", "\<\"a1\"\>", ",", "\<\"a2\"\>",
    ",", "\<\"a3\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.626569446754744*^9, 3.6265695919113407`*^9, 
  3.6265958921159472`*^9, 3.6265973387174945`*^9, 3.6265974096706195`*^9, 
  3.6265975822174945`*^9, 3.6265987515143695`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "header", "]"}]], "Input",
 CellChangeTimes->{{3.626595655703495*^9, 3.626595662841417*^9}, {
  3.626595865884014*^9, 3.6265958684629908`*^9}, {3.626595899241924*^9, 
  3.6265959005309863`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["readYourCSV", "Subsubsection",
 CellChangeTimes->{{3.630058849821324*^9, 3.630058868394761*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "readYourCSV", "]"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "n", " ", "is", " ", "the", " ", "number", " ", "of", " ", "columns", " ", 
    "to", " ", "read"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"readYourCSV", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<readYourCSV[file,n] opens and reads a CSV or TSV file assuming that \
the number of columns equals n. Remark: All fields must be numeric - the \
header must be manually removed afterwards or translated to String with the \
ToString command\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"readYourCSV", "[", 
    RowBox[{
     RowBox[{"file_String", "?", "FileExistsQ"}], ",", "n_Integer"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"str", "=", 
        RowBox[{"OpenRead", "[", "file", "]"}]}], ",", "data"}], "}"}], ",", 
     RowBox[{
      RowBox[{"data", "=", 
       RowBox[{"ReadList", "[", 
        RowBox[{"str", ",", 
         RowBox[{"Table", "[", 
          RowBox[{"Record", ",", 
           RowBox[{"{", "n", "}"}]}], "]"}], ",", 
         RowBox[{"RecordSeparators", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<\\t\>\"", ",", "\"\<,\>\"", ",", "\"\<\\n\>\""}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Close", "[", "str", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"ReleaseHold", "[", 
       RowBox[{
        RowBox[{"ToExpression", "[", 
         RowBox[{"data", ",", "InputForm", ",", "Hold"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Plus", "[", 
           RowBox[{
            RowBox[{"Times", "[", 
             RowBox[{"x_", ",", 
              RowBox[{"E", "|", "e"}]}], "]"}], ",", "y_"}], "]"}], 
          "\[RuleDelayed]", 
          RowBox[{"x", "*", 
           RowBox[{"10", "^", "y"}]}]}], "}"}]}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6265962967502537`*^9, 3.626596308727497*^9}, {
  3.630057100157071*^9, 3.6300573100329895`*^9}, {3.6300576689118223`*^9, 
  3.6300577399779205`*^9}, {3.6327169760095463`*^9, 3.6327169841697025`*^9}, {
  3.632720914126851*^9, 3.632720914497514*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"header", "=", 
  RowBox[{"readHeader", "[", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\</import/\>\"", "<>", 
    "\"\<round1m1-1.xls.pre.dat\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{3.6300576161093225`*^9, 3.632718693100425*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Market\"\>", ",", "\<\"Upstream\"\>", 
   ",", "\<\"DownStream\"\>", ",", "\<\"Distance1\"\>", 
   ",", "\<\"Distance2\"\>", ",", "\<\"Distance3\"\>", ",", "\<\"Match\"\>"}],
   "}"}]], "Output",
 CellChangeTimes->{3.6300576178935027`*^9, 3.630057742838272*^9, 
  3.632718696666831*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringQ", "/@", "header"}]], "Input",
 CellChangeTimes->{{3.6300577685247955`*^9, 3.6300577796859283`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{3.630057780385147*^9, 3.632718703017417*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"data", "=", 
    RowBox[{"readYourCSV", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\</import/\>\"", 
       "<>", "\"\<round1m1-1.xls.pre.dat\>\""}], ",", 
      RowBox[{"Length", "@", "header"}]}], "]"}]}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.6300572754595547`*^9, 3.630057279975628*^9}, {
   3.6300573156902156`*^9, 3.6300573326775208`*^9}, {3.630057574839282*^9, 
   3.6300575888557806`*^9}, {3.6300576219091277`*^9, 3.630057627278268*^9}, 
   3.6300577897875404`*^9, {3.632718706984214*^9, 3.632718723474448*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.4628906999999999883`6.67021616400809", ",", "Null"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6327187292527685`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.630057807693293*^9, 3.6300578091289587`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "Market", ",", "Upstream", ",", "DownStream", ",", "Distance1", ",", 
   "Distance2", ",", "Distance3", ",", "Match"}], "}"}]], "Output",
 CellChangeTimes->{3.630057809376937*^9, 3.632718733227378*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringQ", "/@", 
  RowBox[{"data", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6300577916158285`*^9, 3.630057803187045*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
   "False", ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{{3.6300578035185537`*^9, 3.6300578132995872`*^9}, 
   3.632718735602378*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToString", "/@", 
  RowBox[{"data", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.630057863086949*^9, 3.630057880524449*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Market\"\>", ",", "\<\"Upstream\"\>", 
   ",", "\<\"DownStream\"\>", ",", "\<\"Distance1\"\>", 
   ",", "\<\"Distance2\"\>", ",", "\<\"Distance3\"\>", ",", "\<\"Match\"\>"}],
   "}"}]], "Output",
 CellChangeTimes->{{3.630057869743199*^9, 3.630057881430699*^9}, 
   3.6327187368894873`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"And", "@@", 
  RowBox[{"(", 
   RowBox[{"NumberQ", "/@", 
    RowBox[{"(", 
     RowBox[{"Flatten", "@", 
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"2", ";;", "All"}], "]"}], "]"}]}], ")"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.630057816832243*^9, 3.630057853383824*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.630057844446324*^9, 3.630057853993199*^9}, 
   3.63271873808187*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", 
  RowBox[{"data", ",", "header"}], "]"}]], "Input",
 CellChangeTimes->{{3.630057966743199*^9, 3.630057971571324*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["importCSV", "Subsubsection",
 CellChangeTimes->{{3.630058878355206*^9, 3.6300588831489463`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "importCSV", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"importCSV", "::", "usage"}], "=", "\[IndentingNewLine]", 
   "\"\<importCSV[file] opens and reads a CSV or TSV file assuming that each \
row contains the same number of records. Remark: All fields must be numeric - \
the header must be manually removed afterwards or translated to String with \
the ToString command\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"importCSV", "[", 
    RowBox[{"file_String", "?", "FileExistsQ"}], "]"}], ":=", 
   RowBox[{"readYourCSV", "[", 
    RowBox[{"file", ",", 
     RowBox[{"Length", "@", 
      RowBox[{"readHeader", "[", "file", "]"}]}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6265967334831195`*^9, 3.6265967998581195`*^9}, {
  3.630058145836949*^9, 3.630058160586949*^9}, {3.630058198024449*^9, 
  3.630058217821324*^9}, {3.632672224700695*^9, 3.63267223352882*^9}, {
  3.6327171173411236`*^9, 3.632717121490285*^9}, {3.632720931789955*^9, 
  3.6327209342851887`*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"data", "=", 
    RowBox[{"importCSV", "[", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\</import/\>\"", 
      "<>", "\"\<round1m1-1.xls.pre.dat\>\""}], "]"}]}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.630057992399449*^9, 3.630058001321324*^9}, {
  3.6327180410857306`*^9, 3.632718043721942*^9}, {3.6327183839614844`*^9, 
  3.6327183901187105`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.8203125`6.602698802755376", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.632718392825742*^9, 3.632718416085508*^9}, 
   3.63271861815958*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.630058004321324*^9, 3.630058005805699*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "Market", ",", "Upstream", ",", "DownStream", ",", "Distance1", ",", 
   "Distance2", ",", "Distance3", ",", "Match"}], "}"}]], "Output",
 CellChangeTimes->{3.630058006055699*^9, 3.630058050618199*^9, 
  3.632718529565697*^9, 3.6327186255257907`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringQ", "/@", 
  RowBox[{"data", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
   "False", ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{3.630058020368199*^9, 3.630058051243199*^9, 
  3.6327185361196427`*^9, 3.6327186334945407`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToString", "/@", 
  RowBox[{"data", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.630057863086949*^9, 3.630057880524449*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Market\"\>", ",", "\<\"Upstream\"\>", 
   ",", "\<\"DownStream\"\>", ",", "\<\"Distance1\"\>", 
   ",", "\<\"Distance2\"\>", ",", "\<\"Distance3\"\>", ",", "\<\"Match\"\>"}],
   "}"}]], "Output",
 CellChangeTimes->{{3.630057869743199*^9, 3.630057881430699*^9}, 
   3.630058052071324*^9, 3.632718642467142*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"And", "@@", 
  RowBox[{"(", 
   RowBox[{"NumberQ", "/@", 
    RowBox[{"(", 
     RowBox[{"Flatten", "@", 
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"2", ";;", "All"}], "]"}], "]"}]}], ")"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.630057816832243*^9, 3.630057853383824*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.630057844446324*^9, 3.630057853993199*^9}, 
   3.630058066149449*^9, 3.6327186438700476`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "data", "]"}]], "Input",
 CellChangeTimes->{{3.630058069758824*^9, 3.630058074665074*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["readTable  (Memory Efficiency!)", "Subsubsection",
 CellChangeTimes->{{3.6300588906187506`*^9, 3.630058894689337*^9}, {
  3.630060549026251*^9, 3.630060559510626*^9}}],

Cell["\<\
For some reason, the current implementation of Import for the type Table \
(tabular data) is quite memory - inefficient. Below I\[CloseCurlyQuote]ve \
(the OP) made an attempt to remedy this situation somewhat, while still \
reusing Mathematica\[CloseCurlyQuote]s high-level importing capabilities \
(through ImportString). For sparse tables, a separate solution is presented, \
which can lead to very significant memory savings.\
\>", "Text",
 CellChangeTimes->{{3.630059090251837*^9, 3.630059110642462*^9}}],

Cell["\<\
Speed is reduced as a trade-off but importing big files usually happen once. \
\>", "Text",
 CellChangeTimes->{{3.6300623592616024`*^9, 3.6300623903553524`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"General", " ", "memory"}], "-", 
    RowBox[{"efficient", " ", "solution"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"http", ":"}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"stackoverflow", ".", "com"}], "/", "a"}], "/", "7527064"}], 
     "/", "2468683"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "readTable", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"readTable", "::", "usage"}], "=", 
     "\"\<readTable[file] open and reads tabular data in a memory efficient \
way\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"readTable", "[", 
     RowBox[{
      RowBox[{"file_String", "?", "FileExistsQ"}], ",", 
      RowBox[{"chunkSize_:", " ", "1000"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "str", ",", "stream", ",", "dataChunk", ",", "result", ",", 
        "linkedList", ",", "add"}], "}"}], ",", 
      RowBox[{
       RowBox[{"SetAttributes", "[", 
        RowBox[{"linkedList", ",", "HoldAllComplete"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"add", "[", 
         RowBox[{"ll_", ",", "value_"}], "]"}], ":=", 
        RowBox[{"linkedList", "[", 
         RowBox[{"ll", ",", "value"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"stream", "=", 
        RowBox[{"StringToStream", "[", 
         RowBox[{"Import", "[", 
          RowBox[{"file", ",", "\"\<String\>\""}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Internal`WithLocalSettings", "[", 
        RowBox[{"Null", ",", 
         RowBox[{"(*", 
          RowBox[{"main", " ", "code"}], "*)"}], 
         RowBox[{
          RowBox[{"result", "=", 
           RowBox[{"linkedList", "[", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{"dataChunk", "=!=", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{
             RowBox[{"dataChunk", "=", 
              RowBox[{"ImportString", "[", 
               RowBox[{
                RowBox[{"StringJoin", "[", 
                 RowBox[{"Riffle", "[", 
                  RowBox[{
                   RowBox[{"ReadList", "[", 
                    RowBox[{
                    "stream", ",", "\"\<String\>\"", ",", "chunkSize"}], 
                    "]"}], ",", "\"\<\\n\>\""}], "]"}], "]"}], ",", 
                "\"\<Table\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"result", "=", 
              RowBox[{"add", "[", 
               RowBox[{"result", ",", "dataChunk"}], "]"}]}], ";"}]}], "]"}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"result", "=", 
           RowBox[{"Flatten", "[", 
            RowBox[{"result", ",", "Infinity", ",", "linkedList"}], "]"}]}]}],
          ",", 
         RowBox[{"(*", 
          RowBox[{"clean", "-", "up"}], "*)"}], 
         RowBox[{"Close", "[", "stream", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Join", "@@", "result"}]}]}], "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.62825898008381*^9, 3.6282589800847864`*^9}, {
   3.6282604081452417`*^9, 3.628260418072976*^9}, {3.630058973986212*^9, 
   3.630058975408087*^9}, {3.630059028595587*^9, 3.630059030423712*^9}, {
   3.63267239784132*^9, 3.632672438794445*^9}, {3.63267247377882*^9, 
   3.63267251631007*^9}, {3.632672620138195*^9, 3.63267262681007*^9}, {
   3.63267288109132*^9, 3.63267290987257*^9}, 3.632725767739889*^9, {
   3.6327262138356876`*^9, 3.632726236154391*^9}, 3.632727902552888*^9, 
   3.6327279419308176`*^9},
 Background->RGBColor[0.88, 1, 0.88]],

Cell["The following tests must be be performed with a clean kernel", "Text",
 CellChangeTimes->{{3.630059828791876*^9, 3.630059835041876*^9}, {
  3.630060479354376*^9, 3.630060488510626*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"used", "=", 
  RowBox[{"MaxMemoryUsed", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.630059360213751*^9, 3.630059370479376*^9}}],

Cell[BoxData["15281852"], "Output",
 CellChangeTimes->{3.630059382338751*^9, 3.630059725416876*^9, 
  3.630059762588751*^9, 3.630060491557501*^9, 3.632717273529346*^9, 
  3.632717345051571*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"test1", "=", 
    RowBox[{"readTable", "[", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\</import/\>\"", 
      "<>", "\"\<round1m1-1.xls.pre.dat\>\""}], "]"}]}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.630059389307501*^9, 3.630059439932501*^9}, {
  3.630059682823126*^9, 3.630059688010626*^9}, {3.632717276225635*^9, 
  3.632717277466846*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"13.7896412000000001541`7.160152879463644", ",", "Null"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.630059451979376*^9, 3.630059702791876*^9, 3.630059737541876*^9, 
   3.630059775088751*^9, 3.630060506604376*^9, 3.6327172997695804`*^9, {
   3.632717346319307*^9, 3.632717365412396*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"used", "=", 
  RowBox[{
   RowBox[{"MaxMemoryUsed", "[", "]"}], "-", "used"}]}]], "Input",
 CellChangeTimes->{{3.630059469588751*^9, 3.630059480901251*^9}}],

Cell[BoxData["20553600"], "Output",
 CellChangeTimes->{3.630059482807501*^9, 3.630059737604376*^9, 
  3.630059775151251*^9, 3.630060516807501*^9, 3.6327173097080564`*^9, 
  3.632717365506095*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"test2", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\</import/\>\"", 
      "<>", "\"\<round1m1-1.xls.pre.dat\>\""}], "]"}]}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.630059645448126*^9, 3.630059653729376*^9}, {
  3.630059702245001*^9, 3.630059703948126*^9}, {3.6327172955859866`*^9, 
  3.632717296659229*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.1259765999999999941`6.348158393341406", ",", "Null"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.630059668682501*^9, 3.630059739510626*^9, 
  3.630059776916876*^9, 3.630060520495001*^9, 3.632717374183863*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"used", "=", 
  RowBox[{
   RowBox[{"MaxMemoryUsed", "[", "]"}], "-", "used"}]}]], "Input",
 CellChangeTimes->{{3.630059469588751*^9, 3.630059480901251*^9}}],

Cell[BoxData["60743516"], "Output",
 CellChangeTimes->{3.630059482807501*^9, 3.630059739557501*^9, 
  3.630059776979376*^9, 3.630060523760626*^9, 3.632717380271754*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"test1", "===", "test2"}]], "Input",
 CellChangeTimes->{{3.630059719432501*^9, 3.630059720338751*^9}, {
  3.630059752885626*^9, 3.630059755291876*^9}, {3.632717301464893*^9, 
  3.632717305984424*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.630059739604376*^9, 3.630060526948126*^9, 
  3.632717382936793*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Checking", " ", "if", " ", "header", " ", "exists", " ", "and", " ", "is",
     " ", "a", " ", "string"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"And", "@@", 
   RowBox[{"(", 
    RowBox[{"StringQ", "/@", 
     RowBox[{"(", 
      RowBox[{"test1", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ")"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.6327174002571054`*^9, 3.6327174595354257`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.6327174029504647`*^9, 3.632717437724879*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", 
  RowBox[{"used", ",", "test1", ",", "test2"}], "]"}]], "Input",
 CellChangeTimes->{{3.6300622955897274`*^9, 3.6300623056991024`*^9}, {
  3.632717386683863*^9, 3.632717390740504*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
importDoubleCSV  Java solution for efficient import (speed and memory) (by \
Leonid Shifrin)
IT IS NOT USED YET BECAUSE OF COMPATIBILITY ISSUES IN LINUX\
\>", "Subsubsection",
 CellChangeTimes->{{3.622361687887643*^9, 3.622361688223422*^9}, {
  3.622362655816038*^9, 3.6223626803416023`*^9}, {3.626539377708387*^9, 
  3.6265393996849494`*^9}, {3.6327222190552645`*^9, 3.6327222237119217`*^9}, {
  3.636966902397993*^9, 3.636966929893778*^9}}],

Cell[TextData[{
 StyleBox["Here is a Java-based solution, pretty fast but valid only when all \
your columns are numerical (double) values.",
  Background->RGBColor[1, 1, 0]],
 "\n\nhttp://mathematica.stackexchange.com/questions/35371/speeding-up-import-\
and-export-in-csv-format"
}], "Text",
 CellChangeTimes->{
  3.622362547828756*^9, {3.622362710831907*^9, 3.6223627180424867`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"http", ":"}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"mathematica", ".", "stackexchange", ".", "com"}], "/", 
        "questions"}], "/", "6144"}], "/", "looking"}], "-", "for", "-", 
     "longest", "-", "common", "-", "substring", "-", 
     RowBox[{
      RowBox[{"solution", "/", "6376"}], "#6376"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Get", "[", 
   RowBox[{"directory", "<>", "\"\<SimpleJavaReloader.m\>\""}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6223616948025646`*^9, 3.6223617082681866`*^9}, {
  3.6223633787084155`*^9, 3.622363385322176*^9}, {3.630070814540985*^9, 
  3.6300708302441096`*^9}, {3.630071005103485*^9, 3.6300710173378596`*^9}, {
  3.630387352548414*^9, 3.630387354754469*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[TextData[StyleBox["Note that Java parsing code adopts a convention to \
replace all non-parsable strings with zeros. It is possible to improve on \
this, by returning also the positions of non-parsable strings, separately. \
Note also that the UTF-8 encoding is implicitly assumed.\n\nIT NEEDS MORE \
WORK TO RUN THIS ON LINUX",
 Background->RGBColor[1, 1, 0]]], "Text",
 CellChangeTimes->{
  3.622363150025201*^9, {3.636963763891575*^9, 3.636963780051813*^9}}],

Cell[CellGroupData[{

Cell[BoxData["$OperatingSystem"], "Input"],

Cell[BoxData["\<\"Unix\"\>"], "Output",
 CellChangeTimes->{3.636963905692378*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"$OperatingSystem", "\[Equal]", "\"\<Windows\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
   "JCompileLoad", "[", 
    "\"\<public class DoubleParser{\n   public static double[] \
parseDouble(String[] strdub){\n      double[] res = new \
double[strdub.length];\n      int i = 0;\n      for(;i < strdub.length;i++){\n\
         try{\n            res[i]= Double.parseDouble(strdub[i]);\n         } \
catch (NumberFormatException e){\n            res[i] = 0;\n         }\n      \
}\n      return res;\n   }\n}\>\"", "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6223617128645954`*^9, 3.6223617128645954`*^9}, {
  3.6369638550849743`*^9, 3.6369638979636297`*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "importDoubleCSV", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "importDoubleCSV", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<Headers\>\"", "\[Rule]", "True"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"importDoubleCSV", "::", "usage"}], "=", 
   "\"\<importDoubleCSV[file] is a Java-based solution for efficient \
importing, pretty fast but valid only when all your columns are numerical \
(double) values. Note that Java parsing code adopts a convention to replace \
all non-parsable strings with zeros. It is possible to improve on this, by \
returning also the positions of non-parsable strings, separately. Note also \
that the UTF-8 encoding is implicitly assumed\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"importDoubleCSV", "[", 
   RowBox[{
    RowBox[{"file_String", "?", "FileExistsQ"}], ",", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"fn", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"TrueQ", "[", 
         RowBox[{"OptionValue", "[", "\"\<Headers\>\"", "]"}], "]"}], ",", 
        "Rest", ",", "Identity"}], "]"}]}], "}"}], ",", 
    RowBox[{"Transpose", "[", 
     RowBox[{"DoubleParser`parseDouble", "/@", 
      RowBox[{"Transpose", "[", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{
         RowBox[{"StringSplit", "[", 
          RowBox[{
           RowBox[{"fn", "[", 
            RowBox[{"StringSplit", "[", 
             RowBox[{
              RowBox[{"FromCharacterCode", "[", 
               RowBox[{"BinaryReadList", "[", "file", "]"}], "]"}], ",", 
              "\"\<\\n\>\""}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<\\t\>\"", ",", "\"\<,\>\""}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"s_String", "/;", 
           RowBox[{"StringMatchQ", "[", 
            RowBox[{"s", ",", "Whitespace"}], "]"}]}], "}"}]}], "]"}], 
       "]"}]}], "]"}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.622361734275427*^9, 3.6223617342769837`*^9}, {
  3.622366281300241*^9, 3.622366282389889*^9}, {3.622366334216188*^9, 
  3.622366339448169*^9}, {3.63271569049045*^9, 3.632715775422267*^9}, {
  3.6327158072408648`*^9, 3.632715813970357*^9}, {3.632719107140212*^9, 
  3.6327191080876565`*^9}, {3.6327191409911304`*^9, 3.63271914713416*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"data", "=", 
    RowBox[{"importDoubleCSV", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\</import/\>\"", 
       "<>", "\"\<round1m1-1.xls.pre.dat\>\""}], ",", 
      RowBox[{"\"\<Headers\>\"", "\[Rule]", "True"}]}], "]"}]}], ";"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6223619398835597`*^9, 3.622361948024429*^9}, {
  3.622362272748927*^9, 3.6223623093428164`*^9}, {3.622366250412842*^9, 
  3.6223662624221535`*^9}, {3.622366299488063*^9, 3.6223663001436696`*^9}, {
  3.622366390199327*^9, 3.622366399268211*^9}, {3.6300710647128596`*^9, 
  3.630071069197235*^9}, {3.6327187708885107`*^9, 3.6327187800877295`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.0971738000000001989`6.511565490048455", ",", "Null"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6223659446090775`*^9, 3.6223661487225738`*^9, {3.622366276104673*^9, 
   3.622366384297202*^9}, 3.6223664276572895`*^9, 3.622366476921447*^9, 
   3.622367187261923*^9, 3.6223673309722767`*^9, 3.622367583260891*^9, 
   3.62653928305348*^9, 3.6265400224792795`*^9, 3.6300710738691096`*^9, 
   3.6327188451125584`*^9, 3.632719022760479*^9, 3.6327191144211397`*^9, 
   3.632719157203647*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.632718890992441*^9, 3.6327188929201756`*^9}, 
   3.632719014735849*^9, 3.632719060287216*^9, {3.632719159925327*^9, 
   3.6327191605425143`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.`", ",", "1.`", ",", "1.`", ",", "93.73713941827506`", ",", 
   "108.51121067692661`", ",", "84.38961111881652`", ",", "0.`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.632718893229746*^9, {3.632719015590912*^9, 3.6327190251078696`*^9}, 
   3.63271906153624*^9, 3.632719118705206*^9, 3.6327191608804045`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Developer`PackedArrayQ", "@", "data"}]], "Input",
 CellChangeTimes->{{3.6223628389160376`*^9, 3.6223628413138213`*^9}, {
  3.6327188491721287`*^9, 3.6327188500744724`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.6223628421684303`*^9, 3.6223661489050655`*^9, 
  3.622366486229538*^9, 3.6223671873009853`*^9, 3.6223673311217747`*^9, 
  3.622367583553157*^9, 3.626539283295626*^9, 3.626540039918907*^9, 
  3.6300710846816096`*^9, 3.6327188508752537`*^9, 3.632719034326209*^9, 
  3.6327191643901706`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ByteCount", "/@", 
  RowBox[{"{", "data", "}"}]}]], "Input",
 CellChangeTimes->{{3.6223628454714975`*^9, 3.6223628856795883`*^9}, {
  3.630071090978485*^9, 3.630071107759735*^9}, {3.632718853943613*^9, 
  3.632718855738535*^9}}],

Cell[BoxData[
 RowBox[{"{", "3500104", "}"}]], "Output",
 CellChangeTimes->{
  3.62236285054574*^9, {3.6223628821440835`*^9, 3.6223628866615605`*^9}, 
   3.6223661489240894`*^9, 3.6223664875513563`*^9, 3.6223671873136806`*^9, 
   3.6223673311491475`*^9, 3.6223675835824842`*^9, 3.626539283322425*^9, 
   3.626540042425624*^9, {3.630071094103485*^9, 3.6300711080878596`*^9}, 
   3.6327188561858006`*^9, 3.6327190371296463`*^9, 3.63271916511478*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MaxMemoryUsed", "[", "]"}]], "Input",
 CellChangeTimes->{{3.622366568833166*^9, 3.6223665770410156`*^9}}],

Cell[BoxData["111137364"], "Output",
 CellChangeTimes->{3.622367187328329*^9, 3.6223673311607285`*^9, 
  3.6223675835976543`*^9, 3.626539283331996*^9, 3.62654004436699*^9, 
  3.6300711107441096`*^9, 3.6327188578215427`*^9, 3.6327191665464206`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "data", "]"}]], "Input",
 CellChangeTimes->{{3.6300713154003596`*^9, 3.6300713195566096`*^9}, {
  3.632718861381113*^9, 3.632718863658457*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testing 4memory", "Subsection",
 CellChangeTimes->{{3.6327210047193766`*^9, 3.632721009914208*^9}, {
  3.6327251094245977`*^9, 3.632725113220675*^9}, {3.6327251465854464`*^9, 
  3.632725152057534*^9}}],

Cell[BoxData["memoryGraph"], "Input",
 CellChangeTimes->{{3.632726189983487*^9, 3.6327261916667585`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"file", "=", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\</import/\>\"", "<>", 
    "\"\<matched_big.dat\>\""}]}], ";"}]], "Input",
 CellChangeTimes->{{3.632722506034257*^9, 3.63272252060457*^9}, 
   3.632723884207306*^9, {3.632724238004299*^9, 3.632724238870475*^9}, {
   3.6327243128322678`*^9, 3.6327243133843107`*^9}, {3.6327245592099276`*^9, 
   3.6327245602873497`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"test1", "=", 
    RowBox[{"readTable", "[", 
     RowBox[{"file", ",", "10000"}], "]"}]}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.632726263297681*^9, 3.632726263435376*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"81.3685789999999968813`7.931056644933988", ",", "Null"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6327271752260942`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"test1", "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6327260265458097`*^9, 3.6327260373491254`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"market\"\>", ",", "\<\"upstream\"\>", 
     ",", "\<\"downstream\"\>", ",", "\<\"attr1\"\>", ",", "\<\"attr2\"\>", 
     ",", "\<\"attr3\"\>", ",", "\<\"attr4\"\>", ",", "\<\"match\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6327260295604935`*^9, 3.6327260376275578`*^9}, 
   3.63272792981656*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"test2", "=", 
    RowBox[{"importDoubleCSV", "[", "file", "]"}]}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.632722258267701*^9, 3.632722273137842*^9}, {
   3.63272464087414*^9, 3.6327246409988565`*^9}, 3.632725287727881*^9}],

Cell["\<\

No more memory available.
Mathematica kernel has shut down.
Try quitting other applications and then retry.\
\>", "Print",
 CellChangeTimes->{3.632725359130924*^9, 3.632725579595746*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", 
  RowBox[{"test1", ",", "test2"}], "]"}]], "Input",
 CellChangeTimes->{{3.6327260450582113`*^9, 3.6327260499001904`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Testing 4speed", "Subsection",
 CellChangeTimes->{{3.6327210047193766`*^9, 3.632721009914208*^9}, {
  3.6327251094245977`*^9, 3.63272513642118*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"file", "=", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\</import/\>\"", "<>", 
    "\"\<round1m1-1.xls.pre.dat\>\""}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6327214772444677`*^9, 3.632721513076499*^9}, {
  3.6327242786277313`*^9, 3.6327242795847626`*^9}, {3.6327260187331533`*^9, 
  3.6327260196698556`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"test0", "=", 
    RowBox[{"Import", "[", "file", "]"}]}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.6327223369148264`*^9, 3.6327223548501177`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.9874118000000000617`6.318887777338567", ",", "Null"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6327260564993887`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"test1", "=", 
    RowBox[{"importCSV", "[", "file", "]"}]}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.632721490430015*^9, 3.6327215172514553`*^9}, {
   3.6327219323406835`*^9, 3.6327219325343986`*^9}, {3.6327221889069586`*^9, 
   3.6327221910544195`*^9}, 3.6327231506773596`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.5323039999999998884`6.676918945339178", ",", "Null"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6327215436137667`*^9, 3.63272195124109*^9, 
  3.6327222001911383`*^9, 3.632724257699997*^9, 3.6327242877683563`*^9, 
  3.6327243377492924`*^9, 3.6327260610938077`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"test2", "=", 
    RowBox[{"readTable", "[", "file", "]"}]}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.6327221780075445`*^9, 3.6327222043561773`*^9}, 
   3.6327231667000155`*^9, 3.6327238160342073`*^9, {3.6327238899273434`*^9, 
   3.632723890453754*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.8544608000000000203`6.706740911768912", ",", "Null"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6327240568197002`*^9, 3.6327241457363863`*^9, 
  3.632724244479941*^9, 3.6327260660409145`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"test3", "=", 
    RowBox[{"importDoubleCSV", "[", "file", "]"}]}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.632722258267701*^9, 3.632722273137842*^9}, {
  3.63272464087414*^9, 3.6327246409988565`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.1297340999999998523`6.516107355040736", ",", "Null"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6327222782013187`*^9, 3.632726069242987*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"test0", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"test1", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"test2", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"test3", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.632722307297022*^9, 3.632722379004565*^9}, {
  3.632725165907543*^9, 3.6327251684582143`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Market\"\>", "\<\"Upstream\"\>", "\<\"DownStream\"\>", \
"\<\"Distance1\"\>", "\<\"Distance2\"\>", "\<\"Distance3\"\>", \
"\<\"Match\"\>"},
    {"Market", "Upstream", "DownStream", "Distance1", "Distance2", 
     "Distance3", "Match"},
    {"\<\"Market\"\>", "\<\"Upstream\"\>", "\<\"DownStream\"\>", \
"\<\"Distance1\"\>", "\<\"Distance2\"\>", "\<\"Distance3\"\>", \
"\<\"Match\"\>"},
    {"1.`", "1.`", "1.`", "93.73713941827506`", "108.51121067692661`", 
     "84.38961111881652`", "0.`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.632722371898503*^9, 3.632722379342456*^9}, 
   3.6327260693240423`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"test0", "===", "test2"}], "}"}]], "Input",
 CellChangeTimes->{{3.6327222831368656`*^9, 3.632722292087061*^9}, {
  3.632722399194995*^9, 3.632722427748706*^9}, {3.6327260918259954`*^9, 
  3.632726130058982*^9}, {3.6327261619758244`*^9, 3.632726162117426*^9}}],

Cell[BoxData[
 RowBox[{"{", "True", "}"}]], "Output",
 CellChangeTimes->{
  3.63272242833562*^9, {3.632726086647284*^9, 3.632726130683714*^9}, 
   3.632726162584223*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", 
  RowBox[{"test0", ",", "test1", ",", "test2", ",", "test3"}], "]"}]], "Input",
 CellChangeTimes->{{3.632725191394743*^9, 3.632725208382185*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["import for MSE", "Subchapter",
 CellChangeTimes->{{3.6265955701249547`*^9, 3.6265955714530797`*^9}, {
  3.632716466580944*^9, 3.6327164684586697`*^9}}],

Cell[CellGroupData[{

Cell["Usage", "Section",
 CellChangeTimes->{{3.630060946291876*^9, 3.630060948776251*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "import", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"import", "::", "usage"}], "=", 
   "\"\<{noM,no,u,noAttr}=import[filename,\\\"stream\\\"] to load an \
upstream.\\r\n{noM,no,d,noAttr}=import[filename,\\\"stream\\\"] to load a \
downstream.\\r\nimports a file .xls or .xlsx or a tab delimited file .dat \
that includes data corresponding to an upstream (u) or downstream (d).\\r\n\
Datafiles consist of rows in the form \
{noM,no,attr1,attr2,...,attrn,noAttr}.\\r\nIn the case of .xls or .xlsx files \
multiple sheets are joined - for example if each market resides in its own \
excel sheet.\\r\n\
______________________________________________________________________________\
____________________\\r\n\
{header,noM,noU,noD,noAttr,distanceMatrices,matchMatrix,mate}=import[filename_\
,\\\"precomp\\\",printflag_:False]\\r\nimports a file .xls or .xlsx or a tab \
delimited file .dat that includes precomputed matched data (distances between \
same attributes are already computed).\\r\nDatafiles consists of rows in the \
form {m,u,d,u1,d1,u2,d2,...,un,dn,matched (0 or 1)}.\\r\nIn the case of .xls \
or .xlsx files multiple sheets are joined - for example if each market \
resides in its own excel sheet.\\r\>\""}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6263394279897165`*^9, 3.6263394310990915`*^9}, {
  3.6263395195522165`*^9, 3.6263397321459665`*^9}, {3.6263400516459665`*^9, 
  3.6263400655678415`*^9}, {3.6263401015365915`*^9, 3.6263402048647165`*^9}, {
  3.6263402373490915`*^9, 3.6263402810834665`*^9}, {3.6263403440678415`*^9, 
  3.6263403598803415`*^9}, {3.6263420330522165`*^9, 3.6263420357553415`*^9}, {
  3.6263438015157623`*^9, 3.6263438283438873`*^9}, {3.6263442750626373`*^9, 
  3.6263444341720123`*^9}, {3.6263444673595123`*^9, 3.6263446642970123`*^9}, {
  3.6263462510938873`*^9, 3.6263463435313873`*^9}, {3.6327164786760683`*^9, 
  3.632716515981636*^9}},
 Background->RGBColor[0.88, 1, 0.88]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "import"}]], "Input",
 CellChangeTimes->{{3.6263443561407623`*^9, 3.6263443598438873`*^9}}],

Cell[BoxData[
 StyleBox["\<\"{noM,no,u,noAttr}=import[filename,\\\"stream\\\"] to load an \
upstream.
\\n{noM,no,d,noAttr}=import[filename,\\\"stream\\\"] to load a downstream.
\\nimports a file .xls or .xlsx or a tab delimited file .dat that includes \
data corresponding to an upstream (u) or downstream (d).
\\nDatafiles consist of rows in the form {noM,no,attr1,attr2,...,attrn,noAttr}.
\\nIn the case of .xls or .xlsx files multiple sheets are joined - for \
example if each market resides in its own excel sheet.
\\n\\n{header,noM,noU,noD,noAttr,distanceMatrices,matchMatrix,mate}=import[\
filename_,\\\"precomp\\\",printflag_:False]
\\nimports a file .xls or .xlsx or a tab delimited file .dat that includes \
precomputed matched data (distances between same attributes are already \
computed).
\\nDatafiles consists of rows in the form \
{m,u,d,u1,d1,u2,d2,...,un,dn,matched (0 or 1)}.
\\nIn the case of .xls or .xlsx files multiple sheets are joined - for \
example if each market resides in its own excel sheet.
\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6265987516393695`*^9},
 CellTags->"Info3626605951-7086715"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["{noM,no,attributes,noAttr}=import[filename,\[CloseCurlyDoubleQuote]\
stream\[CloseCurlyDoubleQuote]]", "Section",
 CellChangeTimes->{{3.6117296524596715`*^9, 3.6117296677030706`*^9}, {
  3.6117395921925488`*^9, 3.6117396006329784`*^9}, {3.6119180620868053`*^9, 
  3.6119181424159703`*^9}, {3.611932962365845*^9, 3.611932962870728*^9}, {
  3.6263311680209665`*^9, 3.6263311700678415`*^9}}],

Cell[CellGroupData[{

Cell["Code", "Subsection",
 CellChangeTimes->{{3.6260727980437384`*^9, 3.6260727986358013`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"import", "[", 
   RowBox[{"filename_", ",", "\"\<stream\>\"", ",", 
    RowBox[{"numeric_:", "True"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "data", ",", "noM", ",", "no", ",", "attributes", ",", "noAttr"}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<xls\>\"", ",", "\"\<xlsx\>\""}], "}"}], ",", 
         RowBox[{"FileExtension", "[", "filename", "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{"Import", "[", "filename", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"data", "=", 
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", 
              RowBox[{"2", ";;", "All"}]}], "]"}], "]"}], ",", "1"}], 
          "]"}]}]}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"data", "=", 
         RowBox[{"If", "[", 
          RowBox[{"numeric", ",", 
           RowBox[{"importCSV", "[", "filename", "]"}], ",", 
           RowBox[{"Import", "[", "filename", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"data", "=", 
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"2", ";;", "All"}], "]"}], "]"}]}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"noM", "=", 
      RowBox[{"Length", "@", 
       RowBox[{"Union", "@", 
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"no", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Transpose", "@", 
         RowBox[{"Tally", "@", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], ")"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"attributes", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"GatherBy", "[", 
         RowBox[{"data", ",", "First"}], "]"}], ")"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "All", ",", 
         RowBox[{"3", ";;", "All"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"noAttr", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Dimensions", "@", 
         RowBox[{"attributes", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ")"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"noM", ",", "no", ",", "attributes", ",", "noAttr"}], "}"}]}]}],
    "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJwtzmkow3Ecx/HRXPFAUZIj5Hgwx5r8I0qTB0JEYiSFLBl5MBNyyxWmJFGy
B0SRazP3yvHEkbOtPEISNiuUs4T/5/vz4Nur97fvg69/UWVmia1AIAjiB/pa
L/PmHizSqk+uAGqdzWUwqymnBX6HFK5CWbPwEDY4GI+hXOh2Afd+l96h4Dr+
A8ZFKtrneRutk6QuYaIXfpbXj0GlJuAAelkGyPT7AhPcFb2SN1H2t6TPzh00
6k4cFnhNSo0zTHsO9YR9yZn+MNViCIGPifsi0jtcQm7aREJtsD5HD7lnGZyu
Eiqg529SBRyNbVRBqU1+DXTkhubJ7BtSruSsZLHuCV71a15h4Po02XSqbTPC
aAN5Nt45BKM9xFNQJnZahC5ryxvwOqVOJjHz/2V15ELXqZ7LMOGjlDtpvYd+
uaXj4bwZL1uTUH6YnR7Be/71kwF3ROqOWTKmm5yZ62P2qNl+cIB1yTDrgAnW
5n/1XYvkWDcp0oywniVX3o5UEXZwu5ZUFbYy1W1sX21kupn+776Z7nZi3j9t
xVBS
  "],
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
{header,noM,noU,noD,noAttr,distanceMatrices,matchMatrix,mate}=
import[filename_,\[CloseCurlyDoubleQuote]precomp\[CloseCurlyDoubleQuote],\
numeric_:True,printflag_:False]  \
\>", "Section",
 CellChangeTimes->{{3.611729670439058*^9, 3.6117296736111703`*^9}, 
   3.6117397518884535`*^9, 3.6119128671351423`*^9, 3.626060062128147*^9, {
   3.626061547674533*^9, 3.6260615511579313`*^9}, {3.630060983182501*^9, 
   3.630061004104376*^9}, {3.6300712470566096`*^9, 3.630071297884735*^9}, {
   3.6327210455184684`*^9, 3.6327210484389353`*^9}}],

Cell[CellGroupData[{

Cell["Code", "Subsection",
 CellChangeTimes->{{3.626072785970212*^9, 3.6260727868823338`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Header", " ", "assumed", " ", "inside", " ", "the", " ", "file"}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"import", "[", 
    RowBox[{"filename_", ",", "\"\<precomp\>\"", ",", 
     RowBox[{"printflag_:", "False"}], ",", 
     RowBox[{"numeric_:", "True"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "data", ",", "header", ",", "noAttr", ",", "matchMatrix", ",", "mate", 
       ",", "noM", ",", "noU", ",", "noD", ",", "distanceMatrices"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Importing", " ", "data"}], " ", "-", " ", 
       RowBox[{"header", " ", "is", " ", "excluded"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<xls\>\"", ",", "\"\<xlsx\>\""}], "}"}], ",", 
          RowBox[{"FileExtension", "[", "filename", "]"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"data", "=", 
          RowBox[{"Import", "[", "filename", "]"}]}], ";", 
         RowBox[{"header", "=", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"data", "=", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", 
               RowBox[{"2", ";;", "All"}]}], "]"}], "]"}], ",", "1"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"data", "=", 
          RowBox[{"Sort", "[", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"IntegerPart", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "]"}], 
                "]"}], ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"4", ";;", 
                  RowBox[{"-", "2"}]}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"IntegerPart", "[", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}], "]"}], "}"}]}], "]"}], 
             "&"}], "/@", "data"}], "]"}]}]}], 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Sort", " ", "is", " ", "m"}], ",", "u", ",", "d"}], "*)"}],
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"data", " ", "=", 
          RowBox[{"If", "[", 
           RowBox[{"numeric", ",", "\[IndentingNewLine]", 
            RowBox[{"Switch", "[", 
             RowBox[{
             "MSEresources", ",", "\[IndentingNewLine]", "\"\<Speed\>\"", ",", 
              RowBox[{"importCSV", "[", "filename", "]"}], ",", 
              "\[IndentingNewLine]", "\"\<Memory\>\"", ",", 
              RowBox[{"readTable", "[", "filename", "]"}]}], 
             RowBox[{"(*", 
              RowBox[{"importDoubleCSV", " ", "not", " ", "active"}], "*)"}], 
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
            RowBox[{"Import", "[", "filename", "]"}]}], "]"}]}], ";", 
         RowBox[{"(*", 
          RowBox[{
          "141203", " ", "Replaced", " ", "Import", " ", "with", " ", 
           "importCSV"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"header", "=", 
          RowBox[{"ToString", "/@", 
           RowBox[{"data", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"data", "=", 
          RowBox[{"Sort", "[", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"2", ";;", "All"}], "]"}], "]"}], "]"}]}]}]}], 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Sort", " ", "is", " ", "m"}], ",", "u", ",", "d"}], "*)"}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Calculating", " ", "number", " ", "of", " ", "attributes"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"noAttr", "=", 
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"First", "@", "data"}], "]"}], "-", "3", "-", "1"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"150606", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Formating", " ", "the", " ", "mate"}], "*)"}], 
          "\[IndentingNewLine]", 
          StyleBox["mate",
           Background->RGBColor[1., 0., 0.]]}], 
         StyleBox["=",
          Background->RGBColor[1., 0., 0.]], 
         StyleBox[
          RowBox[{"Transpose", "/@", "\[IndentingNewLine]", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}], "}"}], ",", 
                RowBox[{"#", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], "&"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"GatherBy", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Select", "[", 
                  RowBox[{"data", ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Last", "@", "#"}], "\[Equal]", "1"}], "&"}]}], 
                  "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", 
                   RowBox[{"1", ";;", "3"}]}], "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"First", ",", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "}"}]}], "]"}], 
              "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "All", ",", "All", ",", 
                RowBox[{"2", ";;", "3"}]}], "]"}], "]"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", "2", "}"}]}], "]"}]}],
          Background->RGBColor[1., 0., 0.]]}], 
        StyleBox[";",
         Background->RGBColor[1., 0., 0.]], "\[IndentingNewLine]", 
        RowBox[{"mate", "=", 
         RowBox[{"IntegerPart", "@", "mate"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "Some", " ", "times", " ", "the", " ", "mate", " ", "column", " ", 
           "has", " ", "reounded", " ", "values", " ", "1."}], ",", " ", 
          RowBox[{"2.", " ", "etc"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"BUG", " ", "--"}], ">", " ", 
         RowBox[{
          RowBox[{
          "When", " ", "no", " ", "matches", " ", "axist", " ", "for", " ", 
           "some", " ", "upstreams"}], "  ", "-", " ", 
          RowBox[{"FIXED", " ", "below", " ", "calling", " ", "Cmate"}]}]}]}],
        "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Creating", " ", "a", " ", "3", " ", "dimensional", " ", "list", " ", 
        "of", " ", "variable", " ", "length", " ", "to", " ", "access", " ", 
        "attributes", " ", "by", " ", 
        RowBox[{"{", 
         RowBox[{"market", ",", "upstream", ",", "downstream"}], "}"}]}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"data", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"GatherBy", "[", 
          RowBox[{"#", ",", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "&"}]}], "]"}], "&"}], "/@", 
        RowBox[{"GatherBy", "[", 
         RowBox[{"data", ",", "First"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Calculating", " ", "Match", " ", "Matrix"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"matchMatrix", "=", 
       RowBox[{"IntegerPart", "@", 
        RowBox[{"data", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "All", ",", "All", ",", 
           RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      StyleBox[
       RowBox[{"mate", "=", 
        RowBox[{"Cmate", "[", "matchMatrix", "]"}]}],
       Background->RGBColor[1, 0.85, 0.85]], 
      StyleBox[";",
       Background->RGBColor[1, 0.85, 0.85]], 
      StyleBox[" ",
       Background->RGBColor[1, 0.85, 0.85]], 
      StyleBox[
       RowBox[{"(*", 
        RowBox[{"Substite", " ", "withe", " ", "the", " ", "Cmate", " ", 
         RowBox[{"expression", " ", "?"}]}], " ", 
        StyleBox[
         RowBox[{"*", ")"}]]}],
       Background->RGBColor[1, 0.85, 0.85]], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Calculating", " ", "number", " ", "of", " ", "markets"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"noM", "=", 
       RowBox[{"Length", "[", "data", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Calculating", " ", "number", " ", "of", " ", "upstreams", " ", "and", 
        " ", "down", " ", "streams", " ", "in", " ", "each", " ", "market"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"noU", ",", "noD"}], "}"}], "=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "l", "}"}], ",", 
         RowBox[{
          RowBox[{"l", "=", 
           RowBox[{"Map", "[", 
            RowBox[{"Length", ",", "data", ",", 
             RowBox[{"{", "2", "}"}]}], "]"}]}], ";", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Length", "/@", "l"}], ",", 
            RowBox[{"l", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "}"}]}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Define", " ", "distance", " ", "matrices", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"dropping", " ", "market"}], ",", 
          RowBox[{
           RowBox[{"upsteam", " ", "and", " ", "downstream", " ", "indexes"}],
            " ", "-", " ", 
           RowBox[{
           "they", " ", "can", " ", "be", " ", "accessed", " ", "using", " ", 
            "Part"}]}]}], ")"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"distanceMatrices", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{"m", ",", "u", ",", "d"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"4", ";;", 
            RowBox[{"-", "2"}]}], "]"}], "]"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "noM"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"u", ",", 
           RowBox[{"noU", "[", 
            RowBox[{"[", "m", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"d", ",", 
           RowBox[{"noD", "[", 
            RowBox[{"[", "m", "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"printflag", ",", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<header = \>\"", ",", "header", ",", "\"\<\\ndata = \>\"", ",", 
          "data", ",", "\"\<\\nNumber of upstreams per market = \>\"", ",", 
          "noU", ",", "\"\<\\nNumber of downstreams per market = \>\"", ",", 
          "noD", ",", "\"\<\\nNumber of attributes = \>\"", ",", "noAttr", 
          ",", "\"\<\\nDistance Matrices = \>\"", ",", "distanceMatrices", 
          ",", "\"\<\\nmatchMatrix = \>\"", ",", "matchMatrix", ",", 
          "\"\<\\nmate = \>\"", ",", "mate"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "header", ",", "noM", ",", "noU", ",", "noD", ",", "noAttr", ",", 
        "distanceMatrices", ",", "matchMatrix", ",", "mate"}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.611652822966323*^9, 3.6116528497178288`*^9}, {
   3.6116529512826777`*^9, 3.611653130734293*^9}, {3.611653571036131*^9, 
   3.611653720140667*^9}, {3.611653750625914*^9, 3.611653824594287*^9}, {
   3.6116540696562233`*^9, 3.6116540739960938`*^9}, {3.611655211350004*^9, 
   3.6116552132163687`*^9}, {3.611655269133142*^9, 3.611655411888302*^9}, {
   3.611655761081964*^9, 3.6116557645910773`*^9}, {3.611655850965736*^9, 
   3.611655855630342*^9}, {3.6116559681940775`*^9, 3.611655990066148*^9}, {
   3.6116562544907017`*^9, 3.6116562849828897`*^9}, {3.611656393404334*^9, 
   3.6116564585716004`*^9}, {3.6116565099348507`*^9, 3.611656542289663*^9}, {
   3.61165659344103*^9, 3.6116566000543113`*^9}, {3.6116671336609735`*^9, 
   3.6116671435066767`*^9}, {3.611667288139241*^9, 3.61166730628114*^9}, {
   3.6116673719447765`*^9, 3.611667394875153*^9}, {3.6116678366940956`*^9, 
   3.611667839073002*^9}, {3.6116683217015867`*^9, 3.6116683496058836`*^9}, {
   3.6116683889863124`*^9, 3.611668404633836*^9}, {3.61166847509837*^9, 
   3.611668477256573*^9}, {3.6116686251983943`*^9, 3.6116686451310234`*^9}, {
   3.6116690101465945`*^9, 3.6116690759471054`*^9}, 3.611669130969496*^9, {
   3.611669382567131*^9, 3.611669397935832*^9}, {3.611669550440074*^9, 
   3.6116695517359724`*^9}, 3.611680277476177*^9, {3.61168062849362*^9, 
   3.611680670405012*^9}, {3.611680763648642*^9, 3.611680766469491*^9}, {
   3.612001172523655*^9, 3.6120011909523067`*^9}, {3.6120017472474403`*^9, 
   3.6120017539349403`*^9}, {3.612011657397198*^9, 3.612011661037823*^9}, {
   3.612011714772198*^9, 3.612011735053448*^9}, {3.612011835178448*^9, 
   3.612011883506573*^9}, {3.612011954490948*^9, 3.612011964350323*^9}, {
   3.612012016287823*^9, 3.612012080428448*^9}, {3.6120169383399334`*^9, 
   3.6120169741836834`*^9}, {3.6186496673399687`*^9, 
   3.6186496699493437`*^9}, {3.6186499044180937`*^9, 
   3.6186499756212187`*^9}, {3.6186500110274687`*^9, 
   3.6186500241055937`*^9}, {3.6186500856524687`*^9, 
   3.6186501868868437`*^9}, {3.6186503084493437`*^9, 
   3.6186503129493437`*^9}, {3.6219102043023596`*^9, 
   3.6219102061773596`*^9}, {3.626070382668466*^9, 3.6260703856977625`*^9}, {
   3.6260733301327715`*^9, 3.626073363722539*^9}, {3.626073487871846*^9, 
   3.6260734993698053`*^9}, {3.626074220624452*^9, 3.6260742275362434`*^9}, 
   3.6260743719212675`*^9, {3.626074489099233*^9, 3.6260744903638077`*^9}, {
   3.6265968266237445`*^9, 3.6265968952799945`*^9}, {3.6265985081081195`*^9, 
   3.6265985390612445`*^9}, {3.630060709901251*^9, 3.630060726526251*^9}, {
   3.6300615285584774`*^9, 3.6300615367616024`*^9}, {3.6300616991209774`*^9, 
   3.6300618430272274`*^9}, {3.6300621188553524`*^9, 
   3.6300621217303524`*^9}, {3.6305837278159714`*^9, 
   3.6305837790431304`*^9}, {3.6305843230201235`*^9, 
   3.6305843240357485`*^9}, {3.634298179115587*^9, 3.634298220084337*^9}, {
   3.6369669687558937`*^9, 3.6369669760300293`*^9}, {3.636967082674151*^9, 
   3.636967084089758*^9}, {3.636967129530856*^9, 3.636967143314374*^9}, {
   3.642543652697906*^9, 3.642543661744628*^9}, {3.642589060867399*^9, 
   3.642589178536549*^9}, {3.6425892105919867`*^9, 3.642589233685219*^9}, {
   3.642589264279209*^9, 3.64258926786456*^9}, {3.684105811823826*^9, 
   3.6841058163732443`*^9}, {3.69703567426682*^9, 3.697035679529521*^9}},
 Background->RGBColor[0.88, 1, 0.88]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numeric Results", "Subsection",
 CellChangeTimes->{{3.630060878713751*^9, 3.630060886760626*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"MSEresources", "=", "\"\<Speed\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.6300619041522274`*^9, 3.6300619146053524`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["test4speed",
     Background->RGBColor[1, 1, 0]], 
    StyleBox["=",
     Background->RGBColor[1, 1, 0]], 
    RowBox[{
     StyleBox[
      RowBox[{"{", 
       RowBox[{
       "header", ",", "noM", ",", "noU", ",", "noD", ",", "noAttr", ",", 
        "distanceMatrices", ",", "matchMatrix", ",", "mate"}], "}"}],
      Background->RGBColor[1, 1, 0]], "=", 
     RowBox[{"import", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\</import/\>\"", 
        "<>", "\"\<round1m1-1.xls.pre.dat\>\""}], ",", "\"\<precomp\>\"", ",",
        "True", ",", "False"}], "]"}]}]}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.6300613565584774`*^9, 3.6300613582147274`*^9}, {
  3.6300613936991024`*^9, 3.6300614669647274`*^9}, {3.6300619289022274`*^9, 
  3.6300619420272274`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5.1113280999999997078`6.729133672819498", ",", "Null"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6300614913866024`*^9, 3.6300615470741024`*^9, {3.6300616437616024`*^9, 
   3.6300616681678524`*^9}, 3.6300619211678524`*^9, 3.6300619518084774`*^9, 
   3.6300620074178524`*^9, 3.6300621444803524`*^9, 3.6327280619405355`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ByteCount", "/@", 
  RowBox[{"{", 
   RowBox[{
   "header", ",", "noM", ",", "noU", ",", "noD", ",", "noAttr", ",", 
    "distanceMatrices", ",", "matchMatrix", ",", "mate"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6300614825584774`*^9, 3.6300615066053524`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "320", ",", "16", ",", "528", ",", "528", ",", "16", ",", "5806128", ",", 
   "1306128", ",", "133128"}], "}"}]], "Output",
 CellChangeTimes->{3.6300615075428524`*^9, 3.6300619212147274`*^9, 
  3.6300619536678524`*^9, 3.6300620100116024`*^9, 3.6300621501834774`*^9, 
  3.6327280634874105`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plus", "@@", "%"}]], "Input",
 CellChangeTimes->{{3.6300615101522274`*^9, 3.6300615122147274`*^9}}],

Cell[BoxData["7246792"], "Output",
 CellChangeTimes->{3.6300615128553524`*^9, 3.6300619545584774`*^9, 
  3.6300620106053524`*^9, 3.6300621513241024`*^9, 3.6327280646924887`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"MSEresources", "=", "\"\<Memory\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.6300619041522274`*^9, 3.6300619146053524`*^9}, {
  3.6300619793397274`*^9, 3.6300619818866024`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["test4memory",
     Background->RGBColor[1, 1, 0]], 
    StyleBox["=",
     Background->RGBColor[1, 1, 0]], 
    RowBox[{
     StyleBox[
      RowBox[{"{", 
       RowBox[{
       "header", ",", "noM", ",", "noU", ",", "noD", ",", "noAttr", ",", 
        "distanceMatrices", ",", "matchMatrix", ",", "mate"}], "}"}],
      Background->RGBColor[1, 1, 0]], "=", 
     RowBox[{"import", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\</import/\>\"", 
        "<>", "\"\<round1m1-1.xls.pre.dat\>\""}], ",", "\"\<precomp\>\"", ",",
        "True", ",", "False"}], "]"}]}]}], ";"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.6300613565584774`*^9, 3.6300613582147274`*^9}, {
  3.6300613936991024`*^9, 3.6300614669647274`*^9}, {3.6300619289022274`*^9, 
  3.6300619681366024`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.4833983999999995618`6.672207245773311", ",", "Null"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6300614913866024`*^9, 3.6300615470741024`*^9, {3.6300616437616024`*^9, 
   3.6300616681678524`*^9}, 3.6300619211678524`*^9, {3.6300619518084774`*^9, 
   3.6300619872772274`*^9}, 3.6300620235741024`*^9, 3.6300621642616024`*^9, 
   3.6327280745606527`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ByteCount", "/@", 
  RowBox[{"{", 
   RowBox[{
   "header", ",", "noM", ",", "noU", ",", "noD", ",", "noAttr", ",", 
    "distanceMatrices", ",", "matchMatrix", ",", "mate"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6300614825584774`*^9, 3.6300615066053524`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "320", ",", "16", ",", "528", ",", "528", ",", "16", ",", "5806128", ",", 
   "1306128", ",", "133128"}], "}"}]], "Output",
 CellChangeTimes->{3.6300615075428524`*^9, 3.6300619212147274`*^9, 
  3.6300619536678524`*^9, 3.6300620257772274`*^9, 3.6300621643241024`*^9, 
  3.632728079153426*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plus", "@@", "%"}]], "Input",
 CellChangeTimes->{{3.6300615101522274`*^9, 3.6300615122147274`*^9}}],

Cell[BoxData["7246792"], "Output",
 CellChangeTimes->{3.6300615128553524`*^9, 3.6300619545584774`*^9, 
  3.6300621648397274`*^9, 3.632728080019637*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"test4speed", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "===", 
  RowBox[{"test4memory", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6300620510116024`*^9, 3.6300620810584774`*^9}, {
  3.6300621842303524`*^9, 3.6300621911834774`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.6300620640116024`*^9, 3.6300620814647274`*^9}, {
   3.6300621671366024`*^9, 3.6300621916991024`*^9}, 3.632728080937606*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ClearAll", "[", 
  RowBox[{
  "test4speed", ",", "test4memory", ",", "header", ",", "noM", ",", "noU", 
   ",", "noD", ",", "noAttr", ",", "distanceMatrices", ",", "matchMatrix", 
   ",", "mate"}], "]"}]], "Input",
 CellChangeTimes->{{3.6300621947459774`*^9, 3.6300622324334774`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{1366, 702},
WindowMargins->{{2, Automatic}, {Automatic, 78}},
ShowSelection->True,
Magnification->1.25,
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3626605951-7086715"->{
  Cell[45522, 1296, 1141, 20, 845, "Print",
   CellTags->"Info3626605951-7086715"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3626605951-7086715", 73503, 1996}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 197, 3, 81, "Section"],
Cell[CellGroupData[{
Cell[801, 29, 110, 1, 44, "Subsubsection"],
Cell[914, 32, 272, 5, 67, "Text"],
Cell[1189, 39, 179, 4, 40, "Input"],
Cell[1371, 45, 148, 3, 40, "Input"],
Cell[1522, 50, 132, 2, 40, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1691, 57, 251, 5, 56, "Subsection"],
Cell[CellGroupData[{
Cell[1967, 66, 101, 1, 44, "Subsubsection"],
Cell[2071, 69, 186, 4, 250, "Text"],
Cell[2260, 75, 2017, 45, 1175, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[4302, 124, 434, 8, 140, "Input"],
Cell[4739, 134, 447, 8, 140, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5223, 147, 413, 9, 140, "Input"],
Cell[5639, 158, 342, 6, 140, "Output"]
}, Open  ]],
Cell[5996, 167, 234, 4, 140, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[6267, 176, 102, 1, 35, "Subsubsection"],
Cell[6372, 179, 2350, 58, 1087, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[8747, 241, 283, 6, 140, "Input"],
Cell[9033, 249, 330, 7, 140, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9400, 261, 131, 2, 140, "Input"],
Cell[9534, 265, 215, 5, 140, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9786, 275, 645, 14, 243, "Input"],
Cell[10434, 291, 160, 4, 140, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10631, 300, 148, 3, 140, "Input"],
Cell[10782, 305, 243, 5, 140, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11062, 315, 179, 4, 140, "Input"],
Cell[11244, 321, 254, 6, 140, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11535, 332, 178, 4, 140, "Input"],
Cell[11716, 338, 333, 7, 140, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12086, 350, 324, 9, 140, "Input"],
Cell[12413, 361, 122, 2, 140, "Output"]
}, Open  ]],
Cell[12550, 366, 158, 3, 140, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[12745, 374, 102, 1, 35, "Subsubsection"],
Cell[12850, 377, 1150, 24, 635, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[14025, 405, 451, 11, 195, "Input"],
Cell[14479, 418, 193, 4, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14709, 427, 146, 3, 112, "Input"],
Cell[14858, 432, 292, 6, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15187, 443, 111, 3, 112, "Input"],
Cell[15301, 448, 273, 6, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15611, 459, 178, 4, 112, "Input"],
Cell[15792, 465, 353, 7, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16182, 477, 324, 9, 112, "Input"],
Cell[16509, 488, 147, 2, 112, "Output"]
}, Open  ]],
Cell[16671, 493, 130, 2, 112, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[16838, 500, 173, 2, 35, "Subsubsection"],
Cell[17014, 504, 519, 8, 283, "Text"],
Cell[17536, 514, 171, 3, 120, "Text"],
Cell[17710, 519, 3769, 92, 1321, "Input",
 InitializationCell->True],
Cell[21482, 613, 191, 2, 120, "Text"],
Cell[CellGroupData[{
Cell[21698, 619, 153, 3, 112, "Input"],
Cell[21854, 624, 193, 3, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22084, 632, 446, 11, 195, "Input"],
Cell[22533, 645, 329, 7, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22899, 657, 180, 4, 112, "Input"],
Cell[23082, 663, 195, 3, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23314, 671, 445, 11, 195, "Input"],
Cell[23762, 684, 250, 5, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24049, 694, 180, 4, 112, "Input"],
Cell[24232, 700, 168, 2, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24437, 707, 223, 4, 112, "Input"],
Cell[24663, 713, 120, 2, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24820, 720, 453, 12, 195, "Input"],
Cell[25276, 734, 99, 1, 112, "Output"]
}, Open  ]],
Cell[25390, 738, 224, 4, 112, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[25651, 747, 452, 8, 66, "Subsubsection"],
Cell[26106, 757, 386, 8, 283, "Text"],
Cell[26495, 767, 895, 23, 331, "Input",
 InitializationCell->True],
Cell[27393, 792, 466, 7, 366, "Text"],
Cell[CellGroupData[{
Cell[27884, 803, 42, 0, 112, "Input"],
Cell[27929, 805, 81, 1, 112, "Output"]
}, Open  ]],
Cell[28025, 809, 817, 17, 1321, "Input",
 InitializationCell->True],
Cell[28845, 828, 2524, 59, 1245, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[31394, 891, 738, 15, 268, "Input"],
Cell[32135, 908, 529, 10, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32701, 923, 248, 5, 112, "Input"],
Cell[32952, 930, 357, 8, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33346, 943, 196, 3, 112, "Input"],
Cell[33545, 948, 341, 5, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33923, 958, 252, 5, 112, "Input"],
Cell[34178, 965, 447, 7, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34662, 977, 129, 2, 112, "Input"],
Cell[34794, 981, 247, 3, 112, "Output"]
}, Open  ]],
Cell[35056, 987, 183, 3, 112, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35288, 996, 207, 3, 56, "Subsection"],
Cell[35498, 1001, 105, 1, 210, "Input"],
Cell[35606, 1004, 434, 9, 210, "Input"],
Cell[CellGroupData[{
Cell[36065, 1017, 249, 7, 210, "Input"],
Cell[36317, 1026, 162, 4, 210, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36516, 1035, 176, 4, 210, "Input"],
Cell[36695, 1041, 519, 13, 210, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37251, 1059, 298, 7, 210, "Input"],
Cell[37552, 1068, 197, 6, 478, "Print"]
}, Open  ]],
Cell[37764, 1077, 162, 3, 210, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[37963, 1085, 154, 2, 45, "Subsection"],
Cell[38120, 1089, 370, 8, 58, "Input"],
Cell[CellGroupData[{
Cell[38515, 1101, 220, 6, 58, "Input"],
Cell[38738, 1109, 161, 4, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38936, 1118, 353, 8, 58, "Input"],
Cell[39292, 1128, 306, 6, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39635, 1139, 327, 8, 58, "Input"],
Cell[39965, 1149, 234, 5, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40236, 1159, 275, 7, 58, "Input"],
Cell[40514, 1168, 183, 4, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40734, 1177, 482, 13, 58, "Input"],
Cell[41219, 1192, 1099, 26, 156, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42355, 1223, 298, 5, 58, "Input"],
Cell[42656, 1230, 169, 4, 58, "Output"]
}, Open  ]],
Cell[42840, 1237, 186, 3, 58, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[43075, 1246, 157, 2, 80, "Subchapter"],
Cell[CellGroupData[{
Cell[43257, 1252, 90, 1, 81, "Section"],
Cell[43350, 1255, 2025, 33, 1397, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[45400, 1292, 119, 2, 112, "Input"],
Cell[45522, 1296, 1141, 20, 845, "Print",
 CellTags->"Info3626605951-7086715"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[46712, 1322, 394, 5, 63, "Section"],
Cell[CellGroupData[{
Cell[47131, 1331, 96, 1, 56, "Subsection"],
Cell[47230, 1334, 3550, 93, 426, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[50829, 1433, 544, 9, 127, "Section"],
Cell[CellGroupData[{
Cell[51398, 1446, 94, 1, 56, "Subsection"],
Cell[51495, 1449, 15626, 349, 1462, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[67158, 1803, 103, 1, 56, "Subsection"],
Cell[67264, 1806, 160, 3, 40, "Input"],
Cell[CellGroupData[{
Cell[67449, 1813, 899, 24, 97, "Input"],
Cell[68351, 1839, 366, 7, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68754, 1851, 288, 6, 40, "Input"],
Cell[69045, 1859, 335, 7, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69417, 1871, 123, 2, 40, "Input"],
Cell[69543, 1875, 177, 2, 40, "Output"]
}, Open  ]],
Cell[69735, 1880, 214, 4, 40, "Input"],
Cell[CellGroupData[{
Cell[69974, 1888, 900, 24, 97, "Input"],
Cell[70877, 1914, 396, 8, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71310, 1927, 288, 6, 40, "Input"],
Cell[71601, 1935, 333, 7, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71971, 1947, 123, 2, 40, "Input"],
Cell[72097, 1951, 151, 2, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72285, 1958, 297, 7, 40, "Input"],
Cell[72585, 1967, 177, 2, 40, "Output"]
}, Open  ]],
Cell[72777, 1972, 308, 6, 69, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

